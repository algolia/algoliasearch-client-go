name: Setup

description: Setup CI environment.

inputs:
  type:
    description: Type of setup, `minimal` will only run the JavaScript installation.
    required: false
  workflow_name:
    description: Name of the workflow that is executing this action.
    required: false

runs:
  using: composite
  steps:
    - name: Read current GitHub Actions cache version
      shell: bash
      run: echo "CACHE_VERSION=$(< .github/.cache_version)" >> $GITHUB_ENV

    - name: Install Java
      if: inputs.type != 'minimal'
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: 11.0.4
        cache: gradle

    - name: Validate gradle wrapper
      if: inputs.type != 'minimal'
      uses: gradle/wrapper-validation-action@v1

    - name: Install Node
      uses: actions/setup-node@v2
      with:
        node-version-file: .nvmrc
        cache: yarn

    - name: Restore cache
      uses: ./.github/actions/cache
      with:
        # We want to load the java formatter
        language: java

    - name: Setting diff outputs variables
      if: inputs.type != 'minimal'
      id: diff
      shell: bash
      run: |
        previousCommit=${{ github.event.before }}
        baseRef=${{ inputs.workflow_name == 'process-release' && 'main' || github.base_ref }}
        origin=$( [[ -z $baseRef ]] && echo $previousCommit || echo "origin/$baseRef" )

        yarn workspace scripts setRunVariables "$origin"

    - name: Compute specs matrix
      if: inputs.type != 'minimal'
      id: spec-matrix
      shell: bash
      run: |
        base_changed=${{ steps.diff.outputs.GITHUB_ACTIONS_CHANGED > 0 || steps.diff.outputs.SCRIPTS_CHANGED > 0 || steps.diff.outputs.COMMON_SPECS_CHANGED > 0 }}

        matrix=$(yarn workspace scripts createMatrix $base_changed ${{ steps.diff.outputs.ORIGIN_BRANCH }})

        if [[ $matrix == '{"client":["no-run"]}' ]]; then
          run="false"
        else
          run="true"
        fi

        echo "Running spec matrix: $run"
        echo "Spec matrix: $(echo $matrix | jq .)"

        echo "::set-output name=MATRIX::$matrix"
        echo "::set-output name=RUN_SPECS::$run"

    - name: Compute the JS client build matrix
      if: inputs.type != 'minimal'
      id: js-matrix
      shell: bash
      run: |
        base_changed=${{ steps.diff.outputs.GITHUB_ACTIONS_CHANGED > 0 || steps.diff.outputs.COMMON_SPECS_CHANGED > 0 || steps.diff.outputs.SCRIPTS_CHANGED > 0 || steps.diff.outputs.GENERATORS_CHANGED > 0 || steps.diff.outputs.JS_TEMPLATE_CHANGED > 0 || steps.diff.outputs.JS_COMMON_CHANGED > 0 }}
        algoliasearch_changed=${{ steps.diff.outputs.JS_ALGOLIASEARCH_CHANGED > 0 }}
        common_changed=${{ steps.diff.outputs.JS_COMMON_CHANGED > 0 }}

        matrix=$(yarn workspace scripts createMatrix $base_changed ${{ steps.diff.outputs.ORIGIN_BRANCH }} javascript)

        if [[ $algoliasearch_changed == 'true' || $base_changed == 'true' ]]; then
          echo "Running algoliasearch: true"
          echo "::set-output name=RUN_ALGOLIASEARCH::true"
        fi

        if [[ $matrix == '{"client":["no-run"]}' ]]; then
          run="false"
        else
          run="true"
        fi

        echo "Running javascript matrix: $run"
        echo "Javascript matrix: $(echo $matrix | jq .)"

        echo "::set-output name=MATRIX::$matrix"
        echo "::set-output name=RUN_CLIENT::$run"

        if [[ $base_changed == 'true' ||  $common_changed == 'true' ]]; then
          echo "Running common javascript: true"
          echo "::set-output name=RUN_COMMON::true"
        fi

    - name: Compute the Java client build matrix
      if: inputs.type != 'minimal'
      id: java-matrix
      shell: bash
      run: |
        base_changed=${{ steps.diff.outputs.GITHUB_ACTIONS_CHANGED > 0 || steps.diff.outputs.COMMON_SPECS_CHANGED > 0 || steps.diff.outputs.SCRIPTS_CHANGED > 0 || steps.diff.outputs.GENERATORS_CHANGED > 0 || steps.diff.outputs.JAVA_TEMPLATE_CHANGED > 0 }}

        matrix=$(yarn workspace scripts createMatrix $base_changed ${{ steps.diff.outputs.ORIGIN_BRANCH }} java)

        if [[ $matrix == '{"client":["no-run"]}' ]]; then
          run="false"
        else
          run="true"
        fi

        echo "Running java matrix: $run"
        echo "Java matrix: $(echo $matrix | jq .)"

        echo "::set-output name=MATRIX::$matrix"
        echo "::set-output name=RUN_CLIENT::$run"

    - name: Compute the PHP client build matrix
      if: inputs.type != 'minimal'
      id: php-matrix
      shell: bash
      run: |
        base_changed=${{ steps.diff.outputs.GITHUB_ACTIONS_CHANGED > 0 || steps.diff.outputs.COMMON_SPECS_CHANGED > 0 || steps.diff.outputs.SCRIPTS_CHANGED > 0 || steps.diff.outputs.GENERATORS_CHANGED > 0 || steps.diff.outputs.PHP_TEMPLATE_CHANGED > 0 }}

        matrix=$(yarn workspace scripts createMatrix $base_changed ${{ steps.diff.outputs.ORIGIN_BRANCH }} php)

        if [[ $matrix == '{"client":["no-run"]}' ]]; then
          run="false"
        else
          run="true"
        fi

        echo "Running php matrix: $run"
        echo "PHP matrix: $(echo $matrix | jq .)"

        echo "::set-output name=MATRIX::$matrix"
        echo "::set-output name=RUN_CLIENT::$run"

outputs:
  RUN_SPECS:
    description: Determine if the `specs` job should run
    value: ${{ steps.spec-matrix.outputs.RUN_SPECS }}

  RUN_SCRIPTS:
    description: Determine if the `scripts` job should run
    value: ${{ steps.diff.outputs.GITHUB_ACTIONS_CHANGED > 0 || steps.diff.outputs.SCRIPTS_CHANGED > 0 }}

  SPECS_MATRIX:
    description: The generated `specs` matrix
    value: ${{ steps.spec-matrix.outputs.MATRIX }}

  RUN_JS:
    description: Determine if the `client-javascript` job should run
    value: ${{ steps.js-matrix.outputs.RUN_CLIENT }}

  RUN_JS_ALGOLIASEARCH:
    description: Determine if the `client-javascript-algoliasearch` job should run
    value: ${{ steps.js-matrix.outputs.RUN_ALGOLIASEARCH }}

  RUN_JS_COMMON:
    description: Whether to build JS client common folders when RUN_JS is false
    value: ${{ steps.js-matrix.outputs.RUN_COMMON }}

  JS_MATRIX:
    description: The generated `client-javascript` matrix
    value: ${{ steps.js-matrix.outputs.MATRIX }}

  RUN_JAVA:
    description: Determine if the `client-java` job should run
    value: ${{ steps.java-matrix.outputs.RUN_CLIENT }}

  JAVA_MATRIX:
    description: The generated `client-java` matrix
    value: ${{ steps.java-matrix.outputs.MATRIX }}

  RUN_PHP:
    description: Determine if the `client-php` job should run
    value: ${{ steps.php-matrix.outputs.RUN_CLIENT }}

  PHP_MATRIX:
    description: The generated `client-php` matrix
    value: ${{ steps.php-matrix.outputs.MATRIX }}

  RUN_JS_TESTS:
    description: Determine if the `client_javascript_tests` job should run
    value: ${{ steps.diff.outputs.JS_COMMON_TESTS_CHANGED > 0 }}

  RUN_CTS:
    description: Determine if the `cts` job should run
    value: ${{
      steps.diff.outputs.GITHUB_ACTIONS_CHANGED > 0 ||
      steps.diff.outputs.SCRIPTS_CHANGED > 0 ||
      steps.diff.outputs.SPECS_CHANGED > 0 ||
      steps.diff.outputs.TESTS_CHANGED > 0 ||
      steps.diff.outputs.JS_CLIENT_CHANGED > 0 ||
      steps.diff.outputs.JS_TEMPLATE_CHANGED > 0 ||
      steps.diff.outputs.JAVA_CLIENT_CHANGED > 0 ||
      steps.diff.outputs.JAVA_TEMPLATE_CHANGED > 0 }}

  RUN_CODEGEN:
    description: Determine if the `codegen` job should run
    value: ${{
      steps.spec-matrix.outputs.RUN_SPECS == 'true' ||
      steps.js-matrix.outputs.RUN_CLIENT == 'true' ||
      steps.java-matrix.outputs.RUN_CLIENT == 'true' ||
      steps.php-matrix.outputs.RUN_CLIENT == 'true' }}
