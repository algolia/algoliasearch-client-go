name: Setup

description: Setup CI environment.

inputs:
  type:
    description: Type of setup, `minimal` will only setup the JavaScript monorepo, `matrix` will set the run variables.
    required: false
  workflow_name:
    description: Name of the workflow that is executing this action.
    required: false

runs:
  using: composite
  steps:
    - name: Read current GitHub Actions cache version
      shell: bash
      run: |
        echo "CACHE_VERSION=$(< .github/.cache_version)" >> $GITHUB_ENV

    # Java for code generation
    - name: Install Java
      if: inputs.type != 'minimal'
      uses: actions/setup-java@v2
      with:
        distribution: zulu
        java-version: 11.0.4
        cache: gradle

    - name: Validate gradle wrapper
      if: inputs.type != 'minimal'
      uses: gradle/wrapper-validation-action@v1

    - name: Download Java formatter
      if: inputs.type != 'minimal'
      shell: bash
      run: curl -L "https://github.com/google/google-java-format/releases/download/v1.13.0/google-java-format-1.13.0-all-deps.jar" > /tmp/java-formatter.jar

    # JavaScript for monorepo and tooling
    - name: Install Node
      uses: actions/setup-node@v2
      with:
        node-version-file: .nvmrc
        cache: yarn

    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: node-modules-${{ env.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}

    - name: Get yarn cache directory path
      shell: bash
      id: yarn-cache-dir
      run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

    - name: Restore Yarn
      uses: actions/cache@v3
      with:
        path: ${{ steps.yarn-cache-dir.outputs.dir || '.yarn/cache' }}
        key: yarn-cache-${{ env.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}

    - name: Install JavaScript dependencies
      shell: bash
      run: YARN_ENABLE_IMMUTABLE_INSTALLS=false yarn install

    - name: Run composer update
      if: inputs.type != 'minimal'
      shell: bash
      run: |
        composer update --working-dir=clients/algoliasearch-client-php
        composer dump-autoload --working-dir=clients/algoliasearch-client-php

    # Computing jobs that should run
    - name: Setting diff outputs variables
      if: inputs.type == 'matrix'
      id: diff
      shell: bash
      run: |
        previousCommit=${{ github.event.before }}
        baseRef=${{ inputs.workflow_name == 'process-release' && 'main' || github.base_ref }}
        origin=$( [[ -z $baseRef ]] && echo $previousCommit || echo "origin/$baseRef" )

        yarn workspace scripts setRunVariables "$origin"

    - name: Compute specs matrix
      if: inputs.type == 'matrix'
      id: spec-matrix
      shell: bash
      run: yarn workspace scripts createMatrix ${{ steps.diff.outputs.ORIGIN_BRANCH }}

    - name: Compute the client codegen matrix
      if: inputs.type == 'matrix'
      id: gen-matrix
      shell: bash
      run: yarn workspace scripts createMatrix ${{ steps.diff.outputs.ORIGIN_BRANCH }} clients

    - name: Check if JavaScript utils should run
      if: inputs.type == 'matrix'
      id: js-utils
      shell: bash
      run: |
        if ${{ steps.gen-matrix.outputs.RUN_GEN_JAVASCRIPT || steps.diff.outputs.JS_ALGOLIASEARCH_CHANGED > 0 }}; then
          echo "Running algoliasearch: true"
          echo "::set-output name=RUN_JS_ALGOLIASEARCH::true"
        fi

        if ${{ steps.gen-matrix.outputs.RUN_GEN_JAVASCRIPT || steps.diff.outputs.JAVASCRIPT_UTILS_CHANGED > 0 }}; then
          echo "Running JavaScript utils: true"
          echo "::set-output name=RUN_JS_UTILS::true"
        fi

outputs:
  RUN_SCRIPTS:
    description: Determine if the `scripts` job should run
    value: ${{ steps.diff.outputs.GITHUB_ACTIONS_CHANGED > 0 || steps.diff.outputs.SCRIPTS_CHANGED > 0 }}

  SPECS_MATRIX:
    description: The generated `specs` matrix
    value: ${{ steps.spec-matrix.outputs.MATRIX }}

  RUN_GEN:
    description: Determine if the `client_gen` job should run
    value: ${{ steps.gen-matrix.outputs.RUN_GEN }}
  GEN_MATRIX:
    description: The generated `client_gen` matrix
    value: ${{ steps.gen-matrix.outputs.GEN_MATRIX }}

  RUN_GEN_JAVASCRIPT:
    description: Indicates if we plan to run the job for this language
    value: ${{ steps.gen-matrix.outputs.RUN_GEN_JAVASCRIPT }}
  RUN_GEN_JAVA:
    description: Indicates if we plan to run the job for this language
    value: ${{ steps.gen-matrix.outputs.RUN_GEN_JAVA }}
  RUN_GEN_PHP:
    description: Indicates if we plan to run the job for this language
    value: ${{ steps.gen-matrix.outputs.RUN_GEN_PHP }}

  RUN_JS_ALGOLIASEARCH:
    description: Determine if the `client-javascript-algoliasearch` job should run
    value: ${{ steps.js-utils.outputs.RUN_JS_ALGOLIASEARCH }}
  RUN_JS_UTILS:
    description: Whether to build JS client common folders when RUN_JS is false
    value: ${{ steps.js-utils.outputs.RUN_JS_UTILS }}
  RUN_JS_TESTS:
    description: Determine if the `client_javascript_tests` job should run
    value: ${{ steps.diff.outputs.JS_COMMON_TESTS_CHANGED > 0 }}

  RUN_CODEGEN:
    description: Determine if the `codegen` job should run
    value: ${{ steps.gen-matrix.outputs.RUN_GEN == 'true' }}
