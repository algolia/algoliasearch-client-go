searchParams:
  oneOf:
    - $ref: '#/searchParamsString'
    - $ref: '#/searchParamsObject'

searchParamsObject:
  allOf:
    - $ref: '#/baseSearchParams'
    - $ref: '#/requiredSearchParams'
    - $ref: '../../common/schemas/IndexSettings.yml#/indexSettingsAsSearchParams'

requiredSearchParams:
  type: object
  additionalProperties: false
  required:
    - query
  properties:
    query:
      $ref: '#/query'

baseSearchParams:
  type: object
  additionalProperties: false
  properties:
    similarQuery:
      type: string
      description: Overrides the query parameter and performs a more generic search that can be used to find "similar" results.
      default: ''
    filters:
      type: string
      description: Filter the query with numeric, facet and/or tag filters.
      default: ''
      # There could be a pattern for this one (complicated one)
    facetFilters:
      type: array
      items:
        type: string
      description: Filter hits by facet value.
      default: []
    optionalFilters:
      type: array
      items:
        type: string
      description: Create filters for ranking purposes, where records that match the filter are ranked higher, or lower in the case of a negative optional filter.
      default: []
    numericFilters:
      type: array
      items:
        type: string
      description: Filter on numeric attributes.
      default: []
    tagFilters:
      type: array
      items:
        type: string
      description: Filter hits by tags.
      default: []
    sumOrFiltersScores:
      type: boolean
      description: Determines how to calculate the total score for filtering.
      default: false
    facets:
      type: array
      items:
        type: string
      description: Retrieve facets and their facet values.
      default: []
    maxValuesPerFacet:
      type: integer
      description: Maximum number of facet values to return for each facet during a regular search.
      default: 100
    facetingAfterDistinct:
      type: boolean
      description: Force faceting to be applied after de-duplication (via the Distinct setting).
      default: false
    sortFacetValuesBy:
      type: string
      description: Controls how facet values are fetched.
      default: count
    page:
      $ref: '#/page'
    offset:
      type: integer
      description: Specify the offset of the first hit to return.
    length:
      type: integer
      description: Set the number of hits to retrieve (used only with offset).
      minimum: 1
      maximum: 1000
    aroundLatLng:
      type: string
      description: Search for entries around a central geolocation, enabling a geo search within a circular area.
      default: ''
    aroundLatLngViaIP:
      type: boolean
      description: Search for entries around a given location automatically computed from the requester's IP address.
      default: false
    aroundRadius:
      $ref: '#/aroundRadius'
    aroundPrecision:
      type: integer
      description: Precision of geo search (in meters), to add grouping by geo location to the ranking formula.
      default: 10
    minimumAroundRadius:
      type: integer
      description: Minimum radius (in meters) used for a geo search when aroundRadius is not set.
      minimum: 1
    insideBoundingBox:
      type: array
      items:
        type: number
      description: Search inside a rectangular area (in geo coordinates).
    insidePolygon:
      type: array
      items:
        type: number
      description: Search inside a polygon (in geo coordinates).
    naturalLanguages:
      type: array
      items:
        type: string
      description: This parameter changes the default values of certain parameters and settings that work best for a natural language query, such as ignorePlurals, removeStopWords, removeWordsIfNoResults, analyticsTags and ruleContexts. These parameters and settings work well together when the query is formatted in natural language instead of keywords, for example when your user performs a voice search.
      default: []
    ruleContexts:
      type: array
      items:
        type: string
      description: Enables contextual rules.
      default: []
    personalizationImpact:
      type: integer
      description: Define the impact of the Personalization feature.
      default: 100
    userToken:
      type: string
      description: Associates a certain user token with the current search.
    getRankingInfo:
      type: boolean
      description: Retrieve detailed ranking information.
      default: false
    clickAnalytics:
      type: boolean
      description: Enable the Click Analytics feature.
      default: false
    analytics:
      type: boolean
      description: Whether the current query will be taken into account in the Analytics.
      default: true
    analyticsTags:
      type: array
      items:
        type: string
      description: List of tags to apply to the query for analytics purposes.
      default: []
    percentileComputation:
      type: boolean
      description: Whether to include or exclude a query from the processing-time percentile computation.
      default: true
    enableABTest:
      type: boolean
      description: Whether this search should participate in running AB tests.
      default: true
    enableReRanking:
      type: boolean
      description: Whether this search should use AI Re-Ranking.
      default: true

searchParamsString:
  type: object
  additionalProperties: false
  properties:
    params:
      $ref: '#/paramsAsString'

paramsAsString:
  description: Search parameters as URL-encoded query string.
  type: string
  default: ''

query:
  type: string
  description: The text to search in the index.
  default: ''

page:
  type: integer
  description: Specify the page to retrieve.
  default: 0

cursor:
  type: string
  description: Cursor indicating the location to resume browsing from. Must match the value returned by the previous call.
  example: jMDY3M2MwM2QwMWUxMmQwYWI0ZTN

aroundRadius:
  description: Define the maximum radius for a geo search (in meters).
  oneOf:
    - type: integer
      minimum: 1
    - $ref: '#/aroundRadiusAll'

aroundRadiusAll:
  type: string
  enum: [all]
