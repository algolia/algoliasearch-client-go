Task:
  type: object
  additionalProperties: false
  properties:
    taskID:
      $ref: './common.yml#/taskID'
    sourceID:
      $ref: './common.yml#/sourceID'
    destinationID:
      $ref: './common.yml#/destinationID'
    trigger:
      $ref: '#/TaskTrigger'
    enabled:
      type: boolean
      default: true
      description: Whether the task is enabled or not.
    action:
      $ref: '#/ActionType'
    # lastCursorValue:
    #   type: integer
    #   format: int64
    createdAt:
      $ref: './common.yml#/createdAt'
    updatedAt:
      $ref: './common.yml#/updatedAt'
  required:
    - taskID
    - sourceID
    - destinationID
    - enabled
    - action
    - createdAt

TaskTrigger:
  oneOf:
    - $ref: '#/Trigger'
    - $ref: '#/ScheduleTrigger'

TaskCreate:
  type: object
  additionalProperties: false
  description: The payload for a task creation.
  properties:
    sourceID:
      $ref: './common.yml#/sourceID'
    destinationID:
      $ref: './common.yml#/destinationID'
    trigger:
      $ref: '#/TaskCreateTrigger'
    action:
      $ref: '#/ActionType'
    enabled:
      type: boolean
      description: Whether the task is enabled or not.
    # lastCursorValue:
    #   type: integer
    #   format: int64
  required:
    - sourceID
    - destinationID
    - trigger
    - action

TaskCreateTrigger:
  oneOf:
    - $ref: '#/TriggerInput'
    - $ref: '#/ScheduleTriggerInput'

TaskCreateResponse:
  type: object
  additionalProperties: false
  description: The response from the API after a task creation.
  properties:
    taskID:
      $ref: './common.yml#/taskID'
    createdAt:
      $ref: './common.yml#/createdAt'
  required:
    - taskID
    - createdAt

TaskUpdate:
  type: object
  additionalProperties: false
  description: The payload for a task update.
  properties:
    destinationID:
      $ref: './common.yml#/destinationID'
    trigger:
      $ref: '#/TriggerInput'
    enabled:
      type: boolean
      description: Whether the task is enabled or not.

TaskUpdateResponse:
  type: object
  description: The response from the API after a task update.
  additionalProperties: false
  properties:
    taskID:
      $ref: './common.yml#/taskID'
    updatedAt:
      $ref: './common.yml#/updatedAt'
  required:
    - taskID
    - updatedAt

TaskSearch:
  type: object
  additionalProperties: false
  properties:
    taskIDs:
      type: array
      items:
        type: string
  required:
    - taskIDs

ActionType:
  type: string
  description: The action to perform on the Algolia index.
  enum: ['replace', 'save', 'delete']

TriggerInput:
  type: object
  additionalProperties: false
  description: The trigger input of a task.
  properties:
    type:
      $ref: '#/TriggerType'
  required:
    - type

ScheduleTriggerInput:
  type: object
  additionalProperties: false
  description: The trigger input for a task of type 'schedule'.
  properties:
    type:
      $ref: '#/TriggerType'
    cron:
      $ref: '#/Cron'
  required:
    - type
    - cron

Trigger:
  type: object
  additionalProperties: false
  description: The trigger information of a task.
  properties:
    type:
      $ref: '#/TriggerType'
  required:
    - type

ScheduleTrigger:
  type: object
  additionalProperties: false
  description: The trigger information for a task of type 'schedule'.
  properties:
    type:
      $ref: '#/TriggerType'
    cron:
      $ref: '#/Cron'
    lastRun:
      description: The last time the scheduled task ran.
      type: string
    nextRun:
      description: The next scheduled run of the task.
      type: string
  required:
    - type
    - cron
    - lastRun
    - nextRun

TriggerType:
  type: string
  description: >
    The type of the task reflect how it can be used:
      - on_demand: a task that runs manually
      - schedule: a task that runs regularly, following a given cron expression
      - subscription: a task that runs after a subscription event is received from an integration (e.g. Webhook).
  enum: ['on_demand', 'schedule', 'subscription']

Cron:
  type: string
  description: A cron expression that represent at which regularity the task should run.
  example: '* * 1 * *'
