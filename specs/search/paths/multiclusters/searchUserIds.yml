post:
  tags:
    - Clusters
  operationId: searchUserIds
  summary: Search userID
  description: >
    Search for userIDs.

    The data returned will usually be a few seconds behind real time, because userID usage may take up to a few seconds propagate to the different clusters.

    To keep updates moving quickly, the index of userIDs isn't built synchronously with the mapping. Instead, the index is built once every 12h, at the same time as the update of userID usage. For example, when you perform a modification like adding or moving a userID, the search will report an outdated value until the next rebuild of the mapping, which takes place every 12h.

    Upon success, the response is 200 OK and contains the following userIDs data.
  requestBody:
    required: true
    content:
      application/json:
        schema:
          title: searchUserIdsParams
          type: object
          description: OK
          additionalProperties: false
          properties:
            query:
              type: string
              description: Query to search. The search is a prefix search with typoTolerance. Use empty query to retrieve all users.
            clusterName:
              $ref: '../../common/schemas/Cluster.yml#/clusterName'
            page:
              $ref: '../../../common/schemas/SearchParams.yml#/page'
            hitsPerPage:
              $ref: '../../../common/schemas/IndexSettings.yml#/hitsPerPage'
          required:
            - query
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            title: searchUserIdsResponse
            type: object
            description: userIDs data.
            properties:
              hits:
                type: array
                description: List of user object matching the query.
                items:
                  type: object
                  properties:
                    userID:
                      $ref: '../../common/parameters.yml#/userID'
                    clusterName:
                      $ref: '../../common/schemas/Cluster.yml#/clusterName'
                    nbRecords:
                      $ref: '../../common/schemas/Cluster.yml#/nbRecords'
                    dataSize:
                      $ref: '../../common/schemas/Cluster.yml#/dataSize'
                    objectID:
                      type: string
                      description: userID of the requested user. Same as userID.
                    _highlightResult:
                      type: object
                      properties:
                        userID:
                          $ref: '../../common/schemas/Hit.yml#/highlightResult'
                        clusterName:
                          $ref: '../../common/schemas/Hit.yml#/highlightResult'
                      required:
                        - userID
                        - clusterName
                  required:
                    - userID
                    - clusterName
                    - nbRecords
                    - dataSize
                    - objectID
                    - _highlightResult
              nbHits:
                $ref: '../../common/schemas/SearchResponse.yml#/nbHits'
              page:
                $ref: '../../../common/schemas/SearchParams.yml#/page'
              hitsPerPage:
                $ref: '../../../common/parameters.yml#/hitsPerPage'
              updatedAt:
                $ref: '../../../common/parameters.yml#/updatedAt'
            required:
              - hits
              - nbHits
              - page
              - hitsPerPage
              - updatedAt
    '400':
      $ref: '../../../common/responses/BadRequest.yml'
    '402':
      $ref: '../../../common/responses/FeatureNotEnabled.yml'
    '403':
      $ref: '../../../common/responses/MethodNotAllowed.yml'
    '404':
      $ref: '../../../common/responses/IndexNotFound.yml'
