rule:
  type: object
  description: Rule object.
  additionalProperties: false
  properties:
    objectID:
      $ref: '../../../../common/parameters.yml#/objectID'
    conditions:
      type: array
      description: A list of conditions that should apply to activate a Rule. You can use up to 25 conditions per Rule.
      items:
        $ref: '#/condition'
    consequence:
      $ref: '#/consequence'
    description:
      type: string
      description: This field is intended for Rule management purposes, in particular to ease searching for Rules and presenting them to human readers. It's not interpreted by the API.
    enabled:
      type: boolean
      default: true
      description: Whether the Rule is enabled. Disabled Rules remain in the index, but aren't applied at query time.
    validity:
      type: array
      description: By default, Rules are permanently valid. When validity periods are specified, the Rule applies only during those periods; it's ignored the rest of the time. The list must not be empty.
      items:
        $ref: '#/timeRange'
  required:
    - objectID
    - consequence

condition:
  type: object
  additionalProperties: false
  properties:
    pattern:
      type: string
      description: Query pattern syntax.
    anchoring:
      $ref: '#/anchoring'
    alternatives:
      type: boolean
      description: Whether the pattern matches on plurals, synonyms, and typos.
      default: false
    context:
      type: string
      description: 'Rule context format: [A-Za-z0-9_-]+).'

anchoring:
  type: string
  description: Whether the pattern parameter must match the beginning or the end of the query string, or both, or none.
  enum: [is, startsWith, endsWith, contains]

consequence:
  type: object
  description: Consequence of the Rule.
  additionalProperties: false
  properties:
    params:
      $ref: '#/consequenceParams'
    promote:
      type: array
      description: Objects to promote as hits.
      items:
        $ref: '#/promote'
    filterPromotes:
      type: boolean
      default: false
      description: Only use in combination with the promote consequence. When true, promoted results will be restricted to match the filters of the current search. When false, the promoted results will show up regardless of the filters.
    hide:
      type: array
      description: Objects to hide from hits. Each object must contain an objectID field. By default, you can hide up to 50 items per rule.
      items:
        type: object
        description: Unique identifier of the object to hide.
        additionalProperties: false
        properties:
          objectID:
            $ref: '../../../../common/parameters.yml#/objectID'
        required:
          - objectID
    userData:
      type: object
      description: Custom JSON object that will be appended to the userData array in the response. This object isn't interpreted by the API. It's limited to 1kB of minified JSON.

consequenceParams:
  allOf:
    - $ref: '#/params'
    - $ref: '../../../../common/schemas/SearchParams.yml#/baseSearchParams'
    - $ref: '../../../../common/schemas/IndexSettings.yml#/indexSettingsAsSearchParams'

promote:
  type: object
  description: Object to promote as hits.
  additionalProperties: false
  properties:
    objectID:
      type: string
      description: Unique identifier of the object to promote.
    objectIDs:
      type: array
      description: Array of unique identifiers of the objects to promote.
      items:
        type: string
    position:
      type: integer
      description: The position to promote the objects to (zero-based). If you pass objectIDs, the objects are placed at this position as a group. For example, if you pass four objectIDs to position 0, the objects take the first four positions.
  required:
    - position

params:
  type: object
  description: Additional search parameters. Any valid search parameter is allowed.
  additionalProperties: false
  properties:
    query:
      type: string
      description: Query string.
    automaticFacetFilters:
      type: array
      description: Names of facets to which automatic filtering must be applied; they must match the facet name of a facet value placeholder in the query pattern.
      items:
        $ref: '#/automaticFacetFilter'
    automaticOptionalFacetFilters:
      type: object
      description: Same syntax as automaticFacetFilters, but the engine treats the filters as optional.
      items:
        $ref: '#/automaticFacetFilter'

automaticFacetFilter:
  type: object
  description: Automatic facet Filter.
  additionalProperties: false
  properties:
    facet:
      type: string
      description: Attribute to filter on. This must match a facet placeholder in the Rule's pattern.
    score:
      type: integer
      default: 1
      description: Score for the filter. Typically used for optional or disjunctive filters.
    disjunctive:
      type: boolean
      default: false
      description: Whether the filter is disjunctive (true) or conjunctive (false).
  required:
    - facet

timeRange:
  type: object
  additionalProperties: false
  properties:
    from:
      type: integer
      description: Lower bound of the time range (Unix timestamp).
    until:
      type: integer
      description: Upper bound of the time range (Unix timestamp).
  required:
    - from
    - until

updatedRuleResponse:
  type: object
  additionalProperties: false
  properties:
    objectID:
      $ref: '../../../../common/parameters.yml#/objectID'
    updatedAt:
      $ref: '../../../../common/parameters.yml#/updatedAt'
    taskID:
      $ref: '../../../../common/parameters.yml#/taskID'
  required:
    - objectID
    - updatedAt
    - taskID
