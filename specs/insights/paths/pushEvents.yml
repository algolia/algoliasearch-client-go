post:
  tags:
    - events
  operationId: pushEvents
  summary: Push events.
  description: |
    This command pushes an array of events.

    An event is
      - an action: `eventName`
      - performed in a context: `eventType`
      - at some point in time provided: `timestamp`
      - by an end user: `userToken`
      - on something: `index`


    Notes:
      - To be accepted, all events sent must be valid.
      - The size of the body must be *less than 2 MB*.
      - When an event is tied to an Algolia search, it must also provide a `queryID`. If that event is a `click`, their absolute `positions` should also be passed.
      - We consider that an `index` provides access to 2 resources: objects and filters. An event can only interact with a single resource type, but not necessarily on a single item. As such an event will accept an array of `objectIDs` or `filters`.
  requestBody:
    required: true
    content:
      application/json:
        schema:
          title: InsightEvents
          type: object
          description: Object containing the events sent.
          additionalProperties: false
          required:
            - events
          properties:
            events:
              type: array
              description: Array of events sent.
              items:
                title: InsightEvent
                type: object
                description: Insights event.
                additionalProperties: false
                maximum: 1000
                properties:
                  eventType:
                    $ref: '../common/enums.yml#/eventType'
                  eventName:
                    type: string
                    maximum: 64
                    description: A user-defined string used to categorize events.
                  index:
                    type: string
                    description: Name of the targeted index.
                  userToken:
                    type: string
                    pattern: '[a-zA-Z0-9_-=/+]{1,128}'
                    description: A user identifier. Depending if the user is logged-in or not, several strategies can be used from a sessionId to a technical identifier. You should always send pseudonymous or anonymous userTokens.
                  timestamp:
                    type: integer
                    format: int64
                    description: Time of the event expressed in milliseconds since the Unix epoch.
                  queryID:
                    type: string
                    description: Algolia queryID. This is required when an event is tied to a search.
                  objectIDs:
                    type: array
                    description: An array of index objectID. Limited to 20 objects. An event can’t have both objectIDs and filters at the same time.
                    items:
                      type: string
                  filters:
                    type: array
                    description: An array of filters. Limited to 10 filters. An event can’t have both objectIDs and filters at the same time.
                    items:
                      type: string
                  positions:
                    type: array
                    description: Position of the click in the list of Algolia search results. This field is required if a queryID is provided. One position must be provided for each objectID.
                    items:
                      type: integer
                required:
                  - eventType
                  - eventName
                  - index
                  - userToken
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            title: pushEventsResponse
            type: object
            additionalProperties: false
            required:
              - message
            properties:
              message:
                type: string
                description: A message confirming the event push.
    '400':
      $ref: '../../common/responses/BadRequest.yml'
    '401':
      $ref: '../../common/responses/Unauthorized.yml'
    '413':
      $ref: '../../common/responses/UnprocessableEntity.yml'
    '422':
      $ref: '../../common/responses/RequestEntityTooLarge.yml'
