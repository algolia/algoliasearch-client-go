{{! This file will be renamed to `node.ts` after generating the client }}

import type { Host, Requester } from '@algolia/client-common';
import { HttpRequester } from '@algolia/requester-node-http';

import { create{{capitalizedApiName}}Api } from './src/{{apiName}}Api';
import type { {{capitalizedApiName}}Api } from './src/{{apiName}}Api';

{{#hasRegionalHost}}
import type { Region } from './src/{{apiName}}Api';
{{/hasRegionalHost}}

export * from './src/{{apiName}}Api';

export function {{apiName}}Api(
  appId: string,
  apiKey: string,{{#hasRegionalHost}}region{{#fallbackToAliasHost}}?{{/fallbackToAliasHost}}: Region,{{/hasRegionalHost}}
  options?: { requester?: Requester; hosts?: Host[] }
): {{capitalizedApiName}}Api {
  if (!appId) {
    throw new Error("`appId` is missing.");
  }

  if (!apiKey) {
    throw new Error("`apiKey` is missing.");
  }

  {{#hasRegionalHost}}
  {{^fallbackToAliasHost}}
  if (!region) {
    throw new Error("`region` is missing.");
  }
  {{/fallbackToAliasHost}}
  {{/hasRegionalHost}}

  return create{{capitalizedApiName}}Api({
    appId,
    apiKey,
    {{#hasRegionalHost}}region,{{/hasRegionalHost}}
    timeouts: {
      connect: 2,
      read: 5,
      write: 30,
    },
    requester: options?.requester ?? new HttpRequester(),
    userAgents: [{ segment: 'Node.js', version: process.versions.node }],
    ...options,
  });
}
