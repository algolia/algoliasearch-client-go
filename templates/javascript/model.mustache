{{#models}}{{#model}}
{{#tsImports}}
import { {{classname}} } from '{{filename}}';
{{/tsImports}}

{{! We handle types that depend on other interfaces }}
{{#interfaces.size}}
{{#description}}
/**
* {{{description}}}
*/{{/description}}
export type {{classname}} = {{#oneOf}}{{{.}}} {{^-last}}|{{/-last}} {{/oneOf}}{{#allOf}}{{{.}}} {{^-last}}&{{/-last}} {{/allOf}};
{{/interfaces.size}}{{^interfaces.size}}
{{#description}}
/**
* {{{description}}}
*/{{/description}}{{^isEnum}}
export type {{classname}} = {{#parent}} {{{.}}} & {{/parent}} {
{{#vars}}{{#description}}
    /**
    * {{{description}}}
    */{{/description}}
    {{name}}{{^required}}?{{/required}}: {{#isEnum}}{{classname}}{{{nameInCamelCase}}}{{#isArray}}[]{{/isArray}}{{/isEnum}}{{^isEnum}}{{{dataType}}}{{#isNullable}} | null{{/isNullable}}{{/isEnum}};{{/vars}}
}
{{/isEnum}}
{{#hasEnums}}{{#vars}}{{#isEnum}}export type {{classname}}{{nameInCamelCase}} = {{#allowableValues}}{{#enumVars}}{{{value}}}{{^-last}}|{{/-last}}{{/enumVars}}{{/allowableValues}}{{/isEnum}}{{/vars}}{{/hasEnums}}
{{#isEnum}}export type {{classname}} = {{#allowableValues}}{{#enumVars}}{{{value}}}{{^-last}}|{{/-last}}{{/enumVars}}{{/allowableValues}}{{/isEnum}}

{{/interfaces.size}}{{/model}}{{/models}}
