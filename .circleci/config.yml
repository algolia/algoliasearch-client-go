version: 2.1

commands:
  credentials:
    description: "Fetch temporary credentials if needed"
    steps:
      - run:
          name: Retrieve temporary Algolia credentials if needed
          command: |
            if [ -z "ALGOLIA_ADMIN_KEY_MCM" ]; then
              curl -s https://algoliasearch-client-keygen.herokuapp.com | sh >> $BASH_ENV
            fi

  unit-tests:
    description: "Run the unit tests for Go << parameters.go_version >>"
    parameters:
      go_version:
        type: string
    steps:
      - run:
          name: Generate code for Go << parameters.go_version >>
          command: go generate ./...
      - run:
          name: Run unit tests for Go << parameters.go_version >>
          command: make unit-tests

  integration-tests:
    description: "Run the integration tests for Go << parameters.go_version >>"
    parameters:
      go_version:
        type: string
    steps:
      - run:
          name: Generate code for Go << parameters.go_version >>
          command: go generate ./...
      - run:
          name: Run integration tests for Go << parameters.go_version >>
          command: |
            if [ -z "ALGOLIA_ADMIN_KEY_MCM" ]; then
              make integration-tests-community
            else
              make integration-tests
            fi

jobs:
  format:
    docker:
      - image: cimg/go:1.14
    steps:
      - checkout
      - restore_cache:
          key: go-cache-1.14
      - run:
          name: Install golangci-lint linter
          command: curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin v1.25.0
      - run:
          name: Check formatting
          command: make lint

  unit-tests:
    parameters:
        go_version:
          type: string
    docker:
      - image: cimg/go:<< parameters.go_version >>
    steps:
      - checkout
      - restore_cache:
          key: go-cache-<< parameters.go_version >>
      - unit-tests:
          go_version: "<< parameters.go_version >>"
      - save_cache:
          key: go-cache-<< parameters.go_version >>
          paths:
            - "~/go/pkg"

  integration-tests:
    parameters:
        go_version:
          type: string
    docker:
      - image: cimg/go:<< parameters.go_version >>
    steps:
      - checkout
      - restore_cache:
          key: go-cache-<< parameters.go_version >>
      - credentials
      - integration-tests:
          go_version: "<< parameters.go_version >>"
      - save_cache:
          key: go-cache-<< parameters.go_version >>
          paths:
            - "~/go/pkg"

workflows:
  ci:
    jobs:
      - format

      - unit-tests:
          matrix:
              parameters:
                go_version:
                    - "1.13"
                    - "1.14"
                    - "1.15"
                    - "1.16"
                    - "1.17"

      - integration-tests:
          filters:
            branches:
              # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
              # https://circleci.com/blog/triggering-trusted-ci-jobs-on-untrusted-forks/
              ignore: /pull\/[0-9]+/
          matrix:
              parameters:
                go_version:
                    - "1.13"
                    - "1.14"
                    - "1.15"
                    - "1.16"
                    - "1.17"
