// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package insights

import (
	"encoding/json"
	"fmt"
)

// PushEventsResponse struct for PushEventsResponse
type PushEventsResponse struct {
	// A message confirming the event push.
	Message string `json:"message"`
}

// NewPushEventsResponse instantiates a new PushEventsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPushEventsResponse(message string) *PushEventsResponse {
	this := &PushEventsResponse{}
	this.Message = message
	return this
}

// NewPushEventsResponseWithDefaults instantiates a new PushEventsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPushEventsResponseWithDefaults() *PushEventsResponse {
	this := &PushEventsResponse{}
	return this
}

// GetMessage returns the Message field value
func (o *PushEventsResponse) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *PushEventsResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *PushEventsResponse) SetMessage(v string) {
	o.Message = v
}

func (o PushEventsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

func (o PushEventsResponse) String() string {
	out := ""
	out += fmt.Sprintf("  message=%v\n", o.Message)
	return fmt.Sprintf("PushEventsResponse {\n%s}", out)
}

type NullablePushEventsResponse struct {
	value *PushEventsResponse
	isSet bool
}

func (v NullablePushEventsResponse) Get() *PushEventsResponse {
	return v.value
}

func (v *NullablePushEventsResponse) Set(val *PushEventsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePushEventsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePushEventsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePushEventsResponse(val *PushEventsResponse) *NullablePushEventsResponse {
	return &NullablePushEventsResponse{value: val, isSet: true}
}

func (v NullablePushEventsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePushEventsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
