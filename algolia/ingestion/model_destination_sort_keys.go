// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package ingestion

import (
	"encoding/json"
	"fmt"
)

// DestinationSortKeys Property by which to sort the destinations.
type DestinationSortKeys string

// List of destinationSortKeys.
const (
	DESTINATION_SORT_KEYS_NAME       DestinationSortKeys = "name"
	DESTINATION_SORT_KEYS_TYPE       DestinationSortKeys = "type"
	DESTINATION_SORT_KEYS_UPDATED_AT DestinationSortKeys = "updatedAt"
	DESTINATION_SORT_KEYS_CREATED_AT DestinationSortKeys = "createdAt"
)

// All allowed values of DestinationSortKeys enum.
var AllowedDestinationSortKeysEnumValues = []DestinationSortKeys{
	"name",
	"type",
	"updatedAt",
	"createdAt",
}

func (v *DestinationSortKeys) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return fmt.Errorf("failed to unmarshal value '%s' for enum 'DestinationSortKeys': %w", string(src), err)
	}
	enumTypeValue := DestinationSortKeys(value)
	for _, existing := range AllowedDestinationSortKeysEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DestinationSortKeys", value)
}

// NewDestinationSortKeysFromValue returns a pointer to a valid DestinationSortKeys
// for the value passed as argument, or an error if the value passed is not allowed by the enum.
func NewDestinationSortKeysFromValue(v string) (*DestinationSortKeys, error) {
	ev := DestinationSortKeys(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DestinationSortKeys: valid values are %v", v, AllowedDestinationSortKeysEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise.
func (v DestinationSortKeys) IsValid() bool {
	for _, existing := range AllowedDestinationSortKeysEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to destinationSortKeys value.
func (v DestinationSortKeys) Ptr() *DestinationSortKeys {
	return &v
}
