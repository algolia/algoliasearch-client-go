// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package ingestion

import (
	"encoding/json"
	"fmt"
)

// RunTaskPayload struct for RunTaskPayload.
type RunTaskPayload struct {
	// Additional information that will be passed to the created run.
	RunMetadata map[string]any `json:"runMetadata,omitempty"`
}

type RunTaskPayloadOption func(f *RunTaskPayload)

func WithRunTaskPayloadRunMetadata(val map[string]any) RunTaskPayloadOption {
	return func(f *RunTaskPayload) {
		f.RunMetadata = val
	}
}

// NewRunTaskPayload instantiates a new RunTaskPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewRunTaskPayload(opts ...RunTaskPayloadOption) *RunTaskPayload {
	this := &RunTaskPayload{}
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptyRunTaskPayload return a pointer to an empty RunTaskPayload object.
func NewEmptyRunTaskPayload() *RunTaskPayload {
	return &RunTaskPayload{}
}

// GetRunMetadata returns the RunMetadata field value if set, zero value otherwise.
func (o *RunTaskPayload) GetRunMetadata() map[string]any {
	if o == nil || o.RunMetadata == nil {
		var ret map[string]any
		return ret
	}
	return o.RunMetadata
}

// GetRunMetadataOk returns a tuple with the RunMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunTaskPayload) GetRunMetadataOk() (map[string]any, bool) {
	if o == nil || o.RunMetadata == nil {
		return nil, false
	}
	return o.RunMetadata, true
}

// HasRunMetadata returns a boolean if a field has been set.
func (o *RunTaskPayload) HasRunMetadata() bool {
	if o != nil && o.RunMetadata != nil {
		return true
	}

	return false
}

// SetRunMetadata gets a reference to the given map[string]any and assigns it to the RunMetadata field.
func (o *RunTaskPayload) SetRunMetadata(v map[string]any) *RunTaskPayload {
	o.RunMetadata = v
	return o
}

func (o RunTaskPayload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.RunMetadata != nil {
		toSerialize["runMetadata"] = o.RunMetadata
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal RunTaskPayload: %w", err)
	}

	return serialized, nil
}

func (o RunTaskPayload) String() string {
	out := ""
	out += fmt.Sprintf("  runMetadata=%v\n", o.RunMetadata)
	return fmt.Sprintf("RunTaskPayload {\n%s}", out)
}
