// File generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation.
package ingestion

import (
	"encoding/json"
	"fmt"
)

// AuthenticationSearch Request body for searching for authentication resources.
type AuthenticationSearch struct {
	AuthenticationIDs []string `json:"authenticationIDs"`
}

// NewAuthenticationSearch instantiates a new AuthenticationSearch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewAuthenticationSearch(authenticationIDs []string) *AuthenticationSearch {
	this := &AuthenticationSearch{}
	this.AuthenticationIDs = authenticationIDs
	return this
}

// NewEmptyAuthenticationSearch return a pointer to an empty AuthenticationSearch object.
func NewEmptyAuthenticationSearch() *AuthenticationSearch {
	return &AuthenticationSearch{}
}

// GetAuthenticationIDs returns the AuthenticationIDs field value.
func (o *AuthenticationSearch) GetAuthenticationIDs() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AuthenticationIDs
}

// GetAuthenticationIDsOk returns a tuple with the AuthenticationIDs field value
// and a boolean to check if the value has been set.
func (o *AuthenticationSearch) GetAuthenticationIDsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthenticationIDs, true
}

// SetAuthenticationIDs sets field value.
func (o *AuthenticationSearch) SetAuthenticationIDs(v []string) *AuthenticationSearch {
	o.AuthenticationIDs = v
	return o
}

func (o AuthenticationSearch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["authenticationIDs"] = o.AuthenticationIDs
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal AuthenticationSearch: %w", err)
	}

	return serialized, nil
}

func (o AuthenticationSearch) String() string {
	out := ""
	out += fmt.Sprintf("  authenticationIDs=%v\n", o.AuthenticationIDs)
	return fmt.Sprintf("AuthenticationSearch {\n%s}", out)
}

type NullableAuthenticationSearch struct {
	value *AuthenticationSearch
	isSet bool
}

func (v NullableAuthenticationSearch) Get() *AuthenticationSearch {
	return v.value
}

func (v *NullableAuthenticationSearch) Set(val *AuthenticationSearch) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationSearch) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationSearch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationSearch(val *AuthenticationSearch) *NullableAuthenticationSearch {
	return &NullableAuthenticationSearch{value: val, isSet: true}
}

func (v NullableAuthenticationSearch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value) //nolint:wrapcheck
}

func (v *NullableAuthenticationSearch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value) //nolint:wrapcheck
}
