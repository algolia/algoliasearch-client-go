// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package ingestion

import (
	"encoding/json"
	"fmt"
)

// OnDemandDateUtilsInput The input for an `onDemand` task whose source is of type `bigquery` and for which extracted data spans a given time range.
type OnDemandDateUtilsInput struct {
	// The start date of the extraction (RFC3339 format).
	StartDate string `json:"startDate" validate:"required"`
	// The end date of the extraction (RFC3339 format).
	EndDate string `json:"endDate" validate:"required"`
}

// NewOnDemandDateUtilsInput instantiates a new OnDemandDateUtilsInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnDemandDateUtilsInput(startDate string, endDate string) *OnDemandDateUtilsInput {
	this := &OnDemandDateUtilsInput{}
	this.StartDate = startDate
	this.EndDate = endDate
	return this
}

// NewOnDemandDateUtilsInputWithDefaults instantiates a new OnDemandDateUtilsInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnDemandDateUtilsInputWithDefaults() *OnDemandDateUtilsInput {
	this := &OnDemandDateUtilsInput{}
	return this
}

// GetStartDate returns the StartDate field value
func (o *OnDemandDateUtilsInput) GetStartDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *OnDemandDateUtilsInput) GetStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *OnDemandDateUtilsInput) SetStartDate(v string) {
	o.StartDate = v
}

// GetEndDate returns the EndDate field value
func (o *OnDemandDateUtilsInput) GetEndDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
func (o *OnDemandDateUtilsInput) GetEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndDate, true
}

// SetEndDate sets field value
func (o *OnDemandDateUtilsInput) SetEndDate(v string) {
	o.EndDate = v
}

func (o OnDemandDateUtilsInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["startDate"] = o.StartDate
	}
	if true {
		toSerialize["endDate"] = o.EndDate
	}
	return json.Marshal(toSerialize)
}

func (o OnDemandDateUtilsInput) String() string {
	out := ""
	out += fmt.Sprintf("  startDate=%v\n", o.StartDate)
	out += fmt.Sprintf("  endDate=%v\n", o.EndDate)
	return fmt.Sprintf("OnDemandDateUtilsInput {\n%s}", out)
}

type NullableOnDemandDateUtilsInput struct {
	value *OnDemandDateUtilsInput
	isSet bool
}

func (v NullableOnDemandDateUtilsInput) Get() *OnDemandDateUtilsInput {
	return v.value
}

func (v *NullableOnDemandDateUtilsInput) Set(val *OnDemandDateUtilsInput) {
	v.value = val
	v.isSet = true
}

func (v NullableOnDemandDateUtilsInput) IsSet() bool {
	return v.isSet
}

func (v *NullableOnDemandDateUtilsInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnDemandDateUtilsInput(val *OnDemandDateUtilsInput) *NullableOnDemandDateUtilsInput {
	return &NullableOnDemandDateUtilsInput{value: val, isSet: true}
}

func (v NullableOnDemandDateUtilsInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnDemandDateUtilsInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
