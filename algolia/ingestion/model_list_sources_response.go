// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package ingestion

import (
	"encoding/json"
	"fmt"
)

// ListSourcesResponse struct for ListSourcesResponse
type ListSourcesResponse struct {
	Sources    []Source   `json:"sources"`
	Pagination Pagination `json:"pagination"`
}

// NewListSourcesResponse instantiates a new ListSourcesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListSourcesResponse(sources []Source, pagination Pagination) *ListSourcesResponse {
	this := &ListSourcesResponse{}
	this.Sources = sources
	this.Pagination = pagination
	return this
}

// NewListSourcesResponseWithDefaults instantiates a new ListSourcesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListSourcesResponseWithDefaults() *ListSourcesResponse {
	this := &ListSourcesResponse{}
	return this
}

// GetSources returns the Sources field value
func (o *ListSourcesResponse) GetSources() []Source {
	if o == nil {
		var ret []Source
		return ret
	}

	return o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value
// and a boolean to check if the value has been set.
func (o *ListSourcesResponse) GetSourcesOk() ([]Source, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sources, true
}

// SetSources sets field value
func (o *ListSourcesResponse) SetSources(v []Source) {
	o.Sources = v
}

// GetPagination returns the Pagination field value
func (o *ListSourcesResponse) GetPagination() Pagination {
	if o == nil {
		var ret Pagination
		return ret
	}

	return o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value
// and a boolean to check if the value has been set.
func (o *ListSourcesResponse) GetPaginationOk() (*Pagination, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pagination, true
}

// SetPagination sets field value
func (o *ListSourcesResponse) SetPagination(v Pagination) {
	o.Pagination = v
}

func (o ListSourcesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["sources"] = o.Sources
	}
	if true {
		toSerialize["pagination"] = o.Pagination
	}
	return json.Marshal(toSerialize)
}

func (o ListSourcesResponse) String() string {
	out := "ListSourcesResponse {\n"
	out += fmt.Sprintf("  sources=%v\n", o.Sources)
	out += fmt.Sprintf("  pagination=%v\n", o.Pagination)
	out += "}"
	return out
}

type NullableListSourcesResponse struct {
	value *ListSourcesResponse
	isSet bool
}

func (v NullableListSourcesResponse) Get() *ListSourcesResponse {
	return v.value
}

func (v *NullableListSourcesResponse) Set(val *ListSourcesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListSourcesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListSourcesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListSourcesResponse(val *ListSourcesResponse) *NullableListSourcesResponse {
	return &NullableListSourcesResponse{value: val, isSet: true}
}

func (v NullableListSourcesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListSourcesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
