// File generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation.
package ingestion

import (
	"encoding/json"
	"fmt"
)

// SourceBigCommerce struct for SourceBigCommerce.
type SourceBigCommerce struct {
	// Store hash identifying your BigCommerce store.
	StoreHash         string                 `json:"storeHash"`
	Channel           *BigCommerceChannel    `json:"channel,omitempty"`
	CustomFields      []string               `json:"customFields,omitempty"`
	ProductMetafields []BigCommerceMetafield `json:"productMetafields,omitempty"`
	VariantMetafields []BigCommerceMetafield `json:"variantMetafields,omitempty"`
}

type SourceBigCommerceOption func(f *SourceBigCommerce)

func WithSourceBigCommerceChannel(val BigCommerceChannel) SourceBigCommerceOption {
	return func(f *SourceBigCommerce) {
		f.Channel = &val
	}
}

func WithSourceBigCommerceCustomFields(val []string) SourceBigCommerceOption {
	return func(f *SourceBigCommerce) {
		f.CustomFields = val
	}
}

func WithSourceBigCommerceProductMetafields(val []BigCommerceMetafield) SourceBigCommerceOption {
	return func(f *SourceBigCommerce) {
		f.ProductMetafields = val
	}
}

func WithSourceBigCommerceVariantMetafields(val []BigCommerceMetafield) SourceBigCommerceOption {
	return func(f *SourceBigCommerce) {
		f.VariantMetafields = val
	}
}

// NewSourceBigCommerce instantiates a new SourceBigCommerce object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewSourceBigCommerce(storeHash string, opts ...SourceBigCommerceOption) *SourceBigCommerce {
	this := &SourceBigCommerce{}
	this.StoreHash = storeHash
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptySourceBigCommerce return a pointer to an empty SourceBigCommerce object.
func NewEmptySourceBigCommerce() *SourceBigCommerce {
	return &SourceBigCommerce{}
}

// GetStoreHash returns the StoreHash field value.
func (o *SourceBigCommerce) GetStoreHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StoreHash
}

// GetStoreHashOk returns a tuple with the StoreHash field value
// and a boolean to check if the value has been set.
func (o *SourceBigCommerce) GetStoreHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StoreHash, true
}

// SetStoreHash sets field value.
func (o *SourceBigCommerce) SetStoreHash(v string) *SourceBigCommerce {
	o.StoreHash = v
	return o
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *SourceBigCommerce) GetChannel() BigCommerceChannel {
	if o == nil || o.Channel == nil {
		var ret BigCommerceChannel
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceBigCommerce) GetChannelOk() (*BigCommerceChannel, bool) {
	if o == nil || o.Channel == nil {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *SourceBigCommerce) HasChannel() bool {
	if o != nil && o.Channel != nil {
		return true
	}

	return false
}

// SetChannel gets a reference to the given BigCommerceChannel and assigns it to the Channel field.
func (o *SourceBigCommerce) SetChannel(v *BigCommerceChannel) *SourceBigCommerce {
	o.Channel = v
	return o
}

// GetCustomFields returns the CustomFields field value if set, zero value otherwise.
func (o *SourceBigCommerce) GetCustomFields() []string {
	if o == nil || o.CustomFields == nil {
		var ret []string
		return ret
	}
	return o.CustomFields
}

// GetCustomFieldsOk returns a tuple with the CustomFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceBigCommerce) GetCustomFieldsOk() ([]string, bool) {
	if o == nil || o.CustomFields == nil {
		return nil, false
	}
	return o.CustomFields, true
}

// HasCustomFields returns a boolean if a field has been set.
func (o *SourceBigCommerce) HasCustomFields() bool {
	if o != nil && o.CustomFields != nil {
		return true
	}

	return false
}

// SetCustomFields gets a reference to the given []string and assigns it to the CustomFields field.
func (o *SourceBigCommerce) SetCustomFields(v []string) *SourceBigCommerce {
	o.CustomFields = v
	return o
}

// GetProductMetafields returns the ProductMetafields field value if set, zero value otherwise.
func (o *SourceBigCommerce) GetProductMetafields() []BigCommerceMetafield {
	if o == nil || o.ProductMetafields == nil {
		var ret []BigCommerceMetafield
		return ret
	}
	return o.ProductMetafields
}

// GetProductMetafieldsOk returns a tuple with the ProductMetafields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceBigCommerce) GetProductMetafieldsOk() ([]BigCommerceMetafield, bool) {
	if o == nil || o.ProductMetafields == nil {
		return nil, false
	}
	return o.ProductMetafields, true
}

// HasProductMetafields returns a boolean if a field has been set.
func (o *SourceBigCommerce) HasProductMetafields() bool {
	if o != nil && o.ProductMetafields != nil {
		return true
	}

	return false
}

// SetProductMetafields gets a reference to the given []BigCommerceMetafield and assigns it to the ProductMetafields field.
func (o *SourceBigCommerce) SetProductMetafields(v []BigCommerceMetafield) *SourceBigCommerce {
	o.ProductMetafields = v
	return o
}

// GetVariantMetafields returns the VariantMetafields field value if set, zero value otherwise.
func (o *SourceBigCommerce) GetVariantMetafields() []BigCommerceMetafield {
	if o == nil || o.VariantMetafields == nil {
		var ret []BigCommerceMetafield
		return ret
	}
	return o.VariantMetafields
}

// GetVariantMetafieldsOk returns a tuple with the VariantMetafields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SourceBigCommerce) GetVariantMetafieldsOk() ([]BigCommerceMetafield, bool) {
	if o == nil || o.VariantMetafields == nil {
		return nil, false
	}
	return o.VariantMetafields, true
}

// HasVariantMetafields returns a boolean if a field has been set.
func (o *SourceBigCommerce) HasVariantMetafields() bool {
	if o != nil && o.VariantMetafields != nil {
		return true
	}

	return false
}

// SetVariantMetafields gets a reference to the given []BigCommerceMetafield and assigns it to the VariantMetafields field.
func (o *SourceBigCommerce) SetVariantMetafields(v []BigCommerceMetafield) *SourceBigCommerce {
	o.VariantMetafields = v
	return o
}

func (o SourceBigCommerce) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["storeHash"] = o.StoreHash
	}
	if o.Channel != nil {
		toSerialize["channel"] = o.Channel
	}
	if o.CustomFields != nil {
		toSerialize["customFields"] = o.CustomFields
	}
	if o.ProductMetafields != nil {
		toSerialize["productMetafields"] = o.ProductMetafields
	}
	if o.VariantMetafields != nil {
		toSerialize["variantMetafields"] = o.VariantMetafields
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal SourceBigCommerce: %w", err)
	}

	return serialized, nil
}

func (o SourceBigCommerce) String() string {
	out := ""
	out += fmt.Sprintf("  storeHash=%v\n", o.StoreHash)
	out += fmt.Sprintf("  channel=%v\n", o.Channel)
	out += fmt.Sprintf("  customFields=%v\n", o.CustomFields)
	out += fmt.Sprintf("  productMetafields=%v\n", o.ProductMetafields)
	out += fmt.Sprintf("  variantMetafields=%v\n", o.VariantMetafields)
	return fmt.Sprintf("SourceBigCommerce {\n%s}", out)
}

type NullableSourceBigCommerce struct {
	value *SourceBigCommerce
	isSet bool
}

func (v NullableSourceBigCommerce) Get() *SourceBigCommerce {
	return v.value
}

func (v *NullableSourceBigCommerce) Set(val *SourceBigCommerce) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceBigCommerce) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceBigCommerce) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceBigCommerce(val *SourceBigCommerce) *NullableSourceBigCommerce {
	return &NullableSourceBigCommerce{value: val, isSet: true}
}

func (v NullableSourceBigCommerce) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value) //nolint:wrapcheck
}

func (v *NullableSourceBigCommerce) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value) //nolint:wrapcheck
}
