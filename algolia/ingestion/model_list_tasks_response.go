// File generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation.
package ingestion

import (
	"encoding/json"
	"fmt"
)

// ListTasksResponse Configured tasks and pagination information.
type ListTasksResponse struct {
	Tasks      []Task     `json:"tasks"`
	Pagination Pagination `json:"pagination"`
}

// NewListTasksResponse instantiates a new ListTasksResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewListTasksResponse(tasks []Task, pagination Pagination) *ListTasksResponse {
	this := &ListTasksResponse{}
	this.Tasks = tasks
	this.Pagination = pagination
	return this
}

// NewEmptyListTasksResponse return a pointer to an empty ListTasksResponse object.
func NewEmptyListTasksResponse() *ListTasksResponse {
	return &ListTasksResponse{}
}

// GetTasks returns the Tasks field value.
func (o *ListTasksResponse) GetTasks() []Task {
	if o == nil {
		var ret []Task
		return ret
	}

	return o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value
// and a boolean to check if the value has been set.
func (o *ListTasksResponse) GetTasksOk() ([]Task, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tasks, true
}

// SetTasks sets field value.
func (o *ListTasksResponse) SetTasks(v []Task) *ListTasksResponse {
	o.Tasks = v
	return o
}

// GetPagination returns the Pagination field value.
func (o *ListTasksResponse) GetPagination() Pagination {
	if o == nil {
		var ret Pagination
		return ret
	}

	return o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value
// and a boolean to check if the value has been set.
func (o *ListTasksResponse) GetPaginationOk() (*Pagination, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pagination, true
}

// SetPagination sets field value.
func (o *ListTasksResponse) SetPagination(v *Pagination) *ListTasksResponse {
	o.Pagination = *v
	return o
}

func (o ListTasksResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["tasks"] = o.Tasks
	}
	if true {
		toSerialize["pagination"] = o.Pagination
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal ListTasksResponse: %w", err)
	}

	return serialized, nil
}

func (o ListTasksResponse) String() string {
	out := ""
	out += fmt.Sprintf("  tasks=%v\n", o.Tasks)
	out += fmt.Sprintf("  pagination=%v\n", o.Pagination)
	return fmt.Sprintf("ListTasksResponse {\n%s}", out)
}

type NullableListTasksResponse struct {
	value *ListTasksResponse
	isSet bool
}

func (v NullableListTasksResponse) Get() *ListTasksResponse {
	return v.value
}

func (v *NullableListTasksResponse) Set(val *ListTasksResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListTasksResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListTasksResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListTasksResponse(val *ListTasksResponse) *NullableListTasksResponse {
	return &NullableListTasksResponse{value: val, isSet: true}
}

func (v NullableListTasksResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value) //nolint:wrapcheck
}

func (v *NullableListTasksResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value) //nolint:wrapcheck
}
