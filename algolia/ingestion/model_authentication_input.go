// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package ingestion

import (
	"encoding/json"
	"fmt"
)

// AuthenticationInput The authentication input property stores the (encrypted) credentials.
type AuthenticationInput struct {
	Input AuthInput `json:"input" validate:"required"`
}

// NewAuthenticationInput instantiates a new AuthenticationInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationInput(input AuthInput) *AuthenticationInput {
	this := &AuthenticationInput{}
	this.Input = input
	return this
}

// NewAuthenticationInputWithDefaults instantiates a new AuthenticationInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationInputWithDefaults() *AuthenticationInput {
	this := &AuthenticationInput{}
	return this
}

// GetInput returns the Input field value
func (o *AuthenticationInput) GetInput() AuthInput {
	if o == nil {
		var ret AuthInput
		return ret
	}

	return o.Input
}

// GetInputOk returns a tuple with the Input field value
// and a boolean to check if the value has been set.
func (o *AuthenticationInput) GetInputOk() (*AuthInput, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Input, true
}

// SetInput sets field value
func (o *AuthenticationInput) SetInput(v AuthInput) {
	o.Input = v
}

func (o AuthenticationInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["input"] = o.Input
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticationInput) String() string {
	out := ""
	out += fmt.Sprintf("  input=%v\n", o.Input)
	return fmt.Sprintf("AuthenticationInput {\n%s}", out)
}

type NullableAuthenticationInput struct {
	value *AuthenticationInput
	isSet bool
}

func (v NullableAuthenticationInput) Get() *AuthenticationInput {
	return v.value
}

func (v *NullableAuthenticationInput) Set(val *AuthenticationInput) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationInput) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationInput(val *AuthenticationInput) *NullableAuthenticationInput {
	return &NullableAuthenticationInput{value: val, isSet: true}
}

func (v NullableAuthenticationInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
