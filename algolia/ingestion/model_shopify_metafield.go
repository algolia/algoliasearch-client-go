// File generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation.
package ingestion

import (
	"encoding/json"
	"fmt"
)

// ShopifyMetafield Represents a metafield in Shopify.
type ShopifyMetafield struct {
	Namespace string `json:"namespace"`
	Key       string `json:"key"`
	Value     string `json:"value"`
}

// NewShopifyMetafield instantiates a new ShopifyMetafield object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewShopifyMetafield(namespace string, key string, value string) *ShopifyMetafield {
	this := &ShopifyMetafield{}
	this.Namespace = namespace
	this.Key = key
	this.Value = value
	return this
}

// NewEmptyShopifyMetafield return a pointer to an empty ShopifyMetafield object.
func NewEmptyShopifyMetafield() *ShopifyMetafield {
	return &ShopifyMetafield{}
}

// GetNamespace returns the Namespace field value.
func (o *ShopifyMetafield) GetNamespace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value
// and a boolean to check if the value has been set.
func (o *ShopifyMetafield) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Namespace, true
}

// SetNamespace sets field value.
func (o *ShopifyMetafield) SetNamespace(v string) *ShopifyMetafield {
	o.Namespace = v
	return o
}

// GetKey returns the Key field value.
func (o *ShopifyMetafield) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *ShopifyMetafield) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value.
func (o *ShopifyMetafield) SetKey(v string) *ShopifyMetafield {
	o.Key = v
	return o
}

// GetValue returns the Value field value.
func (o *ShopifyMetafield) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *ShopifyMetafield) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value.
func (o *ShopifyMetafield) SetValue(v string) *ShopifyMetafield {
	o.Value = v
	return o
}

func (o ShopifyMetafield) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["namespace"] = o.Namespace
	}
	if true {
		toSerialize["key"] = o.Key
	}
	if true {
		toSerialize["value"] = o.Value
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal ShopifyMetafield: %w", err)
	}

	return serialized, nil
}

func (o ShopifyMetafield) String() string {
	out := ""
	out += fmt.Sprintf("  namespace=%v\n", o.Namespace)
	out += fmt.Sprintf("  key=%v\n", o.Key)
	out += fmt.Sprintf("  value=%v\n", o.Value)
	return fmt.Sprintf("ShopifyMetafield {\n%s}", out)
}

type NullableShopifyMetafield struct {
	value *ShopifyMetafield
	isSet bool
}

func (v NullableShopifyMetafield) Get() *ShopifyMetafield {
	return v.value
}

func (v *NullableShopifyMetafield) Set(val *ShopifyMetafield) {
	v.value = val
	v.isSet = true
}

func (v NullableShopifyMetafield) IsSet() bool {
	return v.isSet
}

func (v *NullableShopifyMetafield) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShopifyMetafield(val *ShopifyMetafield) *NullableShopifyMetafield {
	return &NullableShopifyMetafield{value: val, isSet: true}
}

func (v NullableShopifyMetafield) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value) //nolint:wrapcheck
}

func (v *NullableShopifyMetafield) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value) //nolint:wrapcheck
}
