// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package ingestion

import (
	"encoding/json"
	"fmt"
)

// TransformationSearch struct for TransformationSearch.
type TransformationSearch struct {
	TransformationIDs []string `json:"transformationIDs,omitempty"`
}

type TransformationSearchOption func(f *TransformationSearch)

func WithTransformationSearchTransformationIDs(val []string) TransformationSearchOption {
	return func(f *TransformationSearch) {
		f.TransformationIDs = val
	}
}

// NewTransformationSearch instantiates a new TransformationSearch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewTransformationSearch(opts ...TransformationSearchOption) *TransformationSearch {
	this := &TransformationSearch{}
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptyTransformationSearch return a pointer to an empty TransformationSearch object.
func NewEmptyTransformationSearch() *TransformationSearch {
	return &TransformationSearch{}
}

// GetTransformationIDs returns the TransformationIDs field value if set, zero value otherwise.
func (o *TransformationSearch) GetTransformationIDs() []string {
	if o == nil || o.TransformationIDs == nil {
		var ret []string
		return ret
	}
	return o.TransformationIDs
}

// GetTransformationIDsOk returns a tuple with the TransformationIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransformationSearch) GetTransformationIDsOk() ([]string, bool) {
	if o == nil || o.TransformationIDs == nil {
		return nil, false
	}
	return o.TransformationIDs, true
}

// HasTransformationIDs returns a boolean if a field has been set.
func (o *TransformationSearch) HasTransformationIDs() bool {
	if o != nil && o.TransformationIDs != nil {
		return true
	}

	return false
}

// SetTransformationIDs gets a reference to the given []string and assigns it to the TransformationIDs field.
func (o *TransformationSearch) SetTransformationIDs(v []string) *TransformationSearch {
	o.TransformationIDs = v
	return o
}

func (o TransformationSearch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.TransformationIDs != nil {
		toSerialize["transformationIDs"] = o.TransformationIDs
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal TransformationSearch: %w", err)
	}

	return serialized, nil
}

func (o TransformationSearch) String() string {
	out := ""
	out += fmt.Sprintf("  transformationIDs=%v\n", o.TransformationIDs)
	return fmt.Sprintf("TransformationSearch {\n%s}", out)
}
