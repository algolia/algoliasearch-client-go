// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package ingestion

import (
	"encoding/json"
	"fmt"
)

// AuthAPIKeyPartial Authentication input used for token credentials.
type AuthAPIKeyPartial struct {
	Key *string `json:"key,omitempty"`
}

type AuthAPIKeyPartialOption func(f *AuthAPIKeyPartial)

func WithAuthAPIKeyPartialKey(val string) AuthAPIKeyPartialOption {
	return func(f *AuthAPIKeyPartial) {
		f.Key = &val
	}
}

// NewAuthAPIKeyPartial instantiates a new AuthAPIKeyPartial object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthAPIKeyPartial(opts ...AuthAPIKeyPartialOption) *AuthAPIKeyPartial {
	this := &AuthAPIKeyPartial{}
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewAuthAPIKeyPartialWithDefaults instantiates a new AuthAPIKeyPartial object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthAPIKeyPartialWithDefaults() *AuthAPIKeyPartial {
	this := &AuthAPIKeyPartial{}
	return this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *AuthAPIKeyPartial) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthAPIKeyPartial) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *AuthAPIKeyPartial) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *AuthAPIKeyPartial) SetKey(v string) {
	o.Key = &v
}

func (o AuthAPIKeyPartial) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	return json.Marshal(toSerialize)
}

func (o AuthAPIKeyPartial) String() string {
	out := ""
	out += fmt.Sprintf("  key=%v\n", o.Key)
	return fmt.Sprintf("AuthAPIKeyPartial {\n%s}", out)
}

type NullableAuthAPIKeyPartial struct {
	value *AuthAPIKeyPartial
	isSet bool
}

func (v NullableAuthAPIKeyPartial) Get() *AuthAPIKeyPartial {
	return v.value
}

func (v *NullableAuthAPIKeyPartial) Set(val *AuthAPIKeyPartial) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthAPIKeyPartial) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthAPIKeyPartial) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthAPIKeyPartial(val *AuthAPIKeyPartial) *NullableAuthAPIKeyPartial {
	return &NullableAuthAPIKeyPartial{value: val, isSet: true}
}

func (v NullableAuthAPIKeyPartial) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthAPIKeyPartial) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
