// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package ingestion

import (
	"encoding/json"
	"fmt"
)

// SourceShopifyBase struct for SourceShopifyBase.
type SourceShopifyBase struct {
	// URL of the Shopify store.
	ShopURL string `json:"shopURL"`
}

// NewSourceShopifyBase instantiates a new SourceShopifyBase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewSourceShopifyBase(shopURL string) *SourceShopifyBase {
	this := &SourceShopifyBase{}
	this.ShopURL = shopURL
	return this
}

// NewEmptySourceShopifyBase return a pointer to an empty SourceShopifyBase object.
func NewEmptySourceShopifyBase() *SourceShopifyBase {
	return &SourceShopifyBase{}
}

// GetShopURL returns the ShopURL field value.
func (o *SourceShopifyBase) GetShopURL() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShopURL
}

// GetShopURLOk returns a tuple with the ShopURL field value
// and a boolean to check if the value has been set.
func (o *SourceShopifyBase) GetShopURLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShopURL, true
}

// SetShopURL sets field value.
func (o *SourceShopifyBase) SetShopURL(v string) *SourceShopifyBase {
	o.ShopURL = v
	return o
}

func (o SourceShopifyBase) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["shopURL"] = o.ShopURL
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal SourceShopifyBase: %w", err)
	}

	return serialized, nil
}

func (o SourceShopifyBase) String() string {
	out := ""
	out += fmt.Sprintf("  shopURL=%v\n", o.ShopURL)
	return fmt.Sprintf("SourceShopifyBase {\n%s}", out)
}
