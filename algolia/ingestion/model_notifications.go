// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package ingestion

import (
	"encoding/json"
	"fmt"
)

// Notifications Notifications settings for a task.
type Notifications struct {
	Email EmailNotifications `json:"email"`
}

// NewNotifications instantiates a new Notifications object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewNotifications(email EmailNotifications) *Notifications {
	this := &Notifications{}
	this.Email = email
	return this
}

// NewEmptyNotifications return a pointer to an empty Notifications object.
func NewEmptyNotifications() *Notifications {
	return &Notifications{}
}

// GetEmail returns the Email field value.
func (o *Notifications) GetEmail() EmailNotifications {
	if o == nil {
		var ret EmailNotifications
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *Notifications) GetEmailOk() (*EmailNotifications, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value.
func (o *Notifications) SetEmail(v *EmailNotifications) *Notifications {
	o.Email = *v
	return o
}

func (o Notifications) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["email"] = o.Email
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal Notifications: %w", err)
	}

	return serialized, nil
}

func (o Notifications) String() string {
	out := ""
	out += fmt.Sprintf("  email=%v\n", o.Email)
	return fmt.Sprintf("Notifications {\n%s}", out)
}
