// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package ingestion

import (
	"encoding/json"
	"fmt"
)

// TransformationSortKeys Property by which to sort the list of transformations.
type TransformationSortKeys string

// List of transformationSortKeys.
const (
	TRANSFORMATION_SORT_KEYS_NAME       TransformationSortKeys = "name"
	TRANSFORMATION_SORT_KEYS_UPDATED_AT TransformationSortKeys = "updatedAt"
	TRANSFORMATION_SORT_KEYS_CREATED_AT TransformationSortKeys = "createdAt"
)

// All allowed values of TransformationSortKeys enum.
var AllowedTransformationSortKeysEnumValues = []TransformationSortKeys{
	"name",
	"updatedAt",
	"createdAt",
}

func (v *TransformationSortKeys) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return fmt.Errorf("failed to unmarshal value '%s' for enum 'TransformationSortKeys': %w", string(src), err)
	}
	enumTypeValue := TransformationSortKeys(value)
	for _, existing := range AllowedTransformationSortKeysEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid TransformationSortKeys", value)
}

// NewTransformationSortKeysFromValue returns a pointer to a valid TransformationSortKeys
// for the value passed as argument, or an error if the value passed is not allowed by the enum.
func NewTransformationSortKeysFromValue(v string) (*TransformationSortKeys, error) {
	ev := TransformationSortKeys(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for TransformationSortKeys: valid values are %v", v, AllowedTransformationSortKeysEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise.
func (v TransformationSortKeys) IsValid() bool {
	for _, existing := range AllowedTransformationSortKeysEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to transformationSortKeys value.
func (v TransformationSortKeys) Ptr() *TransformationSortKeys {
	return &v
}
