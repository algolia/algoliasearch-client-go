// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package ingestion

import (
	"encoding/json"
	"fmt"
)

// TransformationUpdateResponse API response for updating a transformation.
type TransformationUpdateResponse struct {
	// Universally unique identifier (UUID) of a transformation.
	TransformationID string `json:"transformationID"`
	// Date of last update in RFC 3339 format.
	UpdatedAt string `json:"updatedAt"`
}

// NewTransformationUpdateResponse instantiates a new TransformationUpdateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewTransformationUpdateResponse(transformationID string, updatedAt string) *TransformationUpdateResponse {
	this := &TransformationUpdateResponse{}
	this.TransformationID = transformationID
	this.UpdatedAt = updatedAt
	return this
}

// NewEmptyTransformationUpdateResponse return a pointer to an empty TransformationUpdateResponse object.
func NewEmptyTransformationUpdateResponse() *TransformationUpdateResponse {
	return &TransformationUpdateResponse{}
}

// GetTransformationID returns the TransformationID field value.
func (o *TransformationUpdateResponse) GetTransformationID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransformationID
}

// GetTransformationIDOk returns a tuple with the TransformationID field value
// and a boolean to check if the value has been set.
func (o *TransformationUpdateResponse) GetTransformationIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransformationID, true
}

// SetTransformationID sets field value.
func (o *TransformationUpdateResponse) SetTransformationID(v string) *TransformationUpdateResponse {
	o.TransformationID = v
	return o
}

// GetUpdatedAt returns the UpdatedAt field value.
func (o *TransformationUpdateResponse) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *TransformationUpdateResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value.
func (o *TransformationUpdateResponse) SetUpdatedAt(v string) *TransformationUpdateResponse {
	o.UpdatedAt = v
	return o
}

func (o TransformationUpdateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["transformationID"] = o.TransformationID
	}
	if true {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal TransformationUpdateResponse: %w", err)
	}

	return serialized, nil
}

func (o TransformationUpdateResponse) String() string {
	out := ""
	out += fmt.Sprintf("  transformationID=%v\n", o.TransformationID)
	out += fmt.Sprintf("  updatedAt=%v\n", o.UpdatedAt)
	return fmt.Sprintf("TransformationUpdateResponse {\n%s}", out)
}
