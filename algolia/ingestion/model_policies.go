// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package ingestion

import (
	"encoding/json"
	"fmt"
)

// Policies Set of rules for a task.
type Policies struct {
	// The number of critical failures in a row before blocking the task and sending a notification.
	CriticalThreshold *int32 `json:"criticalThreshold,omitempty"`
}

type PoliciesOption func(f *Policies)

func WithPoliciesCriticalThreshold(val int32) PoliciesOption {
	return func(f *Policies) {
		f.CriticalThreshold = &val
	}
}

// NewPolicies instantiates a new Policies object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewPolicies(opts ...PoliciesOption) *Policies {
	this := &Policies{}
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptyPolicies return a pointer to an empty Policies object.
func NewEmptyPolicies() *Policies {
	return &Policies{}
}

// GetCriticalThreshold returns the CriticalThreshold field value if set, zero value otherwise.
func (o *Policies) GetCriticalThreshold() int32 {
	if o == nil || o.CriticalThreshold == nil {
		var ret int32
		return ret
	}
	return *o.CriticalThreshold
}

// GetCriticalThresholdOk returns a tuple with the CriticalThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Policies) GetCriticalThresholdOk() (*int32, bool) {
	if o == nil || o.CriticalThreshold == nil {
		return nil, false
	}
	return o.CriticalThreshold, true
}

// HasCriticalThreshold returns a boolean if a field has been set.
func (o *Policies) HasCriticalThreshold() bool {
	if o != nil && o.CriticalThreshold != nil {
		return true
	}

	return false
}

// SetCriticalThreshold gets a reference to the given int32 and assigns it to the CriticalThreshold field.
func (o *Policies) SetCriticalThreshold(v int32) *Policies {
	o.CriticalThreshold = &v
	return o
}

func (o Policies) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.CriticalThreshold != nil {
		toSerialize["criticalThreshold"] = o.CriticalThreshold
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal Policies: %w", err)
	}

	return serialized, nil
}

func (o Policies) String() string {
	out := ""
	out += fmt.Sprintf("  criticalThreshold=%v\n", o.CriticalThreshold)
	return fmt.Sprintf("Policies {\n%s}", out)
}
