// File generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation.
package ingestion

import (
	"encoding/json"
	"fmt"
)

// DockerSourceDiscover struct for DockerSourceDiscover.
type DockerSourceDiscover struct {
	// The run UUID.
	RunID string `json:"runID"`
	// Date of creation (RFC3339 format).
	CreatedAt string `json:"createdAt"`
}

// NewDockerSourceDiscover instantiates a new DockerSourceDiscover object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewDockerSourceDiscover(runID string, createdAt string) *DockerSourceDiscover {
	this := &DockerSourceDiscover{}
	this.RunID = runID
	this.CreatedAt = createdAt
	return this
}

// NewDockerSourceDiscoverWithDefaults instantiates a new DockerSourceDiscover object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set.
func NewDockerSourceDiscoverWithDefaults() *DockerSourceDiscover {
	this := &DockerSourceDiscover{}
	return this
}

// GetRunID returns the RunID field value.
func (o *DockerSourceDiscover) GetRunID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RunID
}

// GetRunIDOk returns a tuple with the RunID field value
// and a boolean to check if the value has been set.
func (o *DockerSourceDiscover) GetRunIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RunID, true
}

// SetRunID sets field value.
func (o *DockerSourceDiscover) SetRunID(v string) {
	o.RunID = v
}

// GetCreatedAt returns the CreatedAt field value.
func (o *DockerSourceDiscover) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *DockerSourceDiscover) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value.
func (o *DockerSourceDiscover) SetCreatedAt(v string) {
	o.CreatedAt = v
}

func (o DockerSourceDiscover) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["runID"] = o.RunID
	}
	if true {
		toSerialize["createdAt"] = o.CreatedAt
	}
	return json.Marshal(toSerialize)
}

func (o DockerSourceDiscover) String() string {
	out := ""
	out += fmt.Sprintf("  runID=%v\n", o.RunID)
	out += fmt.Sprintf("  createdAt=%v\n", o.CreatedAt)
	return fmt.Sprintf("DockerSourceDiscover {\n%s}", out)
}

type NullableDockerSourceDiscover struct {
	value *DockerSourceDiscover
	isSet bool
}

func (v NullableDockerSourceDiscover) Get() *DockerSourceDiscover {
	return v.value
}

func (v *NullableDockerSourceDiscover) Set(val *DockerSourceDiscover) {
	v.value = val
	v.isSet = true
}

func (v NullableDockerSourceDiscover) IsSet() bool {
	return v.isSet
}

func (v *NullableDockerSourceDiscover) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDockerSourceDiscover(val *DockerSourceDiscover) *NullableDockerSourceDiscover {
	return &NullableDockerSourceDiscover{value: val, isSet: true}
}

func (v NullableDockerSourceDiscover) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDockerSourceDiscover) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
