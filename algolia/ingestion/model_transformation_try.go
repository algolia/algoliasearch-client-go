// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package ingestion

import (
	"encoding/json"
	"fmt"
)

// TransformationTry struct for TransformationTry.
type TransformationTry struct {
	// It is deprecated. Use the `input` field with proper `type` instead to specify the transformation code.
	// Deprecated
	Code  *string              `json:"code,omitempty"`
	Type  *TransformationType  `json:"type,omitempty"`
	Input *TransformationInput `json:"input,omitempty"`
	// The record to apply the given code to.
	SampleRecord    map[string]any         `json:"sampleRecord"`
	Authentications []AuthenticationCreate `json:"authentications,omitempty"`
}

type TransformationTryOption func(f *TransformationTry)

func WithTransformationTryCode(val string) TransformationTryOption {
	return func(f *TransformationTry) {
		f.Code = &val
	}
}

func WithTransformationTryType(val TransformationType) TransformationTryOption {
	return func(f *TransformationTry) {
		f.Type = &val
	}
}

func WithTransformationTryInput(val TransformationInput) TransformationTryOption {
	return func(f *TransformationTry) {
		f.Input = &val
	}
}

func WithTransformationTryAuthentications(val []AuthenticationCreate) TransformationTryOption {
	return func(f *TransformationTry) {
		f.Authentications = val
	}
}

// NewTransformationTry instantiates a new TransformationTry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewTransformationTry(sampleRecord map[string]any, opts ...TransformationTryOption) *TransformationTry {
	this := &TransformationTry{}

	this.SampleRecord = sampleRecord
	for _, opt := range opts {
		opt(this)
	}

	return this
}

// NewEmptyTransformationTry return a pointer to an empty TransformationTry object.
func NewEmptyTransformationTry() *TransformationTry {
	return &TransformationTry{}
}

// GetCode returns the Code field value if set, zero value otherwise.
// Deprecated.
func (o *TransformationTry) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string

		return ret
	}

	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated.
func (o *TransformationTry) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}

	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *TransformationTry) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
// Deprecated.
func (o *TransformationTry) SetCode(v string) *TransformationTry {
	o.Code = &v

	return o
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *TransformationTry) GetType() TransformationType {
	if o == nil || o.Type == nil {
		var ret TransformationType

		return ret
	}

	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransformationTry) GetTypeOk() (*TransformationType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}

	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *TransformationTry) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given TransformationType and assigns it to the Type field.
func (o *TransformationTry) SetType(v TransformationType) *TransformationTry {
	o.Type = &v

	return o
}

// GetInput returns the Input field value if set, zero value otherwise.
func (o *TransformationTry) GetInput() TransformationInput {
	if o == nil || o.Input == nil {
		var ret TransformationInput

		return ret
	}

	return *o.Input
}

// GetInputOk returns a tuple with the Input field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransformationTry) GetInputOk() (*TransformationInput, bool) {
	if o == nil || o.Input == nil {
		return nil, false
	}

	return o.Input, true
}

// HasInput returns a boolean if a field has been set.
func (o *TransformationTry) HasInput() bool {
	if o != nil && o.Input != nil {
		return true
	}

	return false
}

// SetInput gets a reference to the given TransformationInput and assigns it to the Input field.
func (o *TransformationTry) SetInput(v *TransformationInput) *TransformationTry {
	o.Input = v

	return o
}

// GetSampleRecord returns the SampleRecord field value.
func (o *TransformationTry) GetSampleRecord() map[string]any {
	if o == nil {
		var ret map[string]any

		return ret
	}

	return o.SampleRecord
}

// GetSampleRecordOk returns a tuple with the SampleRecord field value
// and a boolean to check if the value has been set.
func (o *TransformationTry) GetSampleRecordOk() (map[string]any, bool) {
	if o == nil {
		return nil, false
	}

	return o.SampleRecord, true
}

// SetSampleRecord sets field value.
func (o *TransformationTry) SetSampleRecord(v map[string]any) *TransformationTry {
	o.SampleRecord = v

	return o
}

// GetAuthentications returns the Authentications field value if set, zero value otherwise.
func (o *TransformationTry) GetAuthentications() []AuthenticationCreate {
	if o == nil || o.Authentications == nil {
		var ret []AuthenticationCreate

		return ret
	}

	return o.Authentications
}

// GetAuthenticationsOk returns a tuple with the Authentications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransformationTry) GetAuthenticationsOk() ([]AuthenticationCreate, bool) {
	if o == nil || o.Authentications == nil {
		return nil, false
	}

	return o.Authentications, true
}

// HasAuthentications returns a boolean if a field has been set.
func (o *TransformationTry) HasAuthentications() bool {
	if o != nil && o.Authentications != nil {
		return true
	}

	return false
}

// SetAuthentications gets a reference to the given []AuthenticationCreate and assigns it to the Authentications field.
func (o *TransformationTry) SetAuthentications(v []AuthenticationCreate) *TransformationTry {
	o.Authentications = v

	return o
}

func (o TransformationTry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}

	if o.Type != nil {
		toSerialize["type"] = o.Type
	}

	if o.Input != nil {
		toSerialize["input"] = o.Input
	}

	toSerialize["sampleRecord"] = o.SampleRecord
	if o.Authentications != nil {
		toSerialize["authentications"] = o.Authentications
	}

	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal TransformationTry: %w", err)
	}

	return serialized, nil
}

func (o TransformationTry) String() string {
	out := ""
	out += fmt.Sprintf("  code=%v\n", o.Code)
	out += fmt.Sprintf("  type=%v\n", o.Type)
	out += fmt.Sprintf("  input=%v\n", o.Input)
	out += fmt.Sprintf("  sampleRecord=%v\n", o.SampleRecord)
	out += fmt.Sprintf("  authentications=%v\n", o.Authentications)

	return fmt.Sprintf("TransformationTry {\n%s}", out)
}
