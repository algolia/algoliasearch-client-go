// File generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation.
package ingestion

import (
	"encoding/json"
	"fmt"
)

// AuthGoogleServiceAccountPartial Credentials for authenticating with a Google service account, such as BigQuery.
type AuthGoogleServiceAccountPartial struct {
	// Email address of the Google service account.
	ClientEmail *string `json:"clientEmail,omitempty"`
	// Private key of the Google service account. This field is `null` in the API response.
	PrivateKey *string `json:"privateKey,omitempty"`
}

type AuthGoogleServiceAccountPartialOption func(f *AuthGoogleServiceAccountPartial)

func WithAuthGoogleServiceAccountPartialClientEmail(val string) AuthGoogleServiceAccountPartialOption {
	return func(f *AuthGoogleServiceAccountPartial) {
		f.ClientEmail = &val
	}
}

func WithAuthGoogleServiceAccountPartialPrivateKey(val string) AuthGoogleServiceAccountPartialOption {
	return func(f *AuthGoogleServiceAccountPartial) {
		f.PrivateKey = &val
	}
}

// NewAuthGoogleServiceAccountPartial instantiates a new AuthGoogleServiceAccountPartial object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewAuthGoogleServiceAccountPartial(opts ...AuthGoogleServiceAccountPartialOption) *AuthGoogleServiceAccountPartial {
	this := &AuthGoogleServiceAccountPartial{}
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptyAuthGoogleServiceAccountPartial return a pointer to an empty AuthGoogleServiceAccountPartial object.
func NewEmptyAuthGoogleServiceAccountPartial() *AuthGoogleServiceAccountPartial {
	return &AuthGoogleServiceAccountPartial{}
}

// GetClientEmail returns the ClientEmail field value if set, zero value otherwise.
func (o *AuthGoogleServiceAccountPartial) GetClientEmail() string {
	if o == nil || o.ClientEmail == nil {
		var ret string
		return ret
	}
	return *o.ClientEmail
}

// GetClientEmailOk returns a tuple with the ClientEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthGoogleServiceAccountPartial) GetClientEmailOk() (*string, bool) {
	if o == nil || o.ClientEmail == nil {
		return nil, false
	}
	return o.ClientEmail, true
}

// HasClientEmail returns a boolean if a field has been set.
func (o *AuthGoogleServiceAccountPartial) HasClientEmail() bool {
	if o != nil && o.ClientEmail != nil {
		return true
	}

	return false
}

// SetClientEmail gets a reference to the given string and assigns it to the ClientEmail field.
func (o *AuthGoogleServiceAccountPartial) SetClientEmail(v string) *AuthGoogleServiceAccountPartial {
	o.ClientEmail = &v
	return o
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise.
func (o *AuthGoogleServiceAccountPartial) GetPrivateKey() string {
	if o == nil || o.PrivateKey == nil {
		var ret string
		return ret
	}
	return *o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthGoogleServiceAccountPartial) GetPrivateKeyOk() (*string, bool) {
	if o == nil || o.PrivateKey == nil {
		return nil, false
	}
	return o.PrivateKey, true
}

// HasPrivateKey returns a boolean if a field has been set.
func (o *AuthGoogleServiceAccountPartial) HasPrivateKey() bool {
	if o != nil && o.PrivateKey != nil {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given string and assigns it to the PrivateKey field.
func (o *AuthGoogleServiceAccountPartial) SetPrivateKey(v string) *AuthGoogleServiceAccountPartial {
	o.PrivateKey = &v
	return o
}

func (o AuthGoogleServiceAccountPartial) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.ClientEmail != nil {
		toSerialize["clientEmail"] = o.ClientEmail
	}
	if o.PrivateKey != nil {
		toSerialize["privateKey"] = o.PrivateKey
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal AuthGoogleServiceAccountPartial: %w", err)
	}

	return serialized, nil
}

func (o AuthGoogleServiceAccountPartial) String() string {
	out := ""
	out += fmt.Sprintf("  clientEmail=%v\n", o.ClientEmail)
	out += fmt.Sprintf("  privateKey=%v\n", o.PrivateKey)
	return fmt.Sprintf("AuthGoogleServiceAccountPartial {\n%s}", out)
}

type NullableAuthGoogleServiceAccountPartial struct {
	value *AuthGoogleServiceAccountPartial
	isSet bool
}

func (v NullableAuthGoogleServiceAccountPartial) Get() *AuthGoogleServiceAccountPartial {
	return v.value
}

func (v *NullableAuthGoogleServiceAccountPartial) Set(val *AuthGoogleServiceAccountPartial) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthGoogleServiceAccountPartial) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthGoogleServiceAccountPartial) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthGoogleServiceAccountPartial(val *AuthGoogleServiceAccountPartial) *NullableAuthGoogleServiceAccountPartial {
	return &NullableAuthGoogleServiceAccountPartial{value: val, isSet: true}
}

func (v NullableAuthGoogleServiceAccountPartial) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value) //nolint:wrapcheck
}

func (v *NullableAuthGoogleServiceAccountPartial) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value) //nolint:wrapcheck
}
