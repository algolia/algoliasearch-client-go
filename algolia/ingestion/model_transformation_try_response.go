// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package ingestion

import (
	"encoding/json"
	"fmt"
)

// TransformationTryResponse struct for TransformationTryResponse.
type TransformationTryResponse struct {
	// The array of records returned by the transformation service.
	Payloads []map[string]any                `json:"payloads"`
	Error    *TransformationTryResponseError `json:"error,omitempty"`
}

type TransformationTryResponseOption func(f *TransformationTryResponse)

func WithTransformationTryResponseError(val TransformationTryResponseError) TransformationTryResponseOption {
	return func(f *TransformationTryResponse) {
		f.Error = &val
	}
}

// NewTransformationTryResponse instantiates a new TransformationTryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewTransformationTryResponse(payloads []map[string]any, opts ...TransformationTryResponseOption) *TransformationTryResponse {
	this := &TransformationTryResponse{}
	this.Payloads = payloads
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptyTransformationTryResponse return a pointer to an empty TransformationTryResponse object.
func NewEmptyTransformationTryResponse() *TransformationTryResponse {
	return &TransformationTryResponse{}
}

// GetPayloads returns the Payloads field value.
func (o *TransformationTryResponse) GetPayloads() []map[string]any {
	if o == nil {
		var ret []map[string]any
		return ret
	}

	return o.Payloads
}

// GetPayloadsOk returns a tuple with the Payloads field value
// and a boolean to check if the value has been set.
func (o *TransformationTryResponse) GetPayloadsOk() ([]map[string]any, bool) {
	if o == nil {
		return nil, false
	}
	return o.Payloads, true
}

// SetPayloads sets field value.
func (o *TransformationTryResponse) SetPayloads(v []map[string]any) *TransformationTryResponse {
	o.Payloads = v
	return o
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *TransformationTryResponse) GetError() TransformationTryResponseError {
	if o == nil || o.Error == nil {
		var ret TransformationTryResponseError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransformationTryResponse) GetErrorOk() (*TransformationTryResponseError, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *TransformationTryResponse) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given TransformationTryResponseError and assigns it to the Error field.
func (o *TransformationTryResponse) SetError(v *TransformationTryResponseError) *TransformationTryResponse {
	o.Error = v
	return o
}

func (o TransformationTryResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["payloads"] = o.Payloads
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal TransformationTryResponse: %w", err)
	}

	return serialized, nil
}

func (o TransformationTryResponse) String() string {
	out := ""
	out += fmt.Sprintf("  payloads=%v\n", o.Payloads)
	out += fmt.Sprintf("  error=%v\n", o.Error)
	return fmt.Sprintf("TransformationTryResponse {\n%s}", out)
}
