// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package ingestion

import (
	"encoding/json"
	"fmt"
)

// SourceSearch struct for SourceSearch.
type SourceSearch struct {
	SourceIDs []string `json:"sourceIDs"`
}

// NewSourceSearch instantiates a new SourceSearch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewSourceSearch(sourceIDs []string) *SourceSearch {
	this := &SourceSearch{}
	this.SourceIDs = sourceIDs
	return this
}

// NewEmptySourceSearch return a pointer to an empty SourceSearch object.
func NewEmptySourceSearch() *SourceSearch {
	return &SourceSearch{}
}

// GetSourceIDs returns the SourceIDs field value.
func (o *SourceSearch) GetSourceIDs() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SourceIDs
}

// GetSourceIDsOk returns a tuple with the SourceIDs field value
// and a boolean to check if the value has been set.
func (o *SourceSearch) GetSourceIDsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceIDs, true
}

// SetSourceIDs sets field value.
func (o *SourceSearch) SetSourceIDs(v []string) *SourceSearch {
	o.SourceIDs = v
	return o
}

func (o SourceSearch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["sourceIDs"] = o.SourceIDs
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal SourceSearch: %w", err)
	}

	return serialized, nil
}

func (o SourceSearch) String() string {
	out := ""
	out += fmt.Sprintf("  sourceIDs=%v\n", o.SourceIDs)
	return fmt.Sprintf("SourceSearch {\n%s}", out)
}
