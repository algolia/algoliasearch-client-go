// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package analytics

import (
	"encoding/json"
	"fmt"
)

// TopSearchesResponseWithRevenueAnalytics struct for TopSearchesResponseWithRevenueAnalytics.
type TopSearchesResponseWithRevenueAnalytics struct {
	// Most popular searches, including their click and revenue metrics.
	Searches []TopSearchWithRevenueAnalytics `json:"searches"`
}

// NewTopSearchesResponseWithRevenueAnalytics instantiates a new TopSearchesResponseWithRevenueAnalytics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewTopSearchesResponseWithRevenueAnalytics(searches []TopSearchWithRevenueAnalytics) *TopSearchesResponseWithRevenueAnalytics {
	this := &TopSearchesResponseWithRevenueAnalytics{}
	this.Searches = searches
	return this
}

// NewEmptyTopSearchesResponseWithRevenueAnalytics return a pointer to an empty TopSearchesResponseWithRevenueAnalytics object.
func NewEmptyTopSearchesResponseWithRevenueAnalytics() *TopSearchesResponseWithRevenueAnalytics {
	return &TopSearchesResponseWithRevenueAnalytics{}
}

// GetSearches returns the Searches field value.
func (o *TopSearchesResponseWithRevenueAnalytics) GetSearches() []TopSearchWithRevenueAnalytics {
	if o == nil {
		var ret []TopSearchWithRevenueAnalytics
		return ret
	}

	return o.Searches
}

// GetSearchesOk returns a tuple with the Searches field value
// and a boolean to check if the value has been set.
func (o *TopSearchesResponseWithRevenueAnalytics) GetSearchesOk() ([]TopSearchWithRevenueAnalytics, bool) {
	if o == nil {
		return nil, false
	}
	return o.Searches, true
}

// SetSearches sets field value.
func (o *TopSearchesResponseWithRevenueAnalytics) SetSearches(v []TopSearchWithRevenueAnalytics) *TopSearchesResponseWithRevenueAnalytics {
	o.Searches = v
	return o
}

func (o TopSearchesResponseWithRevenueAnalytics) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["searches"] = o.Searches
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal TopSearchesResponseWithRevenueAnalytics: %w", err)
	}

	return serialized, nil
}

func (o TopSearchesResponseWithRevenueAnalytics) String() string {
	out := ""
	out += fmt.Sprintf("  searches=%v\n", o.Searches)
	return fmt.Sprintf("TopSearchesResponseWithRevenueAnalytics {\n%s}", out)
}

type NullableTopSearchesResponseWithRevenueAnalytics struct {
	value *TopSearchesResponseWithRevenueAnalytics
	isSet bool
}

func (v NullableTopSearchesResponseWithRevenueAnalytics) Get() *TopSearchesResponseWithRevenueAnalytics {
	return v.value
}

func (v *NullableTopSearchesResponseWithRevenueAnalytics) Set(val *TopSearchesResponseWithRevenueAnalytics) {
	v.value = val
	v.isSet = true
}

func (v NullableTopSearchesResponseWithRevenueAnalytics) IsSet() bool {
	return v.isSet
}

func (v *NullableTopSearchesResponseWithRevenueAnalytics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTopSearchesResponseWithRevenueAnalytics(val *TopSearchesResponseWithRevenueAnalytics) *NullableTopSearchesResponseWithRevenueAnalytics {
	return &NullableTopSearchesResponseWithRevenueAnalytics{value: val, isSet: true}
}

func (v NullableTopSearchesResponseWithRevenueAnalytics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value) //nolint:wrapcheck
}

func (v *NullableTopSearchesResponseWithRevenueAnalytics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value) //nolint:wrapcheck
}
