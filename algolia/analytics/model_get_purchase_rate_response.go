// File generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation.
package analytics

import (
	"encoding/json"
	"fmt"

	"github.com/algolia/algoliasearch-client-go/v4/algolia/utils"
)

// GetPurchaseRateResponse struct for GetPurchaseRateResponse.
type GetPurchaseRateResponse struct {
	// Purchase rate, calculated as number of tracked searches with at least one purchase event divided by the number of tracked searches. If null, Algolia didn't receive any search requests with `clickAnalytics` set to true.
	Rate utils.NullableFloat64 `json:"rate"`
	// Number of tracked searches. Tracked searches are search requests where the `clickAnalytics` parameter is true.
	TrackedSearchCount int32 `json:"trackedSearchCount"`
	// Number of purchase events from this search.
	PurchaseCount int32 `json:"purchaseCount"`
	// Daily purchase rates.
	Dates []DailyPurchaseRates `json:"dates"`
}

// NewGetPurchaseRateResponse instantiates a new GetPurchaseRateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewGetPurchaseRateResponse(rate utils.NullableFloat64, trackedSearchCount int32, purchaseCount int32, dates []DailyPurchaseRates) *GetPurchaseRateResponse {
	this := &GetPurchaseRateResponse{}
	this.Rate = rate
	this.TrackedSearchCount = trackedSearchCount
	this.PurchaseCount = purchaseCount
	this.Dates = dates
	return this
}

// NewEmptyGetPurchaseRateResponse return a pointer to an empty GetPurchaseRateResponse object.
func NewEmptyGetPurchaseRateResponse() *GetPurchaseRateResponse {
	return &GetPurchaseRateResponse{}
}

// GetRate returns the Rate field value.
// If the value is explicit nil, the zero value for float64 will be returned.
func (o *GetPurchaseRateResponse) GetRate() float64 {
	if o == nil || o.Rate.Get() == nil {
		var ret float64
		return ret
	}

	return *o.Rate.Get()
}

// GetRateOk returns a tuple with the Rate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned.
func (o *GetPurchaseRateResponse) GetRateOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rate.Get(), o.Rate.IsSet()
}

// SetRate sets field value.
func (o *GetPurchaseRateResponse) SetRate(v float64) *GetPurchaseRateResponse {
	o.Rate.Set(&v)
	return o
}

// GetTrackedSearchCount returns the TrackedSearchCount field value.
func (o *GetPurchaseRateResponse) GetTrackedSearchCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TrackedSearchCount
}

// GetTrackedSearchCountOk returns a tuple with the TrackedSearchCount field value
// and a boolean to check if the value has been set.
func (o *GetPurchaseRateResponse) GetTrackedSearchCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TrackedSearchCount, true
}

// SetTrackedSearchCount sets field value.
func (o *GetPurchaseRateResponse) SetTrackedSearchCount(v int32) *GetPurchaseRateResponse {
	o.TrackedSearchCount = v
	return o
}

// GetPurchaseCount returns the PurchaseCount field value.
func (o *GetPurchaseRateResponse) GetPurchaseCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PurchaseCount
}

// GetPurchaseCountOk returns a tuple with the PurchaseCount field value
// and a boolean to check if the value has been set.
func (o *GetPurchaseRateResponse) GetPurchaseCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PurchaseCount, true
}

// SetPurchaseCount sets field value.
func (o *GetPurchaseRateResponse) SetPurchaseCount(v int32) *GetPurchaseRateResponse {
	o.PurchaseCount = v
	return o
}

// GetDates returns the Dates field value.
func (o *GetPurchaseRateResponse) GetDates() []DailyPurchaseRates {
	if o == nil {
		var ret []DailyPurchaseRates
		return ret
	}

	return o.Dates
}

// GetDatesOk returns a tuple with the Dates field value
// and a boolean to check if the value has been set.
func (o *GetPurchaseRateResponse) GetDatesOk() ([]DailyPurchaseRates, bool) {
	if o == nil {
		return nil, false
	}
	return o.Dates, true
}

// SetDates sets field value.
func (o *GetPurchaseRateResponse) SetDates(v []DailyPurchaseRates) *GetPurchaseRateResponse {
	o.Dates = v
	return o
}

func (o GetPurchaseRateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["rate"] = o.Rate.Get()
	}
	if true {
		toSerialize["trackedSearchCount"] = o.TrackedSearchCount
	}
	if true {
		toSerialize["purchaseCount"] = o.PurchaseCount
	}
	if true {
		toSerialize["dates"] = o.Dates
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal GetPurchaseRateResponse: %w", err)
	}

	return serialized, nil
}

func (o GetPurchaseRateResponse) String() string {
	out := ""
	out += fmt.Sprintf("  rate=%v\n", o.Rate)
	out += fmt.Sprintf("  trackedSearchCount=%v\n", o.TrackedSearchCount)
	out += fmt.Sprintf("  purchaseCount=%v\n", o.PurchaseCount)
	out += fmt.Sprintf("  dates=%v\n", o.Dates)
	return fmt.Sprintf("GetPurchaseRateResponse {\n%s}", out)
}

type NullableGetPurchaseRateResponse struct {
	value *GetPurchaseRateResponse
	isSet bool
}

func (v NullableGetPurchaseRateResponse) Get() *GetPurchaseRateResponse {
	return v.value
}

func (v *NullableGetPurchaseRateResponse) Set(val *GetPurchaseRateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPurchaseRateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPurchaseRateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPurchaseRateResponse(val *GetPurchaseRateResponse) *NullableGetPurchaseRateResponse {
	return &NullableGetPurchaseRateResponse{value: val, isSet: true}
}

func (v NullableGetPurchaseRateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value) //nolint:wrapcheck
}

func (v *NullableGetPurchaseRateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value) //nolint:wrapcheck
}
