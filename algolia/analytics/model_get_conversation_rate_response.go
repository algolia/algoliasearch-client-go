// File generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation.
package analytics

import (
	"encoding/json"
	"fmt"
)

// GetConversationRateResponse struct for GetConversationRateResponse.
type GetConversationRateResponse struct {
	// [Click-through rate (CTR)](https://www.algolia.com/doc/guides/search-analytics/concepts/metrics/#click-through-rate).
	Rate float64 `json:"rate"`
	// Number of tracked searches. This is the number of search requests where the `clickAnalytics` parameter is `true`.
	TrackedSearchCount int32 `json:"trackedSearchCount"`
	// Number of converted clicks.
	ConversionCount int32 `json:"conversionCount"`
	// Conversion events.
	Dates []ConversionRateEvent `json:"dates"`
}

// NewGetConversationRateResponse instantiates a new GetConversationRateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewGetConversationRateResponse(rate float64, trackedSearchCount int32, conversionCount int32, dates []ConversionRateEvent) *GetConversationRateResponse {
	this := &GetConversationRateResponse{}
	this.Rate = rate
	this.TrackedSearchCount = trackedSearchCount
	this.ConversionCount = conversionCount
	this.Dates = dates
	return this
}

// NewEmptyGetConversationRateResponse return a pointer to an empty GetConversationRateResponse object.
func NewEmptyGetConversationRateResponse() *GetConversationRateResponse {
	return &GetConversationRateResponse{}
}

// GetRate returns the Rate field value.
func (o *GetConversationRateResponse) GetRate() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Rate
}

// GetRateOk returns a tuple with the Rate field value
// and a boolean to check if the value has been set.
func (o *GetConversationRateResponse) GetRateOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rate, true
}

// SetRate sets field value.
func (o *GetConversationRateResponse) SetRate(v float64) *GetConversationRateResponse {
	o.Rate = v
	return o
}

// GetTrackedSearchCount returns the TrackedSearchCount field value.
func (o *GetConversationRateResponse) GetTrackedSearchCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TrackedSearchCount
}

// GetTrackedSearchCountOk returns a tuple with the TrackedSearchCount field value
// and a boolean to check if the value has been set.
func (o *GetConversationRateResponse) GetTrackedSearchCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TrackedSearchCount, true
}

// SetTrackedSearchCount sets field value.
func (o *GetConversationRateResponse) SetTrackedSearchCount(v int32) *GetConversationRateResponse {
	o.TrackedSearchCount = v
	return o
}

// GetConversionCount returns the ConversionCount field value.
func (o *GetConversationRateResponse) GetConversionCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ConversionCount
}

// GetConversionCountOk returns a tuple with the ConversionCount field value
// and a boolean to check if the value has been set.
func (o *GetConversationRateResponse) GetConversionCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConversionCount, true
}

// SetConversionCount sets field value.
func (o *GetConversationRateResponse) SetConversionCount(v int32) *GetConversationRateResponse {
	o.ConversionCount = v
	return o
}

// GetDates returns the Dates field value.
func (o *GetConversationRateResponse) GetDates() []ConversionRateEvent {
	if o == nil {
		var ret []ConversionRateEvent
		return ret
	}

	return o.Dates
}

// GetDatesOk returns a tuple with the Dates field value
// and a boolean to check if the value has been set.
func (o *GetConversationRateResponse) GetDatesOk() ([]ConversionRateEvent, bool) {
	if o == nil {
		return nil, false
	}
	return o.Dates, true
}

// SetDates sets field value.
func (o *GetConversationRateResponse) SetDates(v []ConversionRateEvent) *GetConversationRateResponse {
	o.Dates = v
	return o
}

func (o GetConversationRateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["rate"] = o.Rate
	}
	if true {
		toSerialize["trackedSearchCount"] = o.TrackedSearchCount
	}
	if true {
		toSerialize["conversionCount"] = o.ConversionCount
	}
	if true {
		toSerialize["dates"] = o.Dates
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal GetConversationRateResponse: %w", err)
	}

	return serialized, nil
}

func (o GetConversationRateResponse) String() string {
	out := ""
	out += fmt.Sprintf("  rate=%v\n", o.Rate)
	out += fmt.Sprintf("  trackedSearchCount=%v\n", o.TrackedSearchCount)
	out += fmt.Sprintf("  conversionCount=%v\n", o.ConversionCount)
	out += fmt.Sprintf("  dates=%v\n", o.Dates)
	return fmt.Sprintf("GetConversationRateResponse {\n%s}", out)
}

type NullableGetConversationRateResponse struct {
	value *GetConversationRateResponse
	isSet bool
}

func (v NullableGetConversationRateResponse) Get() *GetConversationRateResponse {
	return v.value
}

func (v *NullableGetConversationRateResponse) Set(val *GetConversationRateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetConversationRateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetConversationRateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetConversationRateResponse(val *GetConversationRateResponse) *NullableGetConversationRateResponse {
	return &NullableGetConversationRateResponse{value: val, isSet: true}
}

func (v NullableGetConversationRateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value) //nolint:wrapcheck
}

func (v *NullableGetConversationRateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value) //nolint:wrapcheck
}
