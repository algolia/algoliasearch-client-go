// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package analytics

import (
	"encoding/json"
	"fmt"

	"github.com/algolia/algoliasearch-client-go/v4/algolia/utils"
)

// DailyAddToCartRates struct for DailyAddToCartRates.
type DailyAddToCartRates struct {
	// Add-to-cart rate, calculated as number of tracked searches with at least one add-to-cart event divided by the number of tracked searches. If null, Algolia didn't receive any search requests with `clickAnalytics` set to true.
	Rate utils.Nullable[float64] `json:"rate"`
	// Number of tracked searches. Tracked searches are search requests where the `clickAnalytics` parameter is true.
	TrackedSearchCount int32 `json:"trackedSearchCount"`
	// Number of add-to-cart events from this search.
	AddToCartCount int32 `json:"addToCartCount"`
	// Date in the format YYYY-MM-DD.
	Date string `json:"date"`
}

// NewDailyAddToCartRates instantiates a new DailyAddToCartRates object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewDailyAddToCartRates(rate utils.Nullable[float64], trackedSearchCount int32, addToCartCount int32, date string) *DailyAddToCartRates {
	this := &DailyAddToCartRates{}
	this.Rate = rate
	this.TrackedSearchCount = trackedSearchCount
	this.AddToCartCount = addToCartCount
	this.Date = date
	return this
}

// NewEmptyDailyAddToCartRates return a pointer to an empty DailyAddToCartRates object.
func NewEmptyDailyAddToCartRates() *DailyAddToCartRates {
	return &DailyAddToCartRates{}
}

// GetRate returns the Rate field value.
// If the value is explicit nil, the zero value for float64 will be returned.
func (o *DailyAddToCartRates) GetRate() float64 {
	if o == nil || o.Rate.Get() == nil {
		var ret float64
		return ret
	}

	return *o.Rate.Get()
}

// GetRateOk returns a tuple with the Rate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned.
func (o *DailyAddToCartRates) GetRateOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rate.Get(), o.Rate.IsSet()
}

// SetRate sets field value.
func (o *DailyAddToCartRates) SetRate(v float64) *DailyAddToCartRates {
	o.Rate.Set(&v)
	return o
}

// GetTrackedSearchCount returns the TrackedSearchCount field value.
func (o *DailyAddToCartRates) GetTrackedSearchCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TrackedSearchCount
}

// GetTrackedSearchCountOk returns a tuple with the TrackedSearchCount field value
// and a boolean to check if the value has been set.
func (o *DailyAddToCartRates) GetTrackedSearchCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TrackedSearchCount, true
}

// SetTrackedSearchCount sets field value.
func (o *DailyAddToCartRates) SetTrackedSearchCount(v int32) *DailyAddToCartRates {
	o.TrackedSearchCount = v
	return o
}

// GetAddToCartCount returns the AddToCartCount field value.
func (o *DailyAddToCartRates) GetAddToCartCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AddToCartCount
}

// GetAddToCartCountOk returns a tuple with the AddToCartCount field value
// and a boolean to check if the value has been set.
func (o *DailyAddToCartRates) GetAddToCartCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AddToCartCount, true
}

// SetAddToCartCount sets field value.
func (o *DailyAddToCartRates) SetAddToCartCount(v int32) *DailyAddToCartRates {
	o.AddToCartCount = v
	return o
}

// GetDate returns the Date field value.
func (o *DailyAddToCartRates) GetDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *DailyAddToCartRates) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value.
func (o *DailyAddToCartRates) SetDate(v string) *DailyAddToCartRates {
	o.Date = v
	return o
}

func (o DailyAddToCartRates) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["rate"] = o.Rate.Get()
	}
	if true {
		toSerialize["trackedSearchCount"] = o.TrackedSearchCount
	}
	if true {
		toSerialize["addToCartCount"] = o.AddToCartCount
	}
	if true {
		toSerialize["date"] = o.Date
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal DailyAddToCartRates: %w", err)
	}

	return serialized, nil
}

func (o DailyAddToCartRates) String() string {
	out := ""
	out += fmt.Sprintf("  rate=%v\n", o.Rate)
	out += fmt.Sprintf("  trackedSearchCount=%v\n", o.TrackedSearchCount)
	out += fmt.Sprintf("  addToCartCount=%v\n", o.AddToCartCount)
	out += fmt.Sprintf("  date=%v\n", o.Date)
	return fmt.Sprintf("DailyAddToCartRates {\n%s}", out)
}
