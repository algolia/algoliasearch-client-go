// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package analytics

import (
	"encoding/json"
	"fmt"

	"github.com/algolia/algoliasearch-client-go/v4/algolia/utils"
)

// GetAddToCartRateResponse struct for GetAddToCartRateResponse.
type GetAddToCartRateResponse struct {
	// Add-to-cart rate, calculated as number of tracked searches with at least one add-to-cart event divided by the number of tracked searches. If null, Algolia didn't receive any search requests with `clickAnalytics` set to true.
	Rate utils.NullableFloat64 `json:"rate"`
	// Number of tracked searches. Tracked searches are search requests where the `clickAnalytics` parameter is true.
	TrackedSearchCount int32 `json:"trackedSearchCount"`
	// Number of add-to-cart events from this search.
	AddToCartCount int32 `json:"addToCartCount"`
	// Daily add-to-cart rates.
	Dates []DailyAddToCartRates `json:"dates"`
}

// NewGetAddToCartRateResponse instantiates a new GetAddToCartRateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewGetAddToCartRateResponse(rate utils.NullableFloat64, trackedSearchCount int32, addToCartCount int32, dates []DailyAddToCartRates) *GetAddToCartRateResponse {
	this := &GetAddToCartRateResponse{}
	this.Rate = rate
	this.TrackedSearchCount = trackedSearchCount
	this.AddToCartCount = addToCartCount
	this.Dates = dates
	return this
}

// NewEmptyGetAddToCartRateResponse return a pointer to an empty GetAddToCartRateResponse object.
func NewEmptyGetAddToCartRateResponse() *GetAddToCartRateResponse {
	return &GetAddToCartRateResponse{}
}

// GetRate returns the Rate field value.
// If the value is explicit nil, the zero value for float64 will be returned.
func (o *GetAddToCartRateResponse) GetRate() float64 {
	if o == nil || o.Rate.Get() == nil {
		var ret float64
		return ret
	}

	return *o.Rate.Get()
}

// GetRateOk returns a tuple with the Rate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned.
func (o *GetAddToCartRateResponse) GetRateOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rate.Get(), o.Rate.IsSet()
}

// SetRate sets field value.
func (o *GetAddToCartRateResponse) SetRate(v float64) *GetAddToCartRateResponse {
	o.Rate.Set(&v)
	return o
}

// GetTrackedSearchCount returns the TrackedSearchCount field value.
func (o *GetAddToCartRateResponse) GetTrackedSearchCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TrackedSearchCount
}

// GetTrackedSearchCountOk returns a tuple with the TrackedSearchCount field value
// and a boolean to check if the value has been set.
func (o *GetAddToCartRateResponse) GetTrackedSearchCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TrackedSearchCount, true
}

// SetTrackedSearchCount sets field value.
func (o *GetAddToCartRateResponse) SetTrackedSearchCount(v int32) *GetAddToCartRateResponse {
	o.TrackedSearchCount = v
	return o
}

// GetAddToCartCount returns the AddToCartCount field value.
func (o *GetAddToCartRateResponse) GetAddToCartCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AddToCartCount
}

// GetAddToCartCountOk returns a tuple with the AddToCartCount field value
// and a boolean to check if the value has been set.
func (o *GetAddToCartRateResponse) GetAddToCartCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AddToCartCount, true
}

// SetAddToCartCount sets field value.
func (o *GetAddToCartRateResponse) SetAddToCartCount(v int32) *GetAddToCartRateResponse {
	o.AddToCartCount = v
	return o
}

// GetDates returns the Dates field value.
func (o *GetAddToCartRateResponse) GetDates() []DailyAddToCartRates {
	if o == nil {
		var ret []DailyAddToCartRates
		return ret
	}

	return o.Dates
}

// GetDatesOk returns a tuple with the Dates field value
// and a boolean to check if the value has been set.
func (o *GetAddToCartRateResponse) GetDatesOk() ([]DailyAddToCartRates, bool) {
	if o == nil {
		return nil, false
	}
	return o.Dates, true
}

// SetDates sets field value.
func (o *GetAddToCartRateResponse) SetDates(v []DailyAddToCartRates) *GetAddToCartRateResponse {
	o.Dates = v
	return o
}

func (o GetAddToCartRateResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["rate"] = o.Rate.Get()
	}
	if true {
		toSerialize["trackedSearchCount"] = o.TrackedSearchCount
	}
	if true {
		toSerialize["addToCartCount"] = o.AddToCartCount
	}
	if true {
		toSerialize["dates"] = o.Dates
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal GetAddToCartRateResponse: %w", err)
	}

	return serialized, nil
}

func (o GetAddToCartRateResponse) String() string {
	out := ""
	out += fmt.Sprintf("  rate=%v\n", o.Rate)
	out += fmt.Sprintf("  trackedSearchCount=%v\n", o.TrackedSearchCount)
	out += fmt.Sprintf("  addToCartCount=%v\n", o.AddToCartCount)
	out += fmt.Sprintf("  dates=%v\n", o.Dates)
	return fmt.Sprintf("GetAddToCartRateResponse {\n%s}", out)
}

type NullableGetAddToCartRateResponse struct {
	value *GetAddToCartRateResponse
	isSet bool
}

func (v NullableGetAddToCartRateResponse) Get() *GetAddToCartRateResponse {
	return v.value
}

func (v *NullableGetAddToCartRateResponse) Set(val *GetAddToCartRateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAddToCartRateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAddToCartRateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAddToCartRateResponse(val *GetAddToCartRateResponse) *NullableGetAddToCartRateResponse {
	return &NullableGetAddToCartRateResponse{value: val, isSet: true}
}

func (v NullableGetAddToCartRateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value) //nolint:wrapcheck
}

func (v *NullableGetAddToCartRateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value) //nolint:wrapcheck
}
