// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package analytics

import (
	"encoding/json"
	"fmt"
)

// GetTopHitsResponse - struct for GetTopHitsResponse.
type GetTopHitsResponse struct {
	TopHitsResponse                     *TopHitsResponse
	TopHitsResponseWithAnalytics        *TopHitsResponseWithAnalytics
	TopHitsResponseWithRevenueAnalytics *TopHitsResponseWithRevenueAnalytics
}

// TopHitsResponseAsGetTopHitsResponse is a convenience function that returns TopHitsResponse wrapped in GetTopHitsResponse.
func TopHitsResponseAsGetTopHitsResponse(v *TopHitsResponse) *GetTopHitsResponse {
	return &GetTopHitsResponse{
		TopHitsResponse: v,
	}
}

// TopHitsResponseWithAnalyticsAsGetTopHitsResponse is a convenience function that returns TopHitsResponseWithAnalytics wrapped in GetTopHitsResponse.
func TopHitsResponseWithAnalyticsAsGetTopHitsResponse(v *TopHitsResponseWithAnalytics) *GetTopHitsResponse {
	return &GetTopHitsResponse{
		TopHitsResponseWithAnalytics: v,
	}
}

// TopHitsResponseWithRevenueAnalyticsAsGetTopHitsResponse is a convenience function that returns TopHitsResponseWithRevenueAnalytics wrapped in GetTopHitsResponse.
func TopHitsResponseWithRevenueAnalyticsAsGetTopHitsResponse(v *TopHitsResponseWithRevenueAnalytics) *GetTopHitsResponse {
	return &GetTopHitsResponse{
		TopHitsResponseWithRevenueAnalytics: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct.
func (dst *GetTopHitsResponse) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal data into TopHitsResponse
	err = newStrictDecoder(data).Decode(&dst.TopHitsResponse)
	if err == nil && validateStruct(dst.TopHitsResponse) == nil {
		return nil // found the correct type
	} else {
		dst.TopHitsResponse = nil
	}
	// try to unmarshal data into TopHitsResponseWithAnalytics
	err = newStrictDecoder(data).Decode(&dst.TopHitsResponseWithAnalytics)
	if err == nil && validateStruct(dst.TopHitsResponseWithAnalytics) == nil {
		return nil // found the correct type
	} else {
		dst.TopHitsResponseWithAnalytics = nil
	}
	// try to unmarshal data into TopHitsResponseWithRevenueAnalytics
	err = newStrictDecoder(data).Decode(&dst.TopHitsResponseWithRevenueAnalytics)
	if err == nil && validateStruct(dst.TopHitsResponseWithRevenueAnalytics) == nil {
		return nil // found the correct type
	} else {
		dst.TopHitsResponseWithRevenueAnalytics = nil
	}

	return fmt.Errorf("Data failed to match schemas in oneOf(GetTopHitsResponse)")
}

// Marshal data from the first non-nil pointers in the struct to JSON.
func (src GetTopHitsResponse) MarshalJSON() ([]byte, error) {
	if src.TopHitsResponse != nil {
		serialized, err := json.Marshal(&src.TopHitsResponse)
		if err != nil {
			return nil, fmt.Errorf("failed to unmarshal one of TopHitsResponse of GetTopHitsResponse: %w", err)
		}

		return serialized, nil
	}

	if src.TopHitsResponseWithAnalytics != nil {
		serialized, err := json.Marshal(&src.TopHitsResponseWithAnalytics)
		if err != nil {
			return nil, fmt.Errorf("failed to unmarshal one of TopHitsResponseWithAnalytics of GetTopHitsResponse: %w", err)
		}

		return serialized, nil
	}

	if src.TopHitsResponseWithRevenueAnalytics != nil {
		serialized, err := json.Marshal(&src.TopHitsResponseWithRevenueAnalytics)
		if err != nil {
			return nil, fmt.Errorf("failed to unmarshal one of TopHitsResponseWithRevenueAnalytics of GetTopHitsResponse: %w", err)
		}

		return serialized, nil
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance.
func (obj GetTopHitsResponse) GetActualInstance() any {
	if obj.TopHitsResponse != nil {
		return *obj.TopHitsResponse
	}

	if obj.TopHitsResponseWithAnalytics != nil {
		return *obj.TopHitsResponseWithAnalytics
	}

	if obj.TopHitsResponseWithRevenueAnalytics != nil {
		return *obj.TopHitsResponseWithRevenueAnalytics
	}

	// all schemas are nil
	return nil
}
