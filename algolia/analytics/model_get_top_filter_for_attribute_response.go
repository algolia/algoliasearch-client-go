// File generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation.
package analytics

import (
	"encoding/json"
	"fmt"
)

// GetTopFilterForAttributeResponse struct for GetTopFilterForAttributeResponse.
type GetTopFilterForAttributeResponse struct {
	// Filter values for an attribute.
	Values []GetTopFilterForAttribute `json:"values"`
}

// NewGetTopFilterForAttributeResponse instantiates a new GetTopFilterForAttributeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewGetTopFilterForAttributeResponse(values []GetTopFilterForAttribute) *GetTopFilterForAttributeResponse {
	this := &GetTopFilterForAttributeResponse{}
	this.Values = values
	return this
}

// NewEmptyGetTopFilterForAttributeResponse return a pointer to an empty GetTopFilterForAttributeResponse object.
func NewEmptyGetTopFilterForAttributeResponse() *GetTopFilterForAttributeResponse {
	return &GetTopFilterForAttributeResponse{}
}

// GetValues returns the Values field value.
func (o *GetTopFilterForAttributeResponse) GetValues() []GetTopFilterForAttribute {
	if o == nil {
		var ret []GetTopFilterForAttribute
		return ret
	}

	return o.Values
}

// GetValuesOk returns a tuple with the Values field value
// and a boolean to check if the value has been set.
func (o *GetTopFilterForAttributeResponse) GetValuesOk() ([]GetTopFilterForAttribute, bool) {
	if o == nil {
		return nil, false
	}
	return o.Values, true
}

// SetValues sets field value.
func (o *GetTopFilterForAttributeResponse) SetValues(v []GetTopFilterForAttribute) *GetTopFilterForAttributeResponse {
	o.Values = v
	return o
}

func (o GetTopFilterForAttributeResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["values"] = o.Values
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal GetTopFilterForAttributeResponse: %w", err)
	}

	return serialized, nil
}

func (o GetTopFilterForAttributeResponse) String() string {
	out := ""
	out += fmt.Sprintf("  values=%v\n", o.Values)
	return fmt.Sprintf("GetTopFilterForAttributeResponse {\n%s}", out)
}

type NullableGetTopFilterForAttributeResponse struct {
	value *GetTopFilterForAttributeResponse
	isSet bool
}

func (v NullableGetTopFilterForAttributeResponse) Get() *GetTopFilterForAttributeResponse {
	return v.value
}

func (v *NullableGetTopFilterForAttributeResponse) Set(val *GetTopFilterForAttributeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTopFilterForAttributeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTopFilterForAttributeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTopFilterForAttributeResponse(val *GetTopFilterForAttributeResponse) *NullableGetTopFilterForAttributeResponse {
	return &NullableGetTopFilterForAttributeResponse{value: val, isSet: true}
}

func (v NullableGetTopFilterForAttributeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value) //nolint:wrapcheck
}

func (v *NullableGetTopFilterForAttributeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value) //nolint:wrapcheck
}
