// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package analytics

import (
	"encoding/json"
	"fmt"
)

// GetTopCountriesResponse struct for GetTopCountriesResponse.
type GetTopCountriesResponse struct {
	// Countries and number of searches.
	Countries []TopCountry `json:"countries"`
}

// NewGetTopCountriesResponse instantiates a new GetTopCountriesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewGetTopCountriesResponse(countries []TopCountry) *GetTopCountriesResponse {
	this := &GetTopCountriesResponse{}
	this.Countries = countries
	return this
}

// NewEmptyGetTopCountriesResponse return a pointer to an empty GetTopCountriesResponse object.
func NewEmptyGetTopCountriesResponse() *GetTopCountriesResponse {
	return &GetTopCountriesResponse{}
}

// GetCountries returns the Countries field value.
func (o *GetTopCountriesResponse) GetCountries() []TopCountry {
	if o == nil {
		var ret []TopCountry
		return ret
	}

	return o.Countries
}

// GetCountriesOk returns a tuple with the Countries field value
// and a boolean to check if the value has been set.
func (o *GetTopCountriesResponse) GetCountriesOk() ([]TopCountry, bool) {
	if o == nil {
		return nil, false
	}
	return o.Countries, true
}

// SetCountries sets field value.
func (o *GetTopCountriesResponse) SetCountries(v []TopCountry) *GetTopCountriesResponse {
	o.Countries = v
	return o
}

func (o GetTopCountriesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["countries"] = o.Countries
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal GetTopCountriesResponse: %w", err)
	}

	return serialized, nil
}

func (o GetTopCountriesResponse) String() string {
	out := ""
	out += fmt.Sprintf("  countries=%v\n", o.Countries)
	return fmt.Sprintf("GetTopCountriesResponse {\n%s}", out)
}
