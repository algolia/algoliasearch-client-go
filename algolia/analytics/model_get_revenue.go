// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package analytics

import (
	"encoding/json"
	"fmt"
)

// GetRevenue struct for GetRevenue.
type GetRevenue struct {
	// Revenue associated with this search, broken-down by currencies.
	Currencies map[string]CurrenciesValue `json:"currencies"`
	// Daily revenue.
	Dates []DailyRevenue `json:"dates"`
}

// NewGetRevenue instantiates a new GetRevenue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewGetRevenue(currencies map[string]CurrenciesValue, dates []DailyRevenue) *GetRevenue {
	this := &GetRevenue{}
	this.Currencies = currencies
	this.Dates = dates
	return this
}

// NewEmptyGetRevenue return a pointer to an empty GetRevenue object.
func NewEmptyGetRevenue() *GetRevenue {
	return &GetRevenue{}
}

// GetCurrencies returns the Currencies field value.
func (o *GetRevenue) GetCurrencies() map[string]CurrenciesValue {
	if o == nil {
		var ret map[string]CurrenciesValue
		return ret
	}

	return o.Currencies
}

// GetCurrenciesOk returns a tuple with the Currencies field value
// and a boolean to check if the value has been set.
func (o *GetRevenue) GetCurrenciesOk() (*map[string]CurrenciesValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currencies, true
}

// SetCurrencies sets field value.
func (o *GetRevenue) SetCurrencies(v map[string]CurrenciesValue) *GetRevenue {
	o.Currencies = v
	return o
}

// GetDates returns the Dates field value.
func (o *GetRevenue) GetDates() []DailyRevenue {
	if o == nil {
		var ret []DailyRevenue
		return ret
	}

	return o.Dates
}

// GetDatesOk returns a tuple with the Dates field value
// and a boolean to check if the value has been set.
func (o *GetRevenue) GetDatesOk() ([]DailyRevenue, bool) {
	if o == nil {
		return nil, false
	}
	return o.Dates, true
}

// SetDates sets field value.
func (o *GetRevenue) SetDates(v []DailyRevenue) *GetRevenue {
	o.Dates = v
	return o
}

func (o GetRevenue) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["currencies"] = o.Currencies
	}
	if true {
		toSerialize["dates"] = o.Dates
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal GetRevenue: %w", err)
	}

	return serialized, nil
}

func (o GetRevenue) String() string {
	out := ""
	out += fmt.Sprintf("  currencies=%v\n", o.Currencies)
	out += fmt.Sprintf("  dates=%v\n", o.Dates)
	return fmt.Sprintf("GetRevenue {\n%s}", out)
}

type NullableGetRevenue struct {
	value *GetRevenue
	isSet bool
}

func (v NullableGetRevenue) Get() *GetRevenue {
	return v.value
}

func (v *NullableGetRevenue) Set(val *GetRevenue) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRevenue) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRevenue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRevenue(val *GetRevenue) *NullableGetRevenue {
	return &NullableGetRevenue{value: val, isSet: true}
}

func (v NullableGetRevenue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value) //nolint:wrapcheck
}

func (v *NullableGetRevenue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value) //nolint:wrapcheck
}
