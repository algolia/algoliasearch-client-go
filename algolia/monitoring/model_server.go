// File generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation.
package monitoring

import (
	"encoding/json"
	"fmt"
)

// Server struct for Server.
type Server struct {
	// Server name.
	Name   *string `json:"name,omitempty"`
	Region *Region `json:"region,omitempty"`
	// Included to support legacy applications. Use `is_replica` instead.
	// Deprecated
	IsSlave *bool `json:"is_slave,omitempty"`
	// Whether this server is a replica of another server.
	IsReplica *bool `json:"is_replica,omitempty"`
	// Name of the cluster to which this server belongs.
	Cluster *string       `json:"cluster,omitempty"`
	Status  *ServerStatus `json:"status,omitempty"`
	Type    *Type         `json:"type,omitempty"`
}

type ServerOption func(f *Server)

func WithServerName(val string) ServerOption {
	return func(f *Server) {
		f.Name = &val
	}
}

func WithServerRegion(val Region) ServerOption {
	return func(f *Server) {
		f.Region = &val
	}
}

func WithServerIsSlave(val bool) ServerOption {
	return func(f *Server) {
		f.IsSlave = &val
	}
}

func WithServerIsReplica(val bool) ServerOption {
	return func(f *Server) {
		f.IsReplica = &val
	}
}

func WithServerCluster(val string) ServerOption {
	return func(f *Server) {
		f.Cluster = &val
	}
}

func WithServerStatus(val ServerStatus) ServerOption {
	return func(f *Server) {
		f.Status = &val
	}
}

func WithServerType(val Type) ServerOption {
	return func(f *Server) {
		f.Type = &val
	}
}

// NewServer instantiates a new Server object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewServer(opts ...ServerOption) *Server {
	this := &Server{}
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptyServer return a pointer to an empty Server object.
func NewEmptyServer() *Server {
	return &Server{}
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Server) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Server) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Server) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Server) SetName(v string) *Server {
	o.Name = &v
	return o
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *Server) GetRegion() Region {
	if o == nil || o.Region == nil {
		var ret Region
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Server) GetRegionOk() (*Region, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *Server) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given Region and assigns it to the Region field.
func (o *Server) SetRegion(v Region) *Server {
	o.Region = &v
	return o
}

// GetIsSlave returns the IsSlave field value if set, zero value otherwise.
// Deprecated.
func (o *Server) GetIsSlave() bool {
	if o == nil || o.IsSlave == nil {
		var ret bool
		return ret
	}
	return *o.IsSlave
}

// GetIsSlaveOk returns a tuple with the IsSlave field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated.
func (o *Server) GetIsSlaveOk() (*bool, bool) {
	if o == nil || o.IsSlave == nil {
		return nil, false
	}
	return o.IsSlave, true
}

// HasIsSlave returns a boolean if a field has been set.
func (o *Server) HasIsSlave() bool {
	if o != nil && o.IsSlave != nil {
		return true
	}

	return false
}

// SetIsSlave gets a reference to the given bool and assigns it to the IsSlave field.
// Deprecated.
func (o *Server) SetIsSlave(v bool) *Server {
	o.IsSlave = &v
	return o
}

// GetIsReplica returns the IsReplica field value if set, zero value otherwise.
func (o *Server) GetIsReplica() bool {
	if o == nil || o.IsReplica == nil {
		var ret bool
		return ret
	}
	return *o.IsReplica
}

// GetIsReplicaOk returns a tuple with the IsReplica field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Server) GetIsReplicaOk() (*bool, bool) {
	if o == nil || o.IsReplica == nil {
		return nil, false
	}
	return o.IsReplica, true
}

// HasIsReplica returns a boolean if a field has been set.
func (o *Server) HasIsReplica() bool {
	if o != nil && o.IsReplica != nil {
		return true
	}

	return false
}

// SetIsReplica gets a reference to the given bool and assigns it to the IsReplica field.
func (o *Server) SetIsReplica(v bool) *Server {
	o.IsReplica = &v
	return o
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *Server) GetCluster() string {
	if o == nil || o.Cluster == nil {
		var ret string
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Server) GetClusterOk() (*string, bool) {
	if o == nil || o.Cluster == nil {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *Server) HasCluster() bool {
	if o != nil && o.Cluster != nil {
		return true
	}

	return false
}

// SetCluster gets a reference to the given string and assigns it to the Cluster field.
func (o *Server) SetCluster(v string) *Server {
	o.Cluster = &v
	return o
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Server) GetStatus() ServerStatus {
	if o == nil || o.Status == nil {
		var ret ServerStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Server) GetStatusOk() (*ServerStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Server) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ServerStatus and assigns it to the Status field.
func (o *Server) SetStatus(v ServerStatus) *Server {
	o.Status = &v
	return o
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Server) GetType() Type {
	if o == nil || o.Type == nil {
		var ret Type
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Server) GetTypeOk() (*Type, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Server) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given Type and assigns it to the Type field.
func (o *Server) SetType(v Type) *Server {
	o.Type = &v
	return o
}

func (o Server) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.IsSlave != nil {
		toSerialize["is_slave"] = o.IsSlave
	}
	if o.IsReplica != nil {
		toSerialize["is_replica"] = o.IsReplica
	}
	if o.Cluster != nil {
		toSerialize["cluster"] = o.Cluster
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal Server: %w", err)
	}

	return serialized, nil
}

func (o Server) String() string {
	out := ""
	out += fmt.Sprintf("  name=%v\n", o.Name)
	out += fmt.Sprintf("  region=%v\n", o.Region)
	out += fmt.Sprintf("  is_slave=%v\n", o.IsSlave)
	out += fmt.Sprintf("  is_replica=%v\n", o.IsReplica)
	out += fmt.Sprintf("  cluster=%v\n", o.Cluster)
	out += fmt.Sprintf("  status=%v\n", o.Status)
	out += fmt.Sprintf("  type=%v\n", o.Type)
	return fmt.Sprintf("Server {\n%s}", out)
}

type NullableServer struct {
	value *Server
	isSet bool
}

func (v NullableServer) Get() *Server {
	return v.value
}

func (v *NullableServer) Set(val *Server) {
	v.value = val
	v.isSet = true
}

func (v NullableServer) IsSet() bool {
	return v.isSet
}

func (v *NullableServer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServer(val *Server) *NullableServer {
	return &NullableServer{value: val, isSet: true}
}

func (v NullableServer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value) //nolint:wrapcheck
}

func (v *NullableServer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value) //nolint:wrapcheck
}
