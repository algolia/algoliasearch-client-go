// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package monitoring

import (
	"encoding/json"
	"fmt"
)

// IncidentEntry struct for IncidentEntry.
type IncidentEntry struct {
	// Timestamp, measured in milliseconds since the Unix epoch.
	T *int64    `json:"t,omitempty"`
	V *Incident `json:"v,omitempty"`
}

type IncidentEntryOption func(f *IncidentEntry)

func WithIncidentEntryT(val int64) IncidentEntryOption {
	return func(f *IncidentEntry) {
		f.T = &val
	}
}

func WithIncidentEntryV(val Incident) IncidentEntryOption {
	return func(f *IncidentEntry) {
		f.V = &val
	}
}

// NewIncidentEntry instantiates a new IncidentEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewIncidentEntry(opts ...IncidentEntryOption) *IncidentEntry {
	this := &IncidentEntry{}
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptyIncidentEntry return a pointer to an empty IncidentEntry object.
func NewEmptyIncidentEntry() *IncidentEntry {
	return &IncidentEntry{}
}

// GetT returns the T field value if set, zero value otherwise.
func (o *IncidentEntry) GetT() int64 {
	if o == nil || o.T == nil {
		var ret int64
		return ret
	}
	return *o.T
}

// GetTOk returns a tuple with the T field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentEntry) GetTOk() (*int64, bool) {
	if o == nil || o.T == nil {
		return nil, false
	}
	return o.T, true
}

// HasT returns a boolean if a field has been set.
func (o *IncidentEntry) HasT() bool {
	if o != nil && o.T != nil {
		return true
	}

	return false
}

// SetT gets a reference to the given int64 and assigns it to the T field.
func (o *IncidentEntry) SetT(v int64) *IncidentEntry {
	o.T = &v
	return o
}

// GetV returns the V field value if set, zero value otherwise.
func (o *IncidentEntry) GetV() Incident {
	if o == nil || o.V == nil {
		var ret Incident
		return ret
	}
	return *o.V
}

// GetVOk returns a tuple with the V field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IncidentEntry) GetVOk() (*Incident, bool) {
	if o == nil || o.V == nil {
		return nil, false
	}
	return o.V, true
}

// HasV returns a boolean if a field has been set.
func (o *IncidentEntry) HasV() bool {
	if o != nil && o.V != nil {
		return true
	}

	return false
}

// SetV gets a reference to the given Incident and assigns it to the V field.
func (o *IncidentEntry) SetV(v *Incident) *IncidentEntry {
	o.V = v
	return o
}

func (o IncidentEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.T != nil {
		toSerialize["t"] = o.T
	}
	if o.V != nil {
		toSerialize["v"] = o.V
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal IncidentEntry: %w", err)
	}

	return serialized, nil
}

func (o IncidentEntry) String() string {
	out := ""
	out += fmt.Sprintf("  t=%v\n", o.T)
	out += fmt.Sprintf("  v=%v\n", o.V)
	return fmt.Sprintf("IncidentEntry {\n%s}", out)
}
