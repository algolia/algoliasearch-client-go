// File generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation.
package monitoring

import (
	"encoding/json"
	"fmt"
)

// ProbesMetric struct for ProbesMetric.
type ProbesMetric struct {
	// Timestamp in [Unix epoch time](https://wikipedia.org/wiki/Unix_time) in milliseconds.
	T *int64 `json:"t,omitempty"`
	// Value of the metric.
	V *int32 `json:"v,omitempty"`
}

type ProbesMetricOption func(f *ProbesMetric)

func WithProbesMetricT(val int64) ProbesMetricOption {
	return func(f *ProbesMetric) {
		f.T = &val
	}
}

func WithProbesMetricV(val int32) ProbesMetricOption {
	return func(f *ProbesMetric) {
		f.V = &val
	}
}

// NewProbesMetric instantiates a new ProbesMetric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewProbesMetric(opts ...ProbesMetricOption) *ProbesMetric {
	this := &ProbesMetric{}
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewProbesMetricWithDefaults instantiates a new ProbesMetric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set.
func NewProbesMetricWithDefaults() *ProbesMetric {
	this := &ProbesMetric{}
	return this
}

// GetT returns the T field value if set, zero value otherwise.
func (o *ProbesMetric) GetT() int64 {
	if o == nil || o.T == nil {
		var ret int64
		return ret
	}
	return *o.T
}

// GetTOk returns a tuple with the T field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProbesMetric) GetTOk() (*int64, bool) {
	if o == nil || o.T == nil {
		return nil, false
	}
	return o.T, true
}

// HasT returns a boolean if a field has been set.
func (o *ProbesMetric) HasT() bool {
	if o != nil && o.T != nil {
		return true
	}

	return false
}

// SetT gets a reference to the given int64 and assigns it to the T field.
func (o *ProbesMetric) SetT(v int64) {
	o.T = &v
}

// GetV returns the V field value if set, zero value otherwise.
func (o *ProbesMetric) GetV() int32 {
	if o == nil || o.V == nil {
		var ret int32
		return ret
	}
	return *o.V
}

// GetVOk returns a tuple with the V field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProbesMetric) GetVOk() (*int32, bool) {
	if o == nil || o.V == nil {
		return nil, false
	}
	return o.V, true
}

// HasV returns a boolean if a field has been set.
func (o *ProbesMetric) HasV() bool {
	if o != nil && o.V != nil {
		return true
	}

	return false
}

// SetV gets a reference to the given int32 and assigns it to the V field.
func (o *ProbesMetric) SetV(v int32) {
	o.V = &v
}

func (o ProbesMetric) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.T != nil {
		toSerialize["t"] = o.T
	}
	if o.V != nil {
		toSerialize["v"] = o.V
	}
	return json.Marshal(toSerialize)
}

func (o ProbesMetric) String() string {
	out := ""
	out += fmt.Sprintf("  t=%v\n", o.T)
	out += fmt.Sprintf("  v=%v\n", o.V)
	return fmt.Sprintf("ProbesMetric {\n%s}", out)
}

type NullableProbesMetric struct {
	value *ProbesMetric
	isSet bool
}

func (v NullableProbesMetric) Get() *ProbesMetric {
	return v.value
}

func (v *NullableProbesMetric) Set(val *ProbesMetric) {
	v.value = val
	v.isSet = true
}

func (v NullableProbesMetric) IsSet() bool {
	return v.isSet
}

func (v *NullableProbesMetric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProbesMetric(val *ProbesMetric) *NullableProbesMetric {
	return &NullableProbesMetric{value: val, isSet: true}
}

func (v NullableProbesMetric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProbesMetric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
