// File generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation.
package recommend

import (
	"encoding/json"
	"fmt"
)

// BaseRecommendedForYouQuery struct for BaseRecommendedForYouQuery.
type BaseRecommendedForYouQuery struct {
	Model              RecommendedForYouModel            `json:"model"`
	QueryParameters    *RecommendedForYouQueryParameters `json:"queryParameters,omitempty"`
	FallbackParameters *RecommendedForYouQueryParameters `json:"fallbackParameters,omitempty"`
}

type BaseRecommendedForYouQueryOption func(f *BaseRecommendedForYouQuery)

func WithBaseRecommendedForYouQueryQueryParameters(val RecommendedForYouQueryParameters) BaseRecommendedForYouQueryOption {
	return func(f *BaseRecommendedForYouQuery) {
		f.QueryParameters = &val
	}
}

func WithBaseRecommendedForYouQueryFallbackParameters(val RecommendedForYouQueryParameters) BaseRecommendedForYouQueryOption {
	return func(f *BaseRecommendedForYouQuery) {
		f.FallbackParameters = &val
	}
}

// NewBaseRecommendedForYouQuery instantiates a new BaseRecommendedForYouQuery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewBaseRecommendedForYouQuery(model RecommendedForYouModel, opts ...BaseRecommendedForYouQueryOption) *BaseRecommendedForYouQuery {
	this := &BaseRecommendedForYouQuery{}
	this.Model = model
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptyBaseRecommendedForYouQuery return a pointer to an empty BaseRecommendedForYouQuery object.
func NewEmptyBaseRecommendedForYouQuery() *BaseRecommendedForYouQuery {
	return &BaseRecommendedForYouQuery{}
}

// GetModel returns the Model field value.
func (o *BaseRecommendedForYouQuery) GetModel() RecommendedForYouModel {
	if o == nil {
		var ret RecommendedForYouModel
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *BaseRecommendedForYouQuery) GetModelOk() (*RecommendedForYouModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value.
func (o *BaseRecommendedForYouQuery) SetModel(v RecommendedForYouModel) *BaseRecommendedForYouQuery {
	o.Model = v
	return o
}

// GetQueryParameters returns the QueryParameters field value if set, zero value otherwise.
func (o *BaseRecommendedForYouQuery) GetQueryParameters() RecommendedForYouQueryParameters {
	if o == nil || o.QueryParameters == nil {
		var ret RecommendedForYouQueryParameters
		return ret
	}
	return *o.QueryParameters
}

// GetQueryParametersOk returns a tuple with the QueryParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseRecommendedForYouQuery) GetQueryParametersOk() (*RecommendedForYouQueryParameters, bool) {
	if o == nil || o.QueryParameters == nil {
		return nil, false
	}
	return o.QueryParameters, true
}

// HasQueryParameters returns a boolean if a field has been set.
func (o *BaseRecommendedForYouQuery) HasQueryParameters() bool {
	if o != nil && o.QueryParameters != nil {
		return true
	}

	return false
}

// SetQueryParameters gets a reference to the given RecommendedForYouQueryParameters and assigns it to the QueryParameters field.
func (o *BaseRecommendedForYouQuery) SetQueryParameters(v *RecommendedForYouQueryParameters) *BaseRecommendedForYouQuery {
	o.QueryParameters = v
	return o
}

// GetFallbackParameters returns the FallbackParameters field value if set, zero value otherwise.
func (o *BaseRecommendedForYouQuery) GetFallbackParameters() RecommendedForYouQueryParameters {
	if o == nil || o.FallbackParameters == nil {
		var ret RecommendedForYouQueryParameters
		return ret
	}
	return *o.FallbackParameters
}

// GetFallbackParametersOk returns a tuple with the FallbackParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseRecommendedForYouQuery) GetFallbackParametersOk() (*RecommendedForYouQueryParameters, bool) {
	if o == nil || o.FallbackParameters == nil {
		return nil, false
	}
	return o.FallbackParameters, true
}

// HasFallbackParameters returns a boolean if a field has been set.
func (o *BaseRecommendedForYouQuery) HasFallbackParameters() bool {
	if o != nil && o.FallbackParameters != nil {
		return true
	}

	return false
}

// SetFallbackParameters gets a reference to the given RecommendedForYouQueryParameters and assigns it to the FallbackParameters field.
func (o *BaseRecommendedForYouQuery) SetFallbackParameters(v *RecommendedForYouQueryParameters) *BaseRecommendedForYouQuery {
	o.FallbackParameters = v
	return o
}

func (o BaseRecommendedForYouQuery) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["model"] = o.Model
	}
	if o.QueryParameters != nil {
		toSerialize["queryParameters"] = o.QueryParameters
	}
	if o.FallbackParameters != nil {
		toSerialize["fallbackParameters"] = o.FallbackParameters
	}
	return json.Marshal(toSerialize)
}

func (o BaseRecommendedForYouQuery) String() string {
	out := ""
	out += fmt.Sprintf("  model=%v\n", o.Model)
	out += fmt.Sprintf("  queryParameters=%v\n", o.QueryParameters)
	out += fmt.Sprintf("  fallbackParameters=%v\n", o.FallbackParameters)
	return fmt.Sprintf("BaseRecommendedForYouQuery {\n%s}", out)
}

type NullableBaseRecommendedForYouQuery struct {
	value *BaseRecommendedForYouQuery
	isSet bool
}

func (v NullableBaseRecommendedForYouQuery) Get() *BaseRecommendedForYouQuery {
	return v.value
}

func (v *NullableBaseRecommendedForYouQuery) Set(val *BaseRecommendedForYouQuery) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseRecommendedForYouQuery) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseRecommendedForYouQuery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseRecommendedForYouQuery(val *BaseRecommendedForYouQuery) *NullableBaseRecommendedForYouQuery {
	return &NullableBaseRecommendedForYouQuery{value: val, isSet: true}
}

func (v NullableBaseRecommendedForYouQuery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseRecommendedForYouQuery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
