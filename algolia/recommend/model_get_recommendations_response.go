// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package recommend

import (
	"encoding/json"
	"fmt"
)

// GetRecommendationsResponse struct for GetRecommendationsResponse.
type GetRecommendationsResponse struct {
	Results []RecommendationsResults `json:"results,omitempty"`
}

type GetRecommendationsResponseOption func(f *GetRecommendationsResponse)

func WithGetRecommendationsResponseResults(val []RecommendationsResults) GetRecommendationsResponseOption {
	return func(f *GetRecommendationsResponse) {
		f.Results = val
	}
}

// NewGetRecommendationsResponse instantiates a new GetRecommendationsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewGetRecommendationsResponse(opts ...GetRecommendationsResponseOption) *GetRecommendationsResponse {
	this := &GetRecommendationsResponse{}
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptyGetRecommendationsResponse return a pointer to an empty GetRecommendationsResponse object.
func NewEmptyGetRecommendationsResponse() *GetRecommendationsResponse {
	return &GetRecommendationsResponse{}
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *GetRecommendationsResponse) GetResults() []RecommendationsResults {
	if o == nil || o.Results == nil {
		var ret []RecommendationsResults
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRecommendationsResponse) GetResultsOk() ([]RecommendationsResults, bool) {
	if o == nil || o.Results == nil {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *GetRecommendationsResponse) HasResults() bool {
	if o != nil && o.Results != nil {
		return true
	}

	return false
}

// SetResults gets a reference to the given []RecommendationsResults and assigns it to the Results field.
func (o *GetRecommendationsResponse) SetResults(v []RecommendationsResults) *GetRecommendationsResponse {
	o.Results = v
	return o
}

func (o GetRecommendationsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.Results != nil {
		toSerialize["results"] = o.Results
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal GetRecommendationsResponse: %w", err)
	}

	return serialized, nil
}

func (o GetRecommendationsResponse) String() string {
	out := ""
	out += fmt.Sprintf("  results=%v\n", o.Results)
	return fmt.Sprintf("GetRecommendationsResponse {\n%s}", out)
}

type NullableGetRecommendationsResponse struct {
	value *GetRecommendationsResponse
	isSet bool
}

func (v NullableGetRecommendationsResponse) Get() *GetRecommendationsResponse {
	return v.value
}

func (v *NullableGetRecommendationsResponse) Set(val *GetRecommendationsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRecommendationsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRecommendationsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRecommendationsResponse(val *GetRecommendationsResponse) *NullableGetRecommendationsResponse {
	return &NullableGetRecommendationsResponse{value: val, isSet: true}
}

func (v NullableGetRecommendationsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value) //nolint:wrapcheck
}

func (v *NullableGetRecommendationsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value) //nolint:wrapcheck
}
