// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package recommend

import (
	"encoding/json"
	"fmt"
)

// TrendingFacetsQuery struct for TrendingFacetsQuery
type TrendingFacetsQuery struct {
	// Facet name for trending models.
	FacetName string               `json:"facetName" validate:"required"`
	Model     *TrendingFacetsModel `json:"model,omitempty"`
	// Algolia index name.
	IndexName string `json:"indexName" validate:"required"`
	// Recommendations with a confidence score lower than `threshold` won't appear in results. > **Note**: Each recommendation has a confidence score of 0 to 100. The closer the score is to 100, the more relevant the recommendations are.
	Threshold *int32 `json:"threshold,omitempty"`
	// Maximum number of recommendations to retrieve. If 0, all recommendations will be returned.
	MaxRecommendations *int32 `json:"maxRecommendations,omitempty"`
}

type TrendingFacetsQueryOption func(f *TrendingFacetsQuery)

func WithTrendingFacetsQueryModel(val TrendingFacetsModel) TrendingFacetsQueryOption {
	return func(f *TrendingFacetsQuery) {
		f.Model = &val
	}
}

func WithTrendingFacetsQueryThreshold(val int32) TrendingFacetsQueryOption {
	return func(f *TrendingFacetsQuery) {
		f.Threshold = &val
	}
}

func WithTrendingFacetsQueryMaxRecommendations(val int32) TrendingFacetsQueryOption {
	return func(f *TrendingFacetsQuery) {
		f.MaxRecommendations = &val
	}
}

// NewTrendingFacetsQuery instantiates a new TrendingFacetsQuery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrendingFacetsQuery(facetName string, indexName string, opts ...TrendingFacetsQueryOption) *TrendingFacetsQuery {
	this := &TrendingFacetsQuery{}
	this.FacetName = facetName
	this.IndexName = indexName
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewTrendingFacetsQueryWithDefaults instantiates a new TrendingFacetsQuery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrendingFacetsQueryWithDefaults() *TrendingFacetsQuery {
	this := &TrendingFacetsQuery{}
	var maxRecommendations int32 = 0
	this.MaxRecommendations = &maxRecommendations
	return this
}

// GetFacetName returns the FacetName field value
func (o *TrendingFacetsQuery) GetFacetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FacetName
}

// GetFacetNameOk returns a tuple with the FacetName field value
// and a boolean to check if the value has been set.
func (o *TrendingFacetsQuery) GetFacetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FacetName, true
}

// SetFacetName sets field value
func (o *TrendingFacetsQuery) SetFacetName(v string) {
	o.FacetName = v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *TrendingFacetsQuery) GetModel() TrendingFacetsModel {
	if o == nil || o.Model == nil {
		var ret TrendingFacetsModel
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrendingFacetsQuery) GetModelOk() (*TrendingFacetsModel, bool) {
	if o == nil || o.Model == nil {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *TrendingFacetsQuery) HasModel() bool {
	if o != nil && o.Model != nil {
		return true
	}

	return false
}

// SetModel gets a reference to the given TrendingFacetsModel and assigns it to the Model field.
func (o *TrendingFacetsQuery) SetModel(v TrendingFacetsModel) {
	o.Model = &v
}

// GetIndexName returns the IndexName field value
func (o *TrendingFacetsQuery) GetIndexName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IndexName
}

// GetIndexNameOk returns a tuple with the IndexName field value
// and a boolean to check if the value has been set.
func (o *TrendingFacetsQuery) GetIndexNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IndexName, true
}

// SetIndexName sets field value
func (o *TrendingFacetsQuery) SetIndexName(v string) {
	o.IndexName = v
}

// GetThreshold returns the Threshold field value if set, zero value otherwise.
func (o *TrendingFacetsQuery) GetThreshold() int32 {
	if o == nil || o.Threshold == nil {
		var ret int32
		return ret
	}
	return *o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrendingFacetsQuery) GetThresholdOk() (*int32, bool) {
	if o == nil || o.Threshold == nil {
		return nil, false
	}
	return o.Threshold, true
}

// HasThreshold returns a boolean if a field has been set.
func (o *TrendingFacetsQuery) HasThreshold() bool {
	if o != nil && o.Threshold != nil {
		return true
	}

	return false
}

// SetThreshold gets a reference to the given int32 and assigns it to the Threshold field.
func (o *TrendingFacetsQuery) SetThreshold(v int32) {
	o.Threshold = &v
}

// GetMaxRecommendations returns the MaxRecommendations field value if set, zero value otherwise.
func (o *TrendingFacetsQuery) GetMaxRecommendations() int32 {
	if o == nil || o.MaxRecommendations == nil {
		var ret int32
		return ret
	}
	return *o.MaxRecommendations
}

// GetMaxRecommendationsOk returns a tuple with the MaxRecommendations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrendingFacetsQuery) GetMaxRecommendationsOk() (*int32, bool) {
	if o == nil || o.MaxRecommendations == nil {
		return nil, false
	}
	return o.MaxRecommendations, true
}

// HasMaxRecommendations returns a boolean if a field has been set.
func (o *TrendingFacetsQuery) HasMaxRecommendations() bool {
	if o != nil && o.MaxRecommendations != nil {
		return true
	}

	return false
}

// SetMaxRecommendations gets a reference to the given int32 and assigns it to the MaxRecommendations field.
func (o *TrendingFacetsQuery) SetMaxRecommendations(v int32) {
	o.MaxRecommendations = &v
}

func (o TrendingFacetsQuery) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["facetName"] = o.FacetName
	}
	if o.Model != nil {
		toSerialize["model"] = o.Model
	}
	if true {
		toSerialize["indexName"] = o.IndexName
	}
	if o.Threshold != nil {
		toSerialize["threshold"] = o.Threshold
	}
	if o.MaxRecommendations != nil {
		toSerialize["maxRecommendations"] = o.MaxRecommendations
	}
	return json.Marshal(toSerialize)
}

func (o TrendingFacetsQuery) String() string {
	out := ""
	out += fmt.Sprintf("  facetName=%v\n", o.FacetName)
	out += fmt.Sprintf("  model=%v\n", o.Model)
	out += fmt.Sprintf("  indexName=%v\n", o.IndexName)
	out += fmt.Sprintf("  threshold=%v\n", o.Threshold)
	out += fmt.Sprintf("  maxRecommendations=%v\n", o.MaxRecommendations)
	return fmt.Sprintf("TrendingFacetsQuery {\n%s}", out)
}

type NullableTrendingFacetsQuery struct {
	value *TrendingFacetsQuery
	isSet bool
}

func (v NullableTrendingFacetsQuery) Get() *TrendingFacetsQuery {
	return v.value
}

func (v *NullableTrendingFacetsQuery) Set(val *TrendingFacetsQuery) {
	v.value = val
	v.isSet = true
}

func (v NullableTrendingFacetsQuery) IsSet() bool {
	return v.isSet
}

func (v *NullableTrendingFacetsQuery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrendingFacetsQuery(val *TrendingFacetsQuery) *NullableTrendingFacetsQuery {
	return &NullableTrendingFacetsQuery{value: val, isSet: true}
}

func (v NullableTrendingFacetsQuery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrendingFacetsQuery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
