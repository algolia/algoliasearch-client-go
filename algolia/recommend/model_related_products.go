// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package recommend

import (
	"encoding/json"
	"fmt"
)

// RelatedProducts struct for RelatedProducts.
type RelatedProducts struct {
	Model RelatedModel `json:"model"`
	// Unique record identifier.
	ObjectID           string          `json:"objectID"`
	FallbackParameters *FallbackParams `json:"fallbackParameters,omitempty"`
}

type RelatedProductsOption func(f *RelatedProducts)

func WithRelatedProductsFallbackParameters(val FallbackParams) RelatedProductsOption {
	return func(f *RelatedProducts) {
		f.FallbackParameters = &val
	}
}

// NewRelatedProducts instantiates a new RelatedProducts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewRelatedProducts(model RelatedModel, objectID string, opts ...RelatedProductsOption) *RelatedProducts {
	this := &RelatedProducts{}
	this.Model = model
	this.ObjectID = objectID
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptyRelatedProducts return a pointer to an empty RelatedProducts object.
func NewEmptyRelatedProducts() *RelatedProducts {
	return &RelatedProducts{}
}

// GetModel returns the Model field value.
func (o *RelatedProducts) GetModel() RelatedModel {
	if o == nil {
		var ret RelatedModel
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *RelatedProducts) GetModelOk() (*RelatedModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value.
func (o *RelatedProducts) SetModel(v RelatedModel) *RelatedProducts {
	o.Model = v
	return o
}

// GetObjectID returns the ObjectID field value.
func (o *RelatedProducts) GetObjectID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectID
}

// GetObjectIDOk returns a tuple with the ObjectID field value
// and a boolean to check if the value has been set.
func (o *RelatedProducts) GetObjectIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectID, true
}

// SetObjectID sets field value.
func (o *RelatedProducts) SetObjectID(v string) *RelatedProducts {
	o.ObjectID = v
	return o
}

// GetFallbackParameters returns the FallbackParameters field value if set, zero value otherwise.
func (o *RelatedProducts) GetFallbackParameters() FallbackParams {
	if o == nil || o.FallbackParameters == nil {
		var ret FallbackParams
		return ret
	}
	return *o.FallbackParameters
}

// GetFallbackParametersOk returns a tuple with the FallbackParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelatedProducts) GetFallbackParametersOk() (*FallbackParams, bool) {
	if o == nil || o.FallbackParameters == nil {
		return nil, false
	}
	return o.FallbackParameters, true
}

// HasFallbackParameters returns a boolean if a field has been set.
func (o *RelatedProducts) HasFallbackParameters() bool {
	if o != nil && o.FallbackParameters != nil {
		return true
	}

	return false
}

// SetFallbackParameters gets a reference to the given FallbackParams and assigns it to the FallbackParameters field.
func (o *RelatedProducts) SetFallbackParameters(v *FallbackParams) *RelatedProducts {
	o.FallbackParameters = v
	return o
}

func (o RelatedProducts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["model"] = o.Model
	}
	if true {
		toSerialize["objectID"] = o.ObjectID
	}
	if o.FallbackParameters != nil {
		toSerialize["fallbackParameters"] = o.FallbackParameters
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal RelatedProducts: %w", err)
	}

	return serialized, nil
}

func (o RelatedProducts) String() string {
	out := ""
	out += fmt.Sprintf("  model=%v\n", o.Model)
	out += fmt.Sprintf("  objectID=%v\n", o.ObjectID)
	out += fmt.Sprintf("  fallbackParameters=%v\n", o.FallbackParameters)
	return fmt.Sprintf("RelatedProducts {\n%s}", out)
}
