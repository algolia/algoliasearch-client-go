// File generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation.
package recommend

import (
	"encoding/json"
	"fmt"
)

// BaseRecommendRequest struct for BaseRecommendRequest.
type BaseRecommendRequest struct {
	// Algolia index name.
	IndexName string `json:"indexName"`
	// Recommendations with a confidence score lower than `threshold` won't appear in results. > **Note**: Each recommendation has a confidence score of 0 to 100. The closer the score is to 100, the more relevant the recommendations are.
	Threshold *int32 `json:"threshold,omitempty"`
	// Maximum number of recommendations to retrieve. If 0, all recommendations will be returned.
	MaxRecommendations *int32 `json:"maxRecommendations,omitempty"`
}

type BaseRecommendRequestOption func(f *BaseRecommendRequest)

func WithBaseRecommendRequestThreshold(val int32) BaseRecommendRequestOption {
	return func(f *BaseRecommendRequest) {
		f.Threshold = &val
	}
}

func WithBaseRecommendRequestMaxRecommendations(val int32) BaseRecommendRequestOption {
	return func(f *BaseRecommendRequest) {
		f.MaxRecommendations = &val
	}
}

// NewBaseRecommendRequest instantiates a new BaseRecommendRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewBaseRecommendRequest(indexName string, opts ...BaseRecommendRequestOption) *BaseRecommendRequest {
	this := &BaseRecommendRequest{}
	this.IndexName = indexName
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptyBaseRecommendRequest return a pointer to an empty BaseRecommendRequest object.
func NewEmptyBaseRecommendRequest() *BaseRecommendRequest {
	return &BaseRecommendRequest{}
}

// GetIndexName returns the IndexName field value.
func (o *BaseRecommendRequest) GetIndexName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IndexName
}

// GetIndexNameOk returns a tuple with the IndexName field value
// and a boolean to check if the value has been set.
func (o *BaseRecommendRequest) GetIndexNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IndexName, true
}

// SetIndexName sets field value.
func (o *BaseRecommendRequest) SetIndexName(v string) *BaseRecommendRequest {
	o.IndexName = v
	return o
}

// GetThreshold returns the Threshold field value if set, zero value otherwise.
func (o *BaseRecommendRequest) GetThreshold() int32 {
	if o == nil || o.Threshold == nil {
		var ret int32
		return ret
	}
	return *o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseRecommendRequest) GetThresholdOk() (*int32, bool) {
	if o == nil || o.Threshold == nil {
		return nil, false
	}
	return o.Threshold, true
}

// HasThreshold returns a boolean if a field has been set.
func (o *BaseRecommendRequest) HasThreshold() bool {
	if o != nil && o.Threshold != nil {
		return true
	}

	return false
}

// SetThreshold gets a reference to the given int32 and assigns it to the Threshold field.
func (o *BaseRecommendRequest) SetThreshold(v int32) *BaseRecommendRequest {
	o.Threshold = &v
	return o
}

// GetMaxRecommendations returns the MaxRecommendations field value if set, zero value otherwise.
func (o *BaseRecommendRequest) GetMaxRecommendations() int32 {
	if o == nil || o.MaxRecommendations == nil {
		var ret int32
		return ret
	}
	return *o.MaxRecommendations
}

// GetMaxRecommendationsOk returns a tuple with the MaxRecommendations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseRecommendRequest) GetMaxRecommendationsOk() (*int32, bool) {
	if o == nil || o.MaxRecommendations == nil {
		return nil, false
	}
	return o.MaxRecommendations, true
}

// HasMaxRecommendations returns a boolean if a field has been set.
func (o *BaseRecommendRequest) HasMaxRecommendations() bool {
	if o != nil && o.MaxRecommendations != nil {
		return true
	}

	return false
}

// SetMaxRecommendations gets a reference to the given int32 and assigns it to the MaxRecommendations field.
func (o *BaseRecommendRequest) SetMaxRecommendations(v int32) *BaseRecommendRequest {
	o.MaxRecommendations = &v
	return o
}

func (o BaseRecommendRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["indexName"] = o.IndexName
	}
	if o.Threshold != nil {
		toSerialize["threshold"] = o.Threshold
	}
	if o.MaxRecommendations != nil {
		toSerialize["maxRecommendations"] = o.MaxRecommendations
	}
	return json.Marshal(toSerialize)
}

func (o BaseRecommendRequest) String() string {
	out := ""
	out += fmt.Sprintf("  indexName=%v\n", o.IndexName)
	out += fmt.Sprintf("  threshold=%v\n", o.Threshold)
	out += fmt.Sprintf("  maxRecommendations=%v\n", o.MaxRecommendations)
	return fmt.Sprintf("BaseRecommendRequest {\n%s}", out)
}

type NullableBaseRecommendRequest struct {
	value *BaseRecommendRequest
	isSet bool
}

func (v NullableBaseRecommendRequest) Get() *BaseRecommendRequest {
	return v.value
}

func (v *NullableBaseRecommendRequest) Set(val *BaseRecommendRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseRecommendRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseRecommendRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseRecommendRequest(val *BaseRecommendRequest) *NullableBaseRecommendRequest {
	return &NullableBaseRecommendRequest{value: val, isSet: true}
}

func (v NullableBaseRecommendRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseRecommendRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
