// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package recommend

import (
	"encoding/json"
	"fmt"
)

// AdvancedSyntaxFeatures the model 'AdvancedSyntaxFeatures'.
type AdvancedSyntaxFeatures string

// List of advancedSyntaxFeatures.
const (
	ADVANCED_SYNTAX_FEATURES_EXACT_PHRASE  AdvancedSyntaxFeatures = "exactPhrase"
	ADVANCED_SYNTAX_FEATURES_EXCLUDE_WORDS AdvancedSyntaxFeatures = "excludeWords"
)

// All allowed values of AdvancedSyntaxFeatures enum.
var AllowedAdvancedSyntaxFeaturesEnumValues = []AdvancedSyntaxFeatures{
	"exactPhrase",
	"excludeWords",
}

func (v *AdvancedSyntaxFeatures) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return fmt.Errorf("failed to unmarshal value '%s' for enum 'AdvancedSyntaxFeatures': %w", string(src), err)
	}
	enumTypeValue := AdvancedSyntaxFeatures(value)
	for _, existing := range AllowedAdvancedSyntaxFeaturesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AdvancedSyntaxFeatures", value)
}

// NewAdvancedSyntaxFeaturesFromValue returns a pointer to a valid AdvancedSyntaxFeatures
// for the value passed as argument, or an error if the value passed is not allowed by the enum.
func NewAdvancedSyntaxFeaturesFromValue(v string) (*AdvancedSyntaxFeatures, error) {
	ev := AdvancedSyntaxFeatures(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AdvancedSyntaxFeatures: valid values are %v", v, AllowedAdvancedSyntaxFeaturesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise.
func (v AdvancedSyntaxFeatures) IsValid() bool {
	for _, existing := range AllowedAdvancedSyntaxFeaturesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to advancedSyntaxFeatures value.
func (v AdvancedSyntaxFeatures) Ptr() *AdvancedSyntaxFeatures {
	return &v
}
