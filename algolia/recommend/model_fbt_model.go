// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package recommend

import (
	"encoding/json"
	"fmt"
)

// FbtModel Frequently bought together model.  This model recommends items that have been purchased within 1 day with the item with the ID `objectID`.
type FbtModel string

// List of fbtModel.
const (
	FBT_MODEL_BOUGHT_TOGETHER FbtModel = "bought-together"
)

// All allowed values of FbtModel enum.
var AllowedFbtModelEnumValues = []FbtModel{
	"bought-together",
}

func (v *FbtModel) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return fmt.Errorf("failed to unmarshal value '%s' for enum 'FbtModel': %w", string(src), err)
	}
	enumTypeValue := FbtModel(value)
	for _, existing := range AllowedFbtModelEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid FbtModel", value)
}

// NewFbtModelFromValue returns a pointer to a valid FbtModel
// for the value passed as argument, or an error if the value passed is not allowed by the enum.
func NewFbtModelFromValue(v string) (*FbtModel, error) {
	ev := FbtModel(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for FbtModel: valid values are %v", v, AllowedFbtModelEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise.
func (v FbtModel) IsValid() bool {
	for _, existing := range AllowedFbtModelEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to fbtModel value.
func (v FbtModel) Ptr() *FbtModel {
	return &v
}
