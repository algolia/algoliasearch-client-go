// File generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation.
package recommend

import (
	"encoding/json"
	"fmt"
)

// TrendingFacetHit Trending facet hit.
type TrendingFacetHit struct {
	// Recommendation score.
	Score float64 `json:"_score"`
	// Facet name for trending models.
	FacetName string `json:"facetName"`
	// Facet value for trending models.
	FacetValue string `json:"facetValue"`
}

// NewTrendingFacetHit instantiates a new TrendingFacetHit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewTrendingFacetHit(score float64, facetName string, facetValue string) *TrendingFacetHit {
	this := &TrendingFacetHit{}
	this.Score = score
	this.FacetName = facetName
	this.FacetValue = facetValue
	return this
}

// NewTrendingFacetHitWithDefaults instantiates a new TrendingFacetHit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set.
func NewTrendingFacetHitWithDefaults() *TrendingFacetHit {
	this := &TrendingFacetHit{}
	return this
}

// GetScore returns the Score field value.
func (o *TrendingFacetHit) GetScore() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Score
}

// GetScoreOk returns a tuple with the Score field value
// and a boolean to check if the value has been set.
func (o *TrendingFacetHit) GetScoreOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Score, true
}

// SetScore sets field value.
func (o *TrendingFacetHit) SetScore(v float64) {
	o.Score = v
}

// GetFacetName returns the FacetName field value.
func (o *TrendingFacetHit) GetFacetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FacetName
}

// GetFacetNameOk returns a tuple with the FacetName field value
// and a boolean to check if the value has been set.
func (o *TrendingFacetHit) GetFacetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FacetName, true
}

// SetFacetName sets field value.
func (o *TrendingFacetHit) SetFacetName(v string) {
	o.FacetName = v
}

// GetFacetValue returns the FacetValue field value.
func (o *TrendingFacetHit) GetFacetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FacetValue
}

// GetFacetValueOk returns a tuple with the FacetValue field value
// and a boolean to check if the value has been set.
func (o *TrendingFacetHit) GetFacetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FacetValue, true
}

// SetFacetValue sets field value.
func (o *TrendingFacetHit) SetFacetValue(v string) {
	o.FacetValue = v
}

func (o TrendingFacetHit) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["_score"] = o.Score
	}
	if true {
		toSerialize["facetName"] = o.FacetName
	}
	if true {
		toSerialize["facetValue"] = o.FacetValue
	}
	return json.Marshal(toSerialize)
}

func (o TrendingFacetHit) String() string {
	out := ""
	out += fmt.Sprintf("  _score=%v\n", o.Score)
	out += fmt.Sprintf("  facetName=%v\n", o.FacetName)
	out += fmt.Sprintf("  facetValue=%v\n", o.FacetValue)
	return fmt.Sprintf("TrendingFacetHit {\n%s}", out)
}

type NullableTrendingFacetHit struct {
	value *TrendingFacetHit
	isSet bool
}

func (v NullableTrendingFacetHit) Get() *TrendingFacetHit {
	return v.value
}

func (v *NullableTrendingFacetHit) Set(val *TrendingFacetHit) {
	v.value = val
	v.isSet = true
}

func (v NullableTrendingFacetHit) IsSet() bool {
	return v.isSet
}

func (v *NullableTrendingFacetHit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrendingFacetHit(val *TrendingFacetHit) *NullableTrendingFacetHit {
	return &NullableTrendingFacetHit{value: val, isSet: true}
}

func (v NullableTrendingFacetHit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrendingFacetHit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
