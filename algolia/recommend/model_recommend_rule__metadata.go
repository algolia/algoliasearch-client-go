// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package recommend

import (
	"encoding/json"
	"fmt"
)

// RecommendRuleMetadata Rule metadata.
type RecommendRuleMetadata struct {
	// Date and time when the object was updated, in RFC 3339 format.
	LastUpdate *string `json:"lastUpdate,omitempty"`
}

type RecommendRuleMetadataOption func(f *RecommendRuleMetadata)

func WithRecommendRuleMetadataLastUpdate(val string) RecommendRuleMetadataOption {
	return func(f *RecommendRuleMetadata) {
		f.LastUpdate = &val
	}
}

// NewRecommendRuleMetadata instantiates a new RecommendRuleMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewRecommendRuleMetadata(opts ...RecommendRuleMetadataOption) *RecommendRuleMetadata {
	this := &RecommendRuleMetadata{}
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptyRecommendRuleMetadata return a pointer to an empty RecommendRuleMetadata object.
func NewEmptyRecommendRuleMetadata() *RecommendRuleMetadata {
	return &RecommendRuleMetadata{}
}

// GetLastUpdate returns the LastUpdate field value if set, zero value otherwise.
func (o *RecommendRuleMetadata) GetLastUpdate() string {
	if o == nil || o.LastUpdate == nil {
		var ret string
		return ret
	}
	return *o.LastUpdate
}

// GetLastUpdateOk returns a tuple with the LastUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecommendRuleMetadata) GetLastUpdateOk() (*string, bool) {
	if o == nil || o.LastUpdate == nil {
		return nil, false
	}
	return o.LastUpdate, true
}

// HasLastUpdate returns a boolean if a field has been set.
func (o *RecommendRuleMetadata) HasLastUpdate() bool {
	if o != nil && o.LastUpdate != nil {
		return true
	}

	return false
}

// SetLastUpdate gets a reference to the given string and assigns it to the LastUpdate field.
func (o *RecommendRuleMetadata) SetLastUpdate(v string) *RecommendRuleMetadata {
	o.LastUpdate = &v
	return o
}

func (o RecommendRuleMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.LastUpdate != nil {
		toSerialize["lastUpdate"] = o.LastUpdate
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal RecommendRuleMetadata: %w", err)
	}

	return serialized, nil
}

func (o RecommendRuleMetadata) String() string {
	out := ""
	out += fmt.Sprintf("  lastUpdate=%v\n", o.LastUpdate)
	return fmt.Sprintf("RecommendRuleMetadata {\n%s}", out)
}
