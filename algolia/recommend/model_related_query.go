// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package recommend

import (
	"encoding/json"
	"fmt"
)

// RelatedQuery struct for RelatedQuery.
type RelatedQuery struct {
	// Index name (case-sensitive).
	IndexName string `json:"indexName"`
	// Minimum score a recommendation must have to be included in the response.
	Threshold float64 `json:"threshold"`
	// Maximum number of recommendations to retrieve. By default, all recommendations are returned and no fallback request is made. Depending on the available recommendations and the other request parameters, the actual number of recommendations may be lower than this value.
	MaxRecommendations *int32                 `json:"maxRecommendations,omitempty"`
	QueryParameters    *RecommendSearchParams `json:"queryParameters,omitempty"`
	Model              RelatedModel           `json:"model"`
	// Unique record identifier.
	ObjectID           string          `json:"objectID"`
	FallbackParameters *FallbackParams `json:"fallbackParameters,omitempty"`
}

type RelatedQueryOption func(f *RelatedQuery)

func WithRelatedQueryMaxRecommendations(val int32) RelatedQueryOption {
	return func(f *RelatedQuery) {
		f.MaxRecommendations = &val
	}
}

func WithRelatedQueryQueryParameters(val RecommendSearchParams) RelatedQueryOption {
	return func(f *RelatedQuery) {
		f.QueryParameters = &val
	}
}

func WithRelatedQueryFallbackParameters(val FallbackParams) RelatedQueryOption {
	return func(f *RelatedQuery) {
		f.FallbackParameters = &val
	}
}

// NewRelatedQuery instantiates a new RelatedQuery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewRelatedQuery(indexName string, threshold float64, model RelatedModel, objectID string, opts ...RelatedQueryOption) *RelatedQuery {
	this := &RelatedQuery{}
	this.IndexName = indexName
	this.Threshold = threshold
	this.Model = model
	this.ObjectID = objectID
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptyRelatedQuery return a pointer to an empty RelatedQuery object.
func NewEmptyRelatedQuery() *RelatedQuery {
	return &RelatedQuery{}
}

// GetIndexName returns the IndexName field value.
func (o *RelatedQuery) GetIndexName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IndexName
}

// GetIndexNameOk returns a tuple with the IndexName field value
// and a boolean to check if the value has been set.
func (o *RelatedQuery) GetIndexNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IndexName, true
}

// SetIndexName sets field value.
func (o *RelatedQuery) SetIndexName(v string) *RelatedQuery {
	o.IndexName = v
	return o
}

// GetThreshold returns the Threshold field value.
func (o *RelatedQuery) GetThreshold() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value
// and a boolean to check if the value has been set.
func (o *RelatedQuery) GetThresholdOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Threshold, true
}

// SetThreshold sets field value.
func (o *RelatedQuery) SetThreshold(v float64) *RelatedQuery {
	o.Threshold = v
	return o
}

// GetMaxRecommendations returns the MaxRecommendations field value if set, zero value otherwise.
func (o *RelatedQuery) GetMaxRecommendations() int32 {
	if o == nil || o.MaxRecommendations == nil {
		var ret int32
		return ret
	}
	return *o.MaxRecommendations
}

// GetMaxRecommendationsOk returns a tuple with the MaxRecommendations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelatedQuery) GetMaxRecommendationsOk() (*int32, bool) {
	if o == nil || o.MaxRecommendations == nil {
		return nil, false
	}
	return o.MaxRecommendations, true
}

// HasMaxRecommendations returns a boolean if a field has been set.
func (o *RelatedQuery) HasMaxRecommendations() bool {
	if o != nil && o.MaxRecommendations != nil {
		return true
	}

	return false
}

// SetMaxRecommendations gets a reference to the given int32 and assigns it to the MaxRecommendations field.
func (o *RelatedQuery) SetMaxRecommendations(v int32) *RelatedQuery {
	o.MaxRecommendations = &v
	return o
}

// GetQueryParameters returns the QueryParameters field value if set, zero value otherwise.
func (o *RelatedQuery) GetQueryParameters() RecommendSearchParams {
	if o == nil || o.QueryParameters == nil {
		var ret RecommendSearchParams
		return ret
	}
	return *o.QueryParameters
}

// GetQueryParametersOk returns a tuple with the QueryParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelatedQuery) GetQueryParametersOk() (*RecommendSearchParams, bool) {
	if o == nil || o.QueryParameters == nil {
		return nil, false
	}
	return o.QueryParameters, true
}

// HasQueryParameters returns a boolean if a field has been set.
func (o *RelatedQuery) HasQueryParameters() bool {
	if o != nil && o.QueryParameters != nil {
		return true
	}

	return false
}

// SetQueryParameters gets a reference to the given RecommendSearchParams and assigns it to the QueryParameters field.
func (o *RelatedQuery) SetQueryParameters(v *RecommendSearchParams) *RelatedQuery {
	o.QueryParameters = v
	return o
}

// GetModel returns the Model field value.
func (o *RelatedQuery) GetModel() RelatedModel {
	if o == nil {
		var ret RelatedModel
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *RelatedQuery) GetModelOk() (*RelatedModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value.
func (o *RelatedQuery) SetModel(v RelatedModel) *RelatedQuery {
	o.Model = v
	return o
}

// GetObjectID returns the ObjectID field value.
func (o *RelatedQuery) GetObjectID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectID
}

// GetObjectIDOk returns a tuple with the ObjectID field value
// and a boolean to check if the value has been set.
func (o *RelatedQuery) GetObjectIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectID, true
}

// SetObjectID sets field value.
func (o *RelatedQuery) SetObjectID(v string) *RelatedQuery {
	o.ObjectID = v
	return o
}

// GetFallbackParameters returns the FallbackParameters field value if set, zero value otherwise.
func (o *RelatedQuery) GetFallbackParameters() FallbackParams {
	if o == nil || o.FallbackParameters == nil {
		var ret FallbackParams
		return ret
	}
	return *o.FallbackParameters
}

// GetFallbackParametersOk returns a tuple with the FallbackParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelatedQuery) GetFallbackParametersOk() (*FallbackParams, bool) {
	if o == nil || o.FallbackParameters == nil {
		return nil, false
	}
	return o.FallbackParameters, true
}

// HasFallbackParameters returns a boolean if a field has been set.
func (o *RelatedQuery) HasFallbackParameters() bool {
	if o != nil && o.FallbackParameters != nil {
		return true
	}

	return false
}

// SetFallbackParameters gets a reference to the given FallbackParams and assigns it to the FallbackParameters field.
func (o *RelatedQuery) SetFallbackParameters(v *FallbackParams) *RelatedQuery {
	o.FallbackParameters = v
	return o
}

func (o RelatedQuery) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["indexName"] = o.IndexName
	}
	if true {
		toSerialize["threshold"] = o.Threshold
	}
	if o.MaxRecommendations != nil {
		toSerialize["maxRecommendations"] = o.MaxRecommendations
	}
	if o.QueryParameters != nil {
		toSerialize["queryParameters"] = o.QueryParameters
	}
	if true {
		toSerialize["model"] = o.Model
	}
	if true {
		toSerialize["objectID"] = o.ObjectID
	}
	if o.FallbackParameters != nil {
		toSerialize["fallbackParameters"] = o.FallbackParameters
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal RelatedQuery: %w", err)
	}

	return serialized, nil
}

func (o RelatedQuery) String() string {
	out := ""
	out += fmt.Sprintf("  indexName=%v\n", o.IndexName)
	out += fmt.Sprintf("  threshold=%v\n", o.Threshold)
	out += fmt.Sprintf("  maxRecommendations=%v\n", o.MaxRecommendations)
	out += fmt.Sprintf("  queryParameters=%v\n", o.QueryParameters)
	out += fmt.Sprintf("  model=%v\n", o.Model)
	out += fmt.Sprintf("  objectID=%v\n", o.ObjectID)
	out += fmt.Sprintf("  fallbackParameters=%v\n", o.FallbackParameters)
	return fmt.Sprintf("RelatedQuery {\n%s}", out)
}
