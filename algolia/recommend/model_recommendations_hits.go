// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package recommend

import (
	"encoding/json"
	"fmt"
)

// RecommendationsHits struct for RecommendationsHits.
type RecommendationsHits struct {
	Hits []RecommendationsHit `json:"hits"`
}

// NewRecommendationsHits instantiates a new RecommendationsHits object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewRecommendationsHits(hits []RecommendationsHit) *RecommendationsHits {
	this := &RecommendationsHits{}
	this.Hits = hits
	return this
}

// NewEmptyRecommendationsHits return a pointer to an empty RecommendationsHits object.
func NewEmptyRecommendationsHits() *RecommendationsHits {
	return &RecommendationsHits{}
}

// GetHits returns the Hits field value.
func (o *RecommendationsHits) GetHits() []RecommendationsHit {
	if o == nil {
		var ret []RecommendationsHit
		return ret
	}

	return o.Hits
}

// GetHitsOk returns a tuple with the Hits field value
// and a boolean to check if the value has been set.
func (o *RecommendationsHits) GetHitsOk() ([]RecommendationsHit, bool) {
	if o == nil {
		return nil, false
	}
	return o.Hits, true
}

// SetHits sets field value.
func (o *RecommendationsHits) SetHits(v []RecommendationsHit) *RecommendationsHits {
	o.Hits = v
	return o
}

func (o RecommendationsHits) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["hits"] = o.Hits
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal RecommendationsHits: %w", err)
	}

	return serialized, nil
}

func (o RecommendationsHits) String() string {
	out := ""
	out += fmt.Sprintf("  hits=%v\n", o.Hits)
	return fmt.Sprintf("RecommendationsHits {\n%s}", out)
}
