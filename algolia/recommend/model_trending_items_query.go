// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package recommend

import (
	"encoding/json"
	"fmt"
)

// TrendingItemsQuery struct for TrendingItemsQuery
type TrendingItemsQuery struct {
	// Facet name for trending models.
	FacetName *string `json:"facetName,omitempty"`
	// Facet value for trending models.
	FacetValue         *string             `json:"facetValue,omitempty"`
	Model              *TrendingItemsModel `json:"model,omitempty"`
	QueryParameters    *SearchParamsObject `json:"queryParameters,omitempty"`
	FallbackParameters *SearchParamsObject `json:"fallbackParameters,omitempty"`
	// Algolia index name.
	IndexName string `json:"indexName" validate:"required"`
	// Recommendations with a confidence score lower than `threshold` won't appear in results. > **Note**: Each recommendation has a confidence score of 0 to 100. The closer the score is to 100, the more relevant the recommendations are.
	Threshold *int32 `json:"threshold,omitempty"`
	// Maximum number of recommendations to retrieve. If 0, all recommendations will be returned.
	MaxRecommendations *int32 `json:"maxRecommendations,omitempty"`
}

type TrendingItemsQueryOption func(f *TrendingItemsQuery)

func WithTrendingItemsQueryFacetName(val string) TrendingItemsQueryOption {
	return func(f *TrendingItemsQuery) {
		f.FacetName = &val
	}
}

func WithTrendingItemsQueryFacetValue(val string) TrendingItemsQueryOption {
	return func(f *TrendingItemsQuery) {
		f.FacetValue = &val
	}
}

func WithTrendingItemsQueryModel(val TrendingItemsModel) TrendingItemsQueryOption {
	return func(f *TrendingItemsQuery) {
		f.Model = &val
	}
}

func WithTrendingItemsQueryQueryParameters(val SearchParamsObject) TrendingItemsQueryOption {
	return func(f *TrendingItemsQuery) {
		f.QueryParameters = &val
	}
}

func WithTrendingItemsQueryFallbackParameters(val SearchParamsObject) TrendingItemsQueryOption {
	return func(f *TrendingItemsQuery) {
		f.FallbackParameters = &val
	}
}

func WithTrendingItemsQueryThreshold(val int32) TrendingItemsQueryOption {
	return func(f *TrendingItemsQuery) {
		f.Threshold = &val
	}
}

func WithTrendingItemsQueryMaxRecommendations(val int32) TrendingItemsQueryOption {
	return func(f *TrendingItemsQuery) {
		f.MaxRecommendations = &val
	}
}

// NewTrendingItemsQuery instantiates a new TrendingItemsQuery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrendingItemsQuery(indexName string, opts ...TrendingItemsQueryOption) *TrendingItemsQuery {
	this := &TrendingItemsQuery{}
	this.IndexName = indexName
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewTrendingItemsQueryWithDefaults instantiates a new TrendingItemsQuery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrendingItemsQueryWithDefaults() *TrendingItemsQuery {
	this := &TrendingItemsQuery{}
	var maxRecommendations int32 = 0
	this.MaxRecommendations = &maxRecommendations
	return this
}

// GetFacetName returns the FacetName field value if set, zero value otherwise.
func (o *TrendingItemsQuery) GetFacetName() string {
	if o == nil || o.FacetName == nil {
		var ret string
		return ret
	}
	return *o.FacetName
}

// GetFacetNameOk returns a tuple with the FacetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrendingItemsQuery) GetFacetNameOk() (*string, bool) {
	if o == nil || o.FacetName == nil {
		return nil, false
	}
	return o.FacetName, true
}

// HasFacetName returns a boolean if a field has been set.
func (o *TrendingItemsQuery) HasFacetName() bool {
	if o != nil && o.FacetName != nil {
		return true
	}

	return false
}

// SetFacetName gets a reference to the given string and assigns it to the FacetName field.
func (o *TrendingItemsQuery) SetFacetName(v string) {
	o.FacetName = &v
}

// GetFacetValue returns the FacetValue field value if set, zero value otherwise.
func (o *TrendingItemsQuery) GetFacetValue() string {
	if o == nil || o.FacetValue == nil {
		var ret string
		return ret
	}
	return *o.FacetValue
}

// GetFacetValueOk returns a tuple with the FacetValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrendingItemsQuery) GetFacetValueOk() (*string, bool) {
	if o == nil || o.FacetValue == nil {
		return nil, false
	}
	return o.FacetValue, true
}

// HasFacetValue returns a boolean if a field has been set.
func (o *TrendingItemsQuery) HasFacetValue() bool {
	if o != nil && o.FacetValue != nil {
		return true
	}

	return false
}

// SetFacetValue gets a reference to the given string and assigns it to the FacetValue field.
func (o *TrendingItemsQuery) SetFacetValue(v string) {
	o.FacetValue = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *TrendingItemsQuery) GetModel() TrendingItemsModel {
	if o == nil || o.Model == nil {
		var ret TrendingItemsModel
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrendingItemsQuery) GetModelOk() (*TrendingItemsModel, bool) {
	if o == nil || o.Model == nil {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *TrendingItemsQuery) HasModel() bool {
	if o != nil && o.Model != nil {
		return true
	}

	return false
}

// SetModel gets a reference to the given TrendingItemsModel and assigns it to the Model field.
func (o *TrendingItemsQuery) SetModel(v TrendingItemsModel) {
	o.Model = &v
}

// GetQueryParameters returns the QueryParameters field value if set, zero value otherwise.
func (o *TrendingItemsQuery) GetQueryParameters() SearchParamsObject {
	if o == nil || o.QueryParameters == nil {
		var ret SearchParamsObject
		return ret
	}
	return *o.QueryParameters
}

// GetQueryParametersOk returns a tuple with the QueryParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrendingItemsQuery) GetQueryParametersOk() (*SearchParamsObject, bool) {
	if o == nil || o.QueryParameters == nil {
		return nil, false
	}
	return o.QueryParameters, true
}

// HasQueryParameters returns a boolean if a field has been set.
func (o *TrendingItemsQuery) HasQueryParameters() bool {
	if o != nil && o.QueryParameters != nil {
		return true
	}

	return false
}

// SetQueryParameters gets a reference to the given SearchParamsObject and assigns it to the QueryParameters field.
func (o *TrendingItemsQuery) SetQueryParameters(v SearchParamsObject) {
	o.QueryParameters = &v
}

// GetFallbackParameters returns the FallbackParameters field value if set, zero value otherwise.
func (o *TrendingItemsQuery) GetFallbackParameters() SearchParamsObject {
	if o == nil || o.FallbackParameters == nil {
		var ret SearchParamsObject
		return ret
	}
	return *o.FallbackParameters
}

// GetFallbackParametersOk returns a tuple with the FallbackParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrendingItemsQuery) GetFallbackParametersOk() (*SearchParamsObject, bool) {
	if o == nil || o.FallbackParameters == nil {
		return nil, false
	}
	return o.FallbackParameters, true
}

// HasFallbackParameters returns a boolean if a field has been set.
func (o *TrendingItemsQuery) HasFallbackParameters() bool {
	if o != nil && o.FallbackParameters != nil {
		return true
	}

	return false
}

// SetFallbackParameters gets a reference to the given SearchParamsObject and assigns it to the FallbackParameters field.
func (o *TrendingItemsQuery) SetFallbackParameters(v SearchParamsObject) {
	o.FallbackParameters = &v
}

// GetIndexName returns the IndexName field value
func (o *TrendingItemsQuery) GetIndexName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IndexName
}

// GetIndexNameOk returns a tuple with the IndexName field value
// and a boolean to check if the value has been set.
func (o *TrendingItemsQuery) GetIndexNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IndexName, true
}

// SetIndexName sets field value
func (o *TrendingItemsQuery) SetIndexName(v string) {
	o.IndexName = v
}

// GetThreshold returns the Threshold field value if set, zero value otherwise.
func (o *TrendingItemsQuery) GetThreshold() int32 {
	if o == nil || o.Threshold == nil {
		var ret int32
		return ret
	}
	return *o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrendingItemsQuery) GetThresholdOk() (*int32, bool) {
	if o == nil || o.Threshold == nil {
		return nil, false
	}
	return o.Threshold, true
}

// HasThreshold returns a boolean if a field has been set.
func (o *TrendingItemsQuery) HasThreshold() bool {
	if o != nil && o.Threshold != nil {
		return true
	}

	return false
}

// SetThreshold gets a reference to the given int32 and assigns it to the Threshold field.
func (o *TrendingItemsQuery) SetThreshold(v int32) {
	o.Threshold = &v
}

// GetMaxRecommendations returns the MaxRecommendations field value if set, zero value otherwise.
func (o *TrendingItemsQuery) GetMaxRecommendations() int32 {
	if o == nil || o.MaxRecommendations == nil {
		var ret int32
		return ret
	}
	return *o.MaxRecommendations
}

// GetMaxRecommendationsOk returns a tuple with the MaxRecommendations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrendingItemsQuery) GetMaxRecommendationsOk() (*int32, bool) {
	if o == nil || o.MaxRecommendations == nil {
		return nil, false
	}
	return o.MaxRecommendations, true
}

// HasMaxRecommendations returns a boolean if a field has been set.
func (o *TrendingItemsQuery) HasMaxRecommendations() bool {
	if o != nil && o.MaxRecommendations != nil {
		return true
	}

	return false
}

// SetMaxRecommendations gets a reference to the given int32 and assigns it to the MaxRecommendations field.
func (o *TrendingItemsQuery) SetMaxRecommendations(v int32) {
	o.MaxRecommendations = &v
}

func (o TrendingItemsQuery) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.FacetName != nil {
		toSerialize["facetName"] = o.FacetName
	}
	if o.FacetValue != nil {
		toSerialize["facetValue"] = o.FacetValue
	}
	if o.Model != nil {
		toSerialize["model"] = o.Model
	}
	if o.QueryParameters != nil {
		toSerialize["queryParameters"] = o.QueryParameters
	}
	if o.FallbackParameters != nil {
		toSerialize["fallbackParameters"] = o.FallbackParameters
	}
	if true {
		toSerialize["indexName"] = o.IndexName
	}
	if o.Threshold != nil {
		toSerialize["threshold"] = o.Threshold
	}
	if o.MaxRecommendations != nil {
		toSerialize["maxRecommendations"] = o.MaxRecommendations
	}
	return json.Marshal(toSerialize)
}

func (o TrendingItemsQuery) String() string {
	out := ""
	out += fmt.Sprintf("  facetName=%v\n", o.FacetName)
	out += fmt.Sprintf("  facetValue=%v\n", o.FacetValue)
	out += fmt.Sprintf("  model=%v\n", o.Model)
	out += fmt.Sprintf("  queryParameters=%v\n", o.QueryParameters)
	out += fmt.Sprintf("  fallbackParameters=%v\n", o.FallbackParameters)
	out += fmt.Sprintf("  indexName=%v\n", o.IndexName)
	out += fmt.Sprintf("  threshold=%v\n", o.Threshold)
	out += fmt.Sprintf("  maxRecommendations=%v\n", o.MaxRecommendations)
	return fmt.Sprintf("TrendingItemsQuery {\n%s}", out)
}

type NullableTrendingItemsQuery struct {
	value *TrendingItemsQuery
	isSet bool
}

func (v NullableTrendingItemsQuery) Get() *TrendingItemsQuery {
	return v.value
}

func (v *NullableTrendingItemsQuery) Set(val *TrendingItemsQuery) {
	v.value = val
	v.isSet = true
}

func (v NullableTrendingItemsQuery) IsSet() bool {
	return v.isSet
}

func (v *NullableTrendingItemsQuery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrendingItemsQuery(val *TrendingItemsQuery) *NullableTrendingItemsQuery {
	return &NullableTrendingItemsQuery{value: val, isSet: true}
}

func (v NullableTrendingItemsQuery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrendingItemsQuery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
