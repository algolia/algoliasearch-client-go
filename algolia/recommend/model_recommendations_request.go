// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package recommend

import (
	"encoding/json"
	"fmt"
)

// RecommendationsRequest - struct for RecommendationsRequest
type RecommendationsRequest struct {
	RecommendationRequest *RecommendationRequest
	TrendingRequest       *TrendingRequest
}

// RecommendationRequestAsRecommendationsRequest is a convenience function that returns RecommendationRequest wrapped in RecommendationsRequest
func RecommendationRequestAsRecommendationsRequest(v *RecommendationRequest) RecommendationsRequest {
	return RecommendationsRequest{
		RecommendationRequest: v,
	}
}

// TrendingRequestAsRecommendationsRequest is a convenience function that returns TrendingRequest wrapped in RecommendationsRequest
func TrendingRequestAsRecommendationsRequest(v *TrendingRequest) RecommendationsRequest {
	return RecommendationsRequest{
		TrendingRequest: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *RecommendationsRequest) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal data into RecommendationRequest
	err = newStrictDecoder(data).Decode(&dst.RecommendationRequest)
	if err == nil && validateStruct(dst.RecommendationRequest) == nil {
		jsonRecommendationRequest, _ := json.Marshal(dst.RecommendationRequest)
		if string(jsonRecommendationRequest) == "{}" { // empty struct
			dst.RecommendationRequest = nil
		} else {
			return nil
		}
	} else {
		dst.RecommendationRequest = nil
	}

	// try to unmarshal data into TrendingRequest
	err = newStrictDecoder(data).Decode(&dst.TrendingRequest)
	if err == nil && validateStruct(dst.TrendingRequest) == nil {
		jsonTrendingRequest, _ := json.Marshal(dst.TrendingRequest)
		if string(jsonTrendingRequest) == "{}" { // empty struct
			dst.TrendingRequest = nil
		} else {
			return nil
		}
	} else {
		dst.TrendingRequest = nil
	}

	return fmt.Errorf("Data failed to match schemas in oneOf(RecommendationsRequest)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src RecommendationsRequest) MarshalJSON() ([]byte, error) {
	if src.RecommendationRequest != nil {
		return json.Marshal(&src.RecommendationRequest)
	}

	if src.TrendingRequest != nil {
		return json.Marshal(&src.TrendingRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *RecommendationsRequest) GetActualInstance() any {
	if obj == nil {
		return nil
	}
	if obj.RecommendationRequest != nil {
		return obj.RecommendationRequest
	}

	if obj.TrendingRequest != nil {
		return obj.TrendingRequest
	}

	// all schemas are nil
	return nil
}

type NullableRecommendationsRequest struct {
	value *RecommendationsRequest
	isSet bool
}

func (v NullableRecommendationsRequest) Get() *RecommendationsRequest {
	return v.value
}

func (v *NullableRecommendationsRequest) Set(val *RecommendationsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRecommendationsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRecommendationsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecommendationsRequest(val *RecommendationsRequest) *NullableRecommendationsRequest {
	return &NullableRecommendationsRequest{value: val, isSet: true}
}

func (v NullableRecommendationsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecommendationsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
