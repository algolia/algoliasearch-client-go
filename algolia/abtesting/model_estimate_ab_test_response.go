// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package abtesting

import (
	"encoding/json"
	"fmt"
)

// EstimateABTestResponse struct for EstimateABTestResponse.
type EstimateABTestResponse struct {
	// Estimated number of days needed to reach the sample sizes required for detecting the configured effect. This value is based on historical traffic.
	DurationDays *int64 `json:"durationDays,omitempty"`
	// Number of tracked searches needed to be able to detect the configured effect for the control variant.
	ControlSampleSize *int64 `json:"controlSampleSize,omitempty"`
	// Number of tracked searches needed to be able to detect the configured effect for the experiment variant.
	ExperimentSampleSize *int64 `json:"experimentSampleSize,omitempty"`
}

type EstimateABTestResponseOption func(f *EstimateABTestResponse)

func WithEstimateABTestResponseDurationDays(val int64) EstimateABTestResponseOption {
	return func(f *EstimateABTestResponse) {
		f.DurationDays = &val
	}
}

func WithEstimateABTestResponseControlSampleSize(val int64) EstimateABTestResponseOption {
	return func(f *EstimateABTestResponse) {
		f.ControlSampleSize = &val
	}
}

func WithEstimateABTestResponseExperimentSampleSize(val int64) EstimateABTestResponseOption {
	return func(f *EstimateABTestResponse) {
		f.ExperimentSampleSize = &val
	}
}

// NewEstimateABTestResponse instantiates a new EstimateABTestResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewEstimateABTestResponse(opts ...EstimateABTestResponseOption) *EstimateABTestResponse {
	this := &EstimateABTestResponse{}
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptyEstimateABTestResponse return a pointer to an empty EstimateABTestResponse object.
func NewEmptyEstimateABTestResponse() *EstimateABTestResponse {
	return &EstimateABTestResponse{}
}

// GetDurationDays returns the DurationDays field value if set, zero value otherwise.
func (o *EstimateABTestResponse) GetDurationDays() int64 {
	if o == nil || o.DurationDays == nil {
		var ret int64
		return ret
	}
	return *o.DurationDays
}

// GetDurationDaysOk returns a tuple with the DurationDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimateABTestResponse) GetDurationDaysOk() (*int64, bool) {
	if o == nil || o.DurationDays == nil {
		return nil, false
	}
	return o.DurationDays, true
}

// HasDurationDays returns a boolean if a field has been set.
func (o *EstimateABTestResponse) HasDurationDays() bool {
	if o != nil && o.DurationDays != nil {
		return true
	}

	return false
}

// SetDurationDays gets a reference to the given int64 and assigns it to the DurationDays field.
func (o *EstimateABTestResponse) SetDurationDays(v int64) *EstimateABTestResponse {
	o.DurationDays = &v
	return o
}

// GetControlSampleSize returns the ControlSampleSize field value if set, zero value otherwise.
func (o *EstimateABTestResponse) GetControlSampleSize() int64 {
	if o == nil || o.ControlSampleSize == nil {
		var ret int64
		return ret
	}
	return *o.ControlSampleSize
}

// GetControlSampleSizeOk returns a tuple with the ControlSampleSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimateABTestResponse) GetControlSampleSizeOk() (*int64, bool) {
	if o == nil || o.ControlSampleSize == nil {
		return nil, false
	}
	return o.ControlSampleSize, true
}

// HasControlSampleSize returns a boolean if a field has been set.
func (o *EstimateABTestResponse) HasControlSampleSize() bool {
	if o != nil && o.ControlSampleSize != nil {
		return true
	}

	return false
}

// SetControlSampleSize gets a reference to the given int64 and assigns it to the ControlSampleSize field.
func (o *EstimateABTestResponse) SetControlSampleSize(v int64) *EstimateABTestResponse {
	o.ControlSampleSize = &v
	return o
}

// GetExperimentSampleSize returns the ExperimentSampleSize field value if set, zero value otherwise.
func (o *EstimateABTestResponse) GetExperimentSampleSize() int64 {
	if o == nil || o.ExperimentSampleSize == nil {
		var ret int64
		return ret
	}
	return *o.ExperimentSampleSize
}

// GetExperimentSampleSizeOk returns a tuple with the ExperimentSampleSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EstimateABTestResponse) GetExperimentSampleSizeOk() (*int64, bool) {
	if o == nil || o.ExperimentSampleSize == nil {
		return nil, false
	}
	return o.ExperimentSampleSize, true
}

// HasExperimentSampleSize returns a boolean if a field has been set.
func (o *EstimateABTestResponse) HasExperimentSampleSize() bool {
	if o != nil && o.ExperimentSampleSize != nil {
		return true
	}

	return false
}

// SetExperimentSampleSize gets a reference to the given int64 and assigns it to the ExperimentSampleSize field.
func (o *EstimateABTestResponse) SetExperimentSampleSize(v int64) *EstimateABTestResponse {
	o.ExperimentSampleSize = &v
	return o
}

func (o EstimateABTestResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.DurationDays != nil {
		toSerialize["durationDays"] = o.DurationDays
	}
	if o.ControlSampleSize != nil {
		toSerialize["controlSampleSize"] = o.ControlSampleSize
	}
	if o.ExperimentSampleSize != nil {
		toSerialize["experimentSampleSize"] = o.ExperimentSampleSize
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal EstimateABTestResponse: %w", err)
	}

	return serialized, nil
}

func (o EstimateABTestResponse) String() string {
	out := ""
	out += fmt.Sprintf("  durationDays=%v\n", o.DurationDays)
	out += fmt.Sprintf("  controlSampleSize=%v\n", o.ControlSampleSize)
	out += fmt.Sprintf("  experimentSampleSize=%v\n", o.ExperimentSampleSize)
	return fmt.Sprintf("EstimateABTestResponse {\n%s}", out)
}
