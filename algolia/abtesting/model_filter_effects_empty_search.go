// File generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation.
package abtesting

import (
	"encoding/json"
	"fmt"
)

// FilterEffectsEmptySearch Empty searches removed from the A/B test as a result of configuration settings.
type FilterEffectsEmptySearch struct {
	// Number of users removed from the A/B test.
	UsersCount *int32 `json:"usersCount,omitempty"`
	// Number of tracked searches removed from the A/B test.
	TrackedSearchesCount *int32 `json:"trackedSearchesCount,omitempty"`
}

type FilterEffectsEmptySearchOption func(f *FilterEffectsEmptySearch)

func WithFilterEffectsEmptySearchUsersCount(val int32) FilterEffectsEmptySearchOption {
	return func(f *FilterEffectsEmptySearch) {
		f.UsersCount = &val
	}
}

func WithFilterEffectsEmptySearchTrackedSearchesCount(val int32) FilterEffectsEmptySearchOption {
	return func(f *FilterEffectsEmptySearch) {
		f.TrackedSearchesCount = &val
	}
}

// NewFilterEffectsEmptySearch instantiates a new FilterEffectsEmptySearch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewFilterEffectsEmptySearch(opts ...FilterEffectsEmptySearchOption) *FilterEffectsEmptySearch {
	this := &FilterEffectsEmptySearch{}
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptyFilterEffectsEmptySearch return a pointer to an empty FilterEffectsEmptySearch object.
func NewEmptyFilterEffectsEmptySearch() *FilterEffectsEmptySearch {
	return &FilterEffectsEmptySearch{}
}

// GetUsersCount returns the UsersCount field value if set, zero value otherwise.
func (o *FilterEffectsEmptySearch) GetUsersCount() int32 {
	if o == nil || o.UsersCount == nil {
		var ret int32
		return ret
	}
	return *o.UsersCount
}

// GetUsersCountOk returns a tuple with the UsersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterEffectsEmptySearch) GetUsersCountOk() (*int32, bool) {
	if o == nil || o.UsersCount == nil {
		return nil, false
	}
	return o.UsersCount, true
}

// HasUsersCount returns a boolean if a field has been set.
func (o *FilterEffectsEmptySearch) HasUsersCount() bool {
	if o != nil && o.UsersCount != nil {
		return true
	}

	return false
}

// SetUsersCount gets a reference to the given int32 and assigns it to the UsersCount field.
func (o *FilterEffectsEmptySearch) SetUsersCount(v int32) *FilterEffectsEmptySearch {
	o.UsersCount = &v
	return o
}

// GetTrackedSearchesCount returns the TrackedSearchesCount field value if set, zero value otherwise.
func (o *FilterEffectsEmptySearch) GetTrackedSearchesCount() int32 {
	if o == nil || o.TrackedSearchesCount == nil {
		var ret int32
		return ret
	}
	return *o.TrackedSearchesCount
}

// GetTrackedSearchesCountOk returns a tuple with the TrackedSearchesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilterEffectsEmptySearch) GetTrackedSearchesCountOk() (*int32, bool) {
	if o == nil || o.TrackedSearchesCount == nil {
		return nil, false
	}
	return o.TrackedSearchesCount, true
}

// HasTrackedSearchesCount returns a boolean if a field has been set.
func (o *FilterEffectsEmptySearch) HasTrackedSearchesCount() bool {
	if o != nil && o.TrackedSearchesCount != nil {
		return true
	}

	return false
}

// SetTrackedSearchesCount gets a reference to the given int32 and assigns it to the TrackedSearchesCount field.
func (o *FilterEffectsEmptySearch) SetTrackedSearchesCount(v int32) *FilterEffectsEmptySearch {
	o.TrackedSearchesCount = &v
	return o
}

func (o FilterEffectsEmptySearch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.UsersCount != nil {
		toSerialize["usersCount"] = o.UsersCount
	}
	if o.TrackedSearchesCount != nil {
		toSerialize["trackedSearchesCount"] = o.TrackedSearchesCount
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal FilterEffectsEmptySearch: %w", err)
	}

	return serialized, nil
}

func (o FilterEffectsEmptySearch) String() string {
	out := ""
	out += fmt.Sprintf("  usersCount=%v\n", o.UsersCount)
	out += fmt.Sprintf("  trackedSearchesCount=%v\n", o.TrackedSearchesCount)
	return fmt.Sprintf("FilterEffectsEmptySearch {\n%s}", out)
}

type NullableFilterEffectsEmptySearch struct {
	value *FilterEffectsEmptySearch
	isSet bool
}

func (v NullableFilterEffectsEmptySearch) Get() *FilterEffectsEmptySearch {
	return v.value
}

func (v *NullableFilterEffectsEmptySearch) Set(val *FilterEffectsEmptySearch) {
	v.value = val
	v.isSet = true
}

func (v NullableFilterEffectsEmptySearch) IsSet() bool {
	return v.isSet
}

func (v *NullableFilterEffectsEmptySearch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilterEffectsEmptySearch(val *FilterEffectsEmptySearch) *NullableFilterEffectsEmptySearch {
	return &NullableFilterEffectsEmptySearch{value: val, isSet: true}
}

func (v NullableFilterEffectsEmptySearch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value) //nolint:wrapcheck
}

func (v *NullableFilterEffectsEmptySearch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value) //nolint:wrapcheck
}
