// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package abtesting

import (
	"encoding/json"
	"fmt"
)

// AddABTestsRequest struct for AddABTestsRequest.
type AddABTestsRequest struct {
	// A/B test name.
	Name string `json:"name"`
	// A/B test variants.
	Variants []AddABTestsVariant `json:"variants"`
	// End date and time of the A/B test, in RFC 3339 format.
	EndAt string `json:"endAt"`
}

// NewAddABTestsRequest instantiates a new AddABTestsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewAddABTestsRequest(name string, variants []AddABTestsVariant, endAt string) *AddABTestsRequest {
	this := &AddABTestsRequest{}
	this.Name = name
	this.Variants = variants
	this.EndAt = endAt
	return this
}

// NewEmptyAddABTestsRequest return a pointer to an empty AddABTestsRequest object.
func NewEmptyAddABTestsRequest() *AddABTestsRequest {
	return &AddABTestsRequest{}
}

// GetName returns the Name field value.
func (o *AddABTestsRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddABTestsRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value.
func (o *AddABTestsRequest) SetName(v string) *AddABTestsRequest {
	o.Name = v
	return o
}

// GetVariants returns the Variants field value.
func (o *AddABTestsRequest) GetVariants() []AddABTestsVariant {
	if o == nil {
		var ret []AddABTestsVariant
		return ret
	}

	return o.Variants
}

// GetVariantsOk returns a tuple with the Variants field value
// and a boolean to check if the value has been set.
func (o *AddABTestsRequest) GetVariantsOk() ([]AddABTestsVariant, bool) {
	if o == nil {
		return nil, false
	}
	return o.Variants, true
}

// SetVariants sets field value.
func (o *AddABTestsRequest) SetVariants(v []AddABTestsVariant) *AddABTestsRequest {
	o.Variants = v
	return o
}

// GetEndAt returns the EndAt field value.
func (o *AddABTestsRequest) GetEndAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndAt
}

// GetEndAtOk returns a tuple with the EndAt field value
// and a boolean to check if the value has been set.
func (o *AddABTestsRequest) GetEndAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndAt, true
}

// SetEndAt sets field value.
func (o *AddABTestsRequest) SetEndAt(v string) *AddABTestsRequest {
	o.EndAt = v
	return o
}

func (o AddABTestsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["variants"] = o.Variants
	}
	if true {
		toSerialize["endAt"] = o.EndAt
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal AddABTestsRequest: %w", err)
	}

	return serialized, nil
}

func (o AddABTestsRequest) String() string {
	out := ""
	out += fmt.Sprintf("  name=%v\n", o.Name)
	out += fmt.Sprintf("  variants=%v\n", o.Variants)
	out += fmt.Sprintf("  endAt=%v\n", o.EndAt)
	return fmt.Sprintf("AddABTestsRequest {\n%s}", out)
}

type NullableAddABTestsRequest struct {
	value *AddABTestsRequest
	isSet bool
}

func (v NullableAddABTestsRequest) Get() *AddABTestsRequest {
	return v.value
}

func (v *NullableAddABTestsRequest) Set(val *AddABTestsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddABTestsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddABTestsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddABTestsRequest(val *AddABTestsRequest) *NullableAddABTestsRequest {
	return &NullableAddABTestsRequest{value: val, isSet: true}
}

func (v NullableAddABTestsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value) //nolint:wrapcheck
}

func (v *NullableAddABTestsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value) //nolint:wrapcheck
}
