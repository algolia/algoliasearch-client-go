// Code generated by go generate. DO NOT EDIT.

package opt

import (
    "encoding/json"
    "testing"

    "github.com/algolia/algoliasearch-client-go/v3/algolia/opt"
    "github.com/stretchr/testify/require"
)

func TestExtract{{ .Name }}(t *testing.T) {
    for _, c := range []struct {
        opts     []interface{}
        expected *opt.{{ .Name }}Option
    }{
        {
            opts:     []interface{}{nil},
            expected: opt.{{ .Name }}({{ .DefaultValue }}),
        },
        {
            opts:     []interface{}{opt.{{ .Name }}(map[string]interface{}{})},
            expected: opt.{{ .Name }}(map[string]interface{}{}),
        },
        {
            opts:     []interface{}{opt.{{ .Name }}(map[string]interface{}{"k1": 1, "k2": []string{"2", "3"}})},
            expected: opt.{{ .Name }}(map[string]interface{}{"k1": 1.0, "k2": []interface{}{"2", "3"}}),
        },
    } {
        var (
            in  = Extract{{ .Name }}(c.opts...)
            out opt.{{ .Name }}Option
        )
        data, err := json.Marshal(&in)
        require.NoError(t, err)
        err = json.Unmarshal(data, &out)
        require.NoError(t, err)
        require.Equal(t, *c.expected, out)
    }
}
