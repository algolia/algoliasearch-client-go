// Code generated by go generate. DO NOT EDIT.

package opt

import (
    "encoding/json"
    "testing"

    "github.com/algolia/algoliasearch-client-go/v3/algolia/opt"
    "github.com/stretchr/testify/require"
)

func TestExtract{{ .Name }}(t *testing.T) {
    for _, c := range []struct {
        opts     []interface{}
        expected *opt.{{ .Name }}Option
    }{
        {
            opts:     []interface{}{nil},
            expected: opt.{{ .Name }}({{ .DefaultValue }}),
        },
        {
            opts:     []interface{}{opt.{{ .Name }}(map[string][]string{})},
            expected: opt.{{ .Name }}(map[string][]string{}),
        },
        {
            opts:     []interface{}{opt.{{ .Name }}(map[string][]string{"k1": {"v1", "v2"}, "k2": {"v3", "v4"}})},
            expected: opt.{{ .Name }}(map[string][]string{"k1": {"v1", "v2"}, "k2": {"v3", "v4"}}),
        },
    } {
        var (
            in  = Extract{{ .Name }}(c.opts...)
            out opt.{{ .Name }}Option
        )
        data, err := json.Marshal(&in)
        require.NoError(t, err)
        err = json.Unmarshal(data, &out)
        require.NoError(t, err)
        require.Equal(t, *c.expected, out)
    }
}
