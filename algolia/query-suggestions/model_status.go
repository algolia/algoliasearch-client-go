// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package suggestions

import (
	"encoding/json"
	"fmt"
)

// Status struct for Status
type Status struct {
	// The targeted index name.
	IndexName string `json:"indexName"`
	// true if the Query Suggestions index is running.
	IsRunning bool `json:"isRunning"`
	// Date and time of the last build.
	LastBuiltAt string `json:"lastBuiltAt"`
}

// NewStatus instantiates a new Status object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatus(indexName string, isRunning bool, lastBuiltAt string) *Status {
	this := &Status{}
	this.IndexName = indexName
	this.IsRunning = isRunning
	this.LastBuiltAt = lastBuiltAt
	return this
}

// NewStatusWithDefaults instantiates a new Status object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusWithDefaults() *Status {
	this := &Status{}
	return this
}

// GetIndexName returns the IndexName field value
func (o *Status) GetIndexName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IndexName
}

// GetIndexNameOk returns a tuple with the IndexName field value
// and a boolean to check if the value has been set.
func (o *Status) GetIndexNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IndexName, true
}

// SetIndexName sets field value
func (o *Status) SetIndexName(v string) {
	o.IndexName = v
}

// GetIsRunning returns the IsRunning field value
func (o *Status) GetIsRunning() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsRunning
}

// GetIsRunningOk returns a tuple with the IsRunning field value
// and a boolean to check if the value has been set.
func (o *Status) GetIsRunningOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsRunning, true
}

// SetIsRunning sets field value
func (o *Status) SetIsRunning(v bool) {
	o.IsRunning = v
}

// GetLastBuiltAt returns the LastBuiltAt field value
func (o *Status) GetLastBuiltAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastBuiltAt
}

// GetLastBuiltAtOk returns a tuple with the LastBuiltAt field value
// and a boolean to check if the value has been set.
func (o *Status) GetLastBuiltAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastBuiltAt, true
}

// SetLastBuiltAt sets field value
func (o *Status) SetLastBuiltAt(v string) {
	o.LastBuiltAt = v
}

func (o Status) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["indexName"] = o.IndexName
	}
	if true {
		toSerialize["isRunning"] = o.IsRunning
	}
	if true {
		toSerialize["lastBuiltAt"] = o.LastBuiltAt
	}
	return json.Marshal(toSerialize)
}

func (o Status) String() string {
	out := "Status {\n"
	out += fmt.Sprintf("  indexName=%v\n", o.IndexName)
	out += fmt.Sprintf("  isRunning=%v\n", o.IsRunning)
	out += fmt.Sprintf("  lastBuiltAt=%v\n", o.LastBuiltAt)
	out += "}"
	return out
}

type NullableStatus struct {
	value *Status
	isSet bool
}

func (v NullableStatus) Get() *Status {
	return v.value
}

func (v *NullableStatus) Set(val *Status) {
	v.value = val
	v.isSet = true
}

func (v NullableStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatus(val *Status) *NullableStatus {
	return &NullableStatus{value: val, isSet: true}
}

func (v NullableStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
