// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package suggestions

import (
	"encoding/json"
	"fmt"
)

// SourceIndexExternal struct for SourceIndexExternal
type SourceIndexExternal struct {
	// The suggestion you would like to add.
	Query string `json:"query"`
	// The measure of the suggestion relative popularity.
	Count int32 `json:"count"`
}

// NewSourceIndexExternal instantiates a new SourceIndexExternal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSourceIndexExternal(query string, count int32) *SourceIndexExternal {
	this := &SourceIndexExternal{}
	this.Query = query
	this.Count = count
	return this
}

// NewSourceIndexExternalWithDefaults instantiates a new SourceIndexExternal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSourceIndexExternalWithDefaults() *SourceIndexExternal {
	this := &SourceIndexExternal{}
	return this
}

// GetQuery returns the Query field value
func (o *SourceIndexExternal) GetQuery() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Query
}

// GetQueryOk returns a tuple with the Query field value
// and a boolean to check if the value has been set.
func (o *SourceIndexExternal) GetQueryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Query, true
}

// SetQuery sets field value
func (o *SourceIndexExternal) SetQuery(v string) {
	o.Query = v
}

// GetCount returns the Count field value
func (o *SourceIndexExternal) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *SourceIndexExternal) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *SourceIndexExternal) SetCount(v int32) {
	o.Count = v
}

func (o SourceIndexExternal) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["query"] = o.Query
	}
	if true {
		toSerialize["count"] = o.Count
	}
	return json.Marshal(toSerialize)
}

func (o SourceIndexExternal) String() string {
	out := "SourceIndexExternal {\n"
	out += fmt.Sprintf("  query=%v\n", o.Query)
	out += fmt.Sprintf("  count=%v\n", o.Count)
	out += "}"
	return out
}

type NullableSourceIndexExternal struct {
	value *SourceIndexExternal
	isSet bool
}

func (v NullableSourceIndexExternal) Get() *SourceIndexExternal {
	return v.value
}

func (v *NullableSourceIndexExternal) Set(val *SourceIndexExternal) {
	v.value = val
	v.isSet = true
}

func (v NullableSourceIndexExternal) IsSet() bool {
	return v.isSet
}

func (v *NullableSourceIndexExternal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSourceIndexExternal(val *SourceIndexExternal) *NullableSourceIndexExternal {
	return &NullableSourceIndexExternal{value: val, isSet: true}
}

func (v NullableSourceIndexExternal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSourceIndexExternal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
