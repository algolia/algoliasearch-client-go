// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package suggestions

import (
	"encoding/json"
	"fmt"
)

// QuerySuggestionsConfigurationResponse struct for QuerySuggestionsConfigurationResponse
type QuerySuggestionsConfigurationResponse struct {
	// Your Algolia application ID.
	AppId *string `json:"appId,omitempty"`
	// API key used to read from your source index.
	SourceIndicesAPIKey *string `json:"sourceIndicesAPIKey,omitempty"`
	// API key used to write and configure your Query Suggestions index.
	SuggestionsIndicesAPIKey *string `json:"suggestionsIndicesAPIKey,omitempty"`
	// API key used to read from external Algolia indices.
	ExternalIndicesAPIKey *string `json:"externalIndicesAPIKey,omitempty"`
	// Query Suggestions index name.
	IndexName string `json:"indexName"`
	// Algolia indices from which to get the popular searches for query suggestions.
	SourceIndices []SourceIndex `json:"sourceIndices"`
	Languages     *Languages    `json:"languages,omitempty"`
	// Patterns to exclude from query suggestions.
	Exclude []string `json:"exclude,omitempty"`
	// Turn on personalized query suggestions.
	EnablePersonalization *bool `json:"enablePersonalization,omitempty"`
	// Allow suggestions with special characters.
	AllowSpecialCharacters *bool `json:"allowSpecialCharacters,omitempty"`
}

type QuerySuggestionsConfigurationResponseOption func(f *QuerySuggestionsConfigurationResponse)

func WithQuerySuggestionsConfigurationResponseAppId(val string) QuerySuggestionsConfigurationResponseOption {
	return func(f *QuerySuggestionsConfigurationResponse) {
		f.AppId = &val
	}
}

func WithQuerySuggestionsConfigurationResponseSourceIndicesAPIKey(val string) QuerySuggestionsConfigurationResponseOption {
	return func(f *QuerySuggestionsConfigurationResponse) {
		f.SourceIndicesAPIKey = &val
	}
}

func WithQuerySuggestionsConfigurationResponseSuggestionsIndicesAPIKey(val string) QuerySuggestionsConfigurationResponseOption {
	return func(f *QuerySuggestionsConfigurationResponse) {
		f.SuggestionsIndicesAPIKey = &val
	}
}

func WithQuerySuggestionsConfigurationResponseExternalIndicesAPIKey(val string) QuerySuggestionsConfigurationResponseOption {
	return func(f *QuerySuggestionsConfigurationResponse) {
		f.ExternalIndicesAPIKey = &val
	}
}

func WithQuerySuggestionsConfigurationResponseLanguages(val Languages) QuerySuggestionsConfigurationResponseOption {
	return func(f *QuerySuggestionsConfigurationResponse) {
		f.Languages = &val
	}
}

func WithQuerySuggestionsConfigurationResponseExclude(val []string) QuerySuggestionsConfigurationResponseOption {
	return func(f *QuerySuggestionsConfigurationResponse) {
		f.Exclude = val
	}
}

func WithQuerySuggestionsConfigurationResponseEnablePersonalization(val bool) QuerySuggestionsConfigurationResponseOption {
	return func(f *QuerySuggestionsConfigurationResponse) {
		f.EnablePersonalization = &val
	}
}

func WithQuerySuggestionsConfigurationResponseAllowSpecialCharacters(val bool) QuerySuggestionsConfigurationResponseOption {
	return func(f *QuerySuggestionsConfigurationResponse) {
		f.AllowSpecialCharacters = &val
	}
}

// NewQuerySuggestionsConfigurationResponse instantiates a new QuerySuggestionsConfigurationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuerySuggestionsConfigurationResponse(indexName string, sourceIndices []SourceIndex, opts ...QuerySuggestionsConfigurationResponseOption) *QuerySuggestionsConfigurationResponse {
	this := &QuerySuggestionsConfigurationResponse{}
	this.IndexName = indexName
	this.SourceIndices = sourceIndices
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewQuerySuggestionsConfigurationResponseWithDefaults instantiates a new QuerySuggestionsConfigurationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuerySuggestionsConfigurationResponseWithDefaults() *QuerySuggestionsConfigurationResponse {
	this := &QuerySuggestionsConfigurationResponse{}
	var externalIndicesAPIKey string = ""
	this.ExternalIndicesAPIKey = &externalIndicesAPIKey
	var enablePersonalization bool = false
	this.EnablePersonalization = &enablePersonalization
	var allowSpecialCharacters bool = false
	this.AllowSpecialCharacters = &allowSpecialCharacters
	return this
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *QuerySuggestionsConfigurationResponse) GetAppId() string {
	if o == nil || o.AppId == nil {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuerySuggestionsConfigurationResponse) GetAppIdOk() (*string, bool) {
	if o == nil || o.AppId == nil {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *QuerySuggestionsConfigurationResponse) HasAppId() bool {
	if o != nil && o.AppId != nil {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *QuerySuggestionsConfigurationResponse) SetAppId(v string) {
	o.AppId = &v
}

// GetSourceIndicesAPIKey returns the SourceIndicesAPIKey field value if set, zero value otherwise.
func (o *QuerySuggestionsConfigurationResponse) GetSourceIndicesAPIKey() string {
	if o == nil || o.SourceIndicesAPIKey == nil {
		var ret string
		return ret
	}
	return *o.SourceIndicesAPIKey
}

// GetSourceIndicesAPIKeyOk returns a tuple with the SourceIndicesAPIKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuerySuggestionsConfigurationResponse) GetSourceIndicesAPIKeyOk() (*string, bool) {
	if o == nil || o.SourceIndicesAPIKey == nil {
		return nil, false
	}
	return o.SourceIndicesAPIKey, true
}

// HasSourceIndicesAPIKey returns a boolean if a field has been set.
func (o *QuerySuggestionsConfigurationResponse) HasSourceIndicesAPIKey() bool {
	if o != nil && o.SourceIndicesAPIKey != nil {
		return true
	}

	return false
}

// SetSourceIndicesAPIKey gets a reference to the given string and assigns it to the SourceIndicesAPIKey field.
func (o *QuerySuggestionsConfigurationResponse) SetSourceIndicesAPIKey(v string) {
	o.SourceIndicesAPIKey = &v
}

// GetSuggestionsIndicesAPIKey returns the SuggestionsIndicesAPIKey field value if set, zero value otherwise.
func (o *QuerySuggestionsConfigurationResponse) GetSuggestionsIndicesAPIKey() string {
	if o == nil || o.SuggestionsIndicesAPIKey == nil {
		var ret string
		return ret
	}
	return *o.SuggestionsIndicesAPIKey
}

// GetSuggestionsIndicesAPIKeyOk returns a tuple with the SuggestionsIndicesAPIKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuerySuggestionsConfigurationResponse) GetSuggestionsIndicesAPIKeyOk() (*string, bool) {
	if o == nil || o.SuggestionsIndicesAPIKey == nil {
		return nil, false
	}
	return o.SuggestionsIndicesAPIKey, true
}

// HasSuggestionsIndicesAPIKey returns a boolean if a field has been set.
func (o *QuerySuggestionsConfigurationResponse) HasSuggestionsIndicesAPIKey() bool {
	if o != nil && o.SuggestionsIndicesAPIKey != nil {
		return true
	}

	return false
}

// SetSuggestionsIndicesAPIKey gets a reference to the given string and assigns it to the SuggestionsIndicesAPIKey field.
func (o *QuerySuggestionsConfigurationResponse) SetSuggestionsIndicesAPIKey(v string) {
	o.SuggestionsIndicesAPIKey = &v
}

// GetExternalIndicesAPIKey returns the ExternalIndicesAPIKey field value if set, zero value otherwise.
func (o *QuerySuggestionsConfigurationResponse) GetExternalIndicesAPIKey() string {
	if o == nil || o.ExternalIndicesAPIKey == nil {
		var ret string
		return ret
	}
	return *o.ExternalIndicesAPIKey
}

// GetExternalIndicesAPIKeyOk returns a tuple with the ExternalIndicesAPIKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuerySuggestionsConfigurationResponse) GetExternalIndicesAPIKeyOk() (*string, bool) {
	if o == nil || o.ExternalIndicesAPIKey == nil {
		return nil, false
	}
	return o.ExternalIndicesAPIKey, true
}

// HasExternalIndicesAPIKey returns a boolean if a field has been set.
func (o *QuerySuggestionsConfigurationResponse) HasExternalIndicesAPIKey() bool {
	if o != nil && o.ExternalIndicesAPIKey != nil {
		return true
	}

	return false
}

// SetExternalIndicesAPIKey gets a reference to the given string and assigns it to the ExternalIndicesAPIKey field.
func (o *QuerySuggestionsConfigurationResponse) SetExternalIndicesAPIKey(v string) {
	o.ExternalIndicesAPIKey = &v
}

// GetIndexName returns the IndexName field value
func (o *QuerySuggestionsConfigurationResponse) GetIndexName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IndexName
}

// GetIndexNameOk returns a tuple with the IndexName field value
// and a boolean to check if the value has been set.
func (o *QuerySuggestionsConfigurationResponse) GetIndexNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IndexName, true
}

// SetIndexName sets field value
func (o *QuerySuggestionsConfigurationResponse) SetIndexName(v string) {
	o.IndexName = v
}

// GetSourceIndices returns the SourceIndices field value
func (o *QuerySuggestionsConfigurationResponse) GetSourceIndices() []SourceIndex {
	if o == nil {
		var ret []SourceIndex
		return ret
	}

	return o.SourceIndices
}

// GetSourceIndicesOk returns a tuple with the SourceIndices field value
// and a boolean to check if the value has been set.
func (o *QuerySuggestionsConfigurationResponse) GetSourceIndicesOk() ([]SourceIndex, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceIndices, true
}

// SetSourceIndices sets field value
func (o *QuerySuggestionsConfigurationResponse) SetSourceIndices(v []SourceIndex) {
	o.SourceIndices = v
}

// GetLanguages returns the Languages field value if set, zero value otherwise.
func (o *QuerySuggestionsConfigurationResponse) GetLanguages() Languages {
	if o == nil || o.Languages == nil {
		var ret Languages
		return ret
	}
	return *o.Languages
}

// GetLanguagesOk returns a tuple with the Languages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuerySuggestionsConfigurationResponse) GetLanguagesOk() (*Languages, bool) {
	if o == nil || o.Languages == nil {
		return nil, false
	}
	return o.Languages, true
}

// HasLanguages returns a boolean if a field has been set.
func (o *QuerySuggestionsConfigurationResponse) HasLanguages() bool {
	if o != nil && o.Languages != nil {
		return true
	}

	return false
}

// SetLanguages gets a reference to the given Languages and assigns it to the Languages field.
func (o *QuerySuggestionsConfigurationResponse) SetLanguages(v Languages) {
	o.Languages = &v
}

// GetExclude returns the Exclude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuerySuggestionsConfigurationResponse) GetExclude() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Exclude
}

// GetExcludeOk returns a tuple with the Exclude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuerySuggestionsConfigurationResponse) GetExcludeOk() ([]string, bool) {
	if o == nil || o.Exclude == nil {
		return nil, false
	}
	return o.Exclude, true
}

// HasExclude returns a boolean if a field has been set.
func (o *QuerySuggestionsConfigurationResponse) HasExclude() bool {
	if o != nil && o.Exclude != nil {
		return true
	}

	return false
}

// SetExclude gets a reference to the given []string and assigns it to the Exclude field.
func (o *QuerySuggestionsConfigurationResponse) SetExclude(v []string) {
	o.Exclude = v
}

// GetEnablePersonalization returns the EnablePersonalization field value if set, zero value otherwise.
func (o *QuerySuggestionsConfigurationResponse) GetEnablePersonalization() bool {
	if o == nil || o.EnablePersonalization == nil {
		var ret bool
		return ret
	}
	return *o.EnablePersonalization
}

// GetEnablePersonalizationOk returns a tuple with the EnablePersonalization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuerySuggestionsConfigurationResponse) GetEnablePersonalizationOk() (*bool, bool) {
	if o == nil || o.EnablePersonalization == nil {
		return nil, false
	}
	return o.EnablePersonalization, true
}

// HasEnablePersonalization returns a boolean if a field has been set.
func (o *QuerySuggestionsConfigurationResponse) HasEnablePersonalization() bool {
	if o != nil && o.EnablePersonalization != nil {
		return true
	}

	return false
}

// SetEnablePersonalization gets a reference to the given bool and assigns it to the EnablePersonalization field.
func (o *QuerySuggestionsConfigurationResponse) SetEnablePersonalization(v bool) {
	o.EnablePersonalization = &v
}

// GetAllowSpecialCharacters returns the AllowSpecialCharacters field value if set, zero value otherwise.
func (o *QuerySuggestionsConfigurationResponse) GetAllowSpecialCharacters() bool {
	if o == nil || o.AllowSpecialCharacters == nil {
		var ret bool
		return ret
	}
	return *o.AllowSpecialCharacters
}

// GetAllowSpecialCharactersOk returns a tuple with the AllowSpecialCharacters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuerySuggestionsConfigurationResponse) GetAllowSpecialCharactersOk() (*bool, bool) {
	if o == nil || o.AllowSpecialCharacters == nil {
		return nil, false
	}
	return o.AllowSpecialCharacters, true
}

// HasAllowSpecialCharacters returns a boolean if a field has been set.
func (o *QuerySuggestionsConfigurationResponse) HasAllowSpecialCharacters() bool {
	if o != nil && o.AllowSpecialCharacters != nil {
		return true
	}

	return false
}

// SetAllowSpecialCharacters gets a reference to the given bool and assigns it to the AllowSpecialCharacters field.
func (o *QuerySuggestionsConfigurationResponse) SetAllowSpecialCharacters(v bool) {
	o.AllowSpecialCharacters = &v
}

func (o QuerySuggestionsConfigurationResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.AppId != nil {
		toSerialize["appId"] = o.AppId
	}
	if o.SourceIndicesAPIKey != nil {
		toSerialize["sourceIndicesAPIKey"] = o.SourceIndicesAPIKey
	}
	if o.SuggestionsIndicesAPIKey != nil {
		toSerialize["suggestionsIndicesAPIKey"] = o.SuggestionsIndicesAPIKey
	}
	if o.ExternalIndicesAPIKey != nil {
		toSerialize["externalIndicesAPIKey"] = o.ExternalIndicesAPIKey
	}
	if true {
		toSerialize["indexName"] = o.IndexName
	}
	if true {
		toSerialize["sourceIndices"] = o.SourceIndices
	}
	if o.Languages != nil {
		toSerialize["languages"] = o.Languages
	}
	if o.Exclude != nil {
		toSerialize["exclude"] = o.Exclude
	}
	if o.EnablePersonalization != nil {
		toSerialize["enablePersonalization"] = o.EnablePersonalization
	}
	if o.AllowSpecialCharacters != nil {
		toSerialize["allowSpecialCharacters"] = o.AllowSpecialCharacters
	}
	return json.Marshal(toSerialize)
}

func (o QuerySuggestionsConfigurationResponse) String() string {
	out := ""
	out += fmt.Sprintf("  appId=%v\n", o.AppId)
	out += fmt.Sprintf("  sourceIndicesAPIKey=%v\n", o.SourceIndicesAPIKey)
	out += fmt.Sprintf("  suggestionsIndicesAPIKey=%v\n", o.SuggestionsIndicesAPIKey)
	out += fmt.Sprintf("  externalIndicesAPIKey=%v\n", o.ExternalIndicesAPIKey)
	out += fmt.Sprintf("  indexName=%v\n", o.IndexName)
	out += fmt.Sprintf("  sourceIndices=%v\n", o.SourceIndices)
	out += fmt.Sprintf("  languages=%v\n", o.Languages)
	out += fmt.Sprintf("  exclude=%v\n", o.Exclude)
	out += fmt.Sprintf("  enablePersonalization=%v\n", o.EnablePersonalization)
	out += fmt.Sprintf("  allowSpecialCharacters=%v\n", o.AllowSpecialCharacters)
	return fmt.Sprintf("QuerySuggestionsConfigurationResponse {\n%s}", out)
}

type NullableQuerySuggestionsConfigurationResponse struct {
	value *QuerySuggestionsConfigurationResponse
	isSet bool
}

func (v NullableQuerySuggestionsConfigurationResponse) Get() *QuerySuggestionsConfigurationResponse {
	return v.value
}

func (v *NullableQuerySuggestionsConfigurationResponse) Set(val *QuerySuggestionsConfigurationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableQuerySuggestionsConfigurationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableQuerySuggestionsConfigurationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuerySuggestionsConfigurationResponse(val *QuerySuggestionsConfigurationResponse) *NullableQuerySuggestionsConfigurationResponse {
	return &NullableQuerySuggestionsConfigurationResponse{value: val, isSet: true}
}

func (v NullableQuerySuggestionsConfigurationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuerySuggestionsConfigurationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
