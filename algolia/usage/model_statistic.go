// File generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation.
package usage

import (
	"encoding/json"
	"fmt"
)

// Statistic the model 'Statistic'.
type Statistic string

// List of Statistic.
const (
	STATISTIC_STAR                                           Statistic = "*"
	STATISTIC_SEARCH_OPERATIONS                              Statistic = "search_operations"
	STATISTIC_TOTAL_SEARCH_OPERATIONS                        Statistic = "total_search_operations"
	STATISTIC_TOTAL_SEARCH_REQUESTS                          Statistic = "total_search_requests"
	STATISTIC_QUERIES_OPERATIONS                             Statistic = "queries_operations"
	STATISTIC_MULTI_QUERIES_OPERATIONS                       Statistic = "multi_queries_operations"
	STATISTIC_ACL_OPERATIONS                                 Statistic = "acl_operations"
	STATISTIC_TOTAL_ACL_OPERATIONS                           Statistic = "total_acl_operations"
	STATISTIC_GET_API_KEYS_OPERATIONS                        Statistic = "get_api_keys_operations"
	STATISTIC_GET_API_KEY_OPERATIONS                         Statistic = "get_api_key_operations"
	STATISTIC_ADD_API_KEY_OPERATIONS                         Statistic = "add_api_key_operations"
	STATISTIC_UPDATE_API_KEY_OPERATIONS                      Statistic = "update_api_key_operations"
	STATISTIC_DELETE_API_KEY_OPERATIONS                      Statistic = "delete_api_key_operations"
	STATISTIC_LIST_API_KEY_OPERATIONS                        Statistic = "list_api_key_operations"
	STATISTIC_INDEXING_OPERATIONS                            Statistic = "indexing_operations"
	STATISTIC_TOTAL_INDEXING_OPERATIONS                      Statistic = "total_indexing_operations"
	STATISTIC_BROWSE_OPERATIONS                              Statistic = "browse_operations"
	STATISTIC_CLEAR_INDEX_OPERATIONS                         Statistic = "clear_index_operations"
	STATISTIC_COPY_MOVE_OPERATIONS                           Statistic = "copy_move_operations"
	STATISTIC_DELETE_INDEX_OPERATIONS                        Statistic = "delete_index_operations"
	STATISTIC_GET_LOG_OPERATIONS                             Statistic = "get_log_operations"
	STATISTIC_GET_SETTINGS_OPERATIONS                        Statistic = "get_settings_operations"
	STATISTIC_SET_SETTINGS_OPERATIONS                        Statistic = "set_settings_operations"
	STATISTIC_LIST_INDICES_OPERATIONS                        Statistic = "list_indices_operations"
	STATISTIC_WAIT_TASK_OPERATIONS                           Statistic = "wait_task_operations"
	STATISTIC_RECORD_OPERATIONS                              Statistic = "record_operations"
	STATISTIC_TOTAL_RECORDS_OPERATIONS                       Statistic = "total_records_operations"
	STATISTIC_ADD_RECORD_OPERATIONS                          Statistic = "add_record_operations"
	STATISTIC_BATCH_OPERATIONS                               Statistic = "batch_operations"
	STATISTIC_DELETE_BY_QUERY_OPERATIONS                     Statistic = "delete_by_query_operations"
	STATISTIC_DELETE_RECORD_OPERATIONS                       Statistic = "delete_record_operations"
	STATISTIC_GET_RECORD_OPERATIONS                          Statistic = "get_record_operations"
	STATISTIC_PARTIAL_UPDATE_RECORD_OPERATIONS               Statistic = "partial_update_record_operations"
	STATISTIC_UPDATE_RECORD_OPERATIONS                       Statistic = "update_record_operations"
	STATISTIC_SYNONYM_OPERATIONS                             Statistic = "synonym_operations"
	STATISTIC_TOTAL_SYNONYM_OPERATIONS                       Statistic = "total_synonym_operations"
	STATISTIC_BATCH_SYNONYM_OPERATIONS                       Statistic = "batch_synonym_operations"
	STATISTIC_CLEAR_SYNONYM_OPERATIONS                       Statistic = "clear_synonym_operations"
	STATISTIC_DELETE_SYNONYM_OPERATIONS                      Statistic = "delete_synonym_operations"
	STATISTIC_GET_SYNONYM_OPERATIONS                         Statistic = "get_synonym_operations"
	STATISTIC_QUERY_SYNONYM_OPERATIONS                       Statistic = "query_synonym_operations"
	STATISTIC_UPDATE_SYNONYM_OPERATIONS                      Statistic = "update_synonym_operations"
	STATISTIC_RULE_OPERATIONS                                Statistic = "rule_operations"
	STATISTIC_TOTAL_RULES_OPERATIONS                         Statistic = "total_rules_operations"
	STATISTIC_BATCH_RULES_OPERATIONS                         Statistic = "batch_rules_operations"
	STATISTIC_CLEAR_RULES_OPERATIONS                         Statistic = "clear_rules_operations"
	STATISTIC_DELETE_RULES_OPERATIONS                        Statistic = "delete_rules_operations"
	STATISTIC_GET_RULES_OPERATIONS                           Statistic = "get_rules_operations"
	STATISTIC_SAVE_RULES_OPERATIONS                          Statistic = "save_rules_operations"
	STATISTIC_SEARCH_RULES_OPERATIONS                        Statistic = "search_rules_operations"
	STATISTIC_TOTAL_RECOMMEND_REQUESTS                       Statistic = "total_recommend_requests"
	STATISTIC_TOTAL_WRITE_OPERATIONS                         Statistic = "total_write_operations"
	STATISTIC_TOTAL_READ_OPERATIONS                          Statistic = "total_read_operations"
	STATISTIC_TOTAL_OPERATIONS                               Statistic = "total_operations"
	STATISTIC_QUERYSUGGESTIONS_TOTAL_SEARCH_OPERATIONS       Statistic = "querysuggestions_total_search_operations"
	STATISTIC_QUERYSUGGESTIONS_TOTAL_SEARCH_REQUESTS         Statistic = "querysuggestions_total_search_requests"
	STATISTIC_QUERYSUGGESTIONS_TOTAL_ACL_OPERATIONS          Statistic = "querysuggestions_total_acl_operations"
	STATISTIC_QUERYSUGGESTIONS_TOTAL_INDEXING_OPERATIONS     Statistic = "querysuggestions_total_indexing_operations"
	STATISTIC_QUERYSUGGESTIONS_TOTAL_RECORDS_OPERATIONS      Statistic = "querysuggestions_total_records_operations"
	STATISTIC_QUERYSUGGESTIONS_TOTAL_SYNONYM_OPERATIONS      Statistic = "querysuggestions_total_synonym_operations"
	STATISTIC_QUERYSUGGESTIONS_TOTAL_RULES_OPERATIONS        Statistic = "querysuggestions_total_rules_operations"
	STATISTIC_QUERYSUGGESTIONS_TOTAL_WRITE_OPERATIONS        Statistic = "querysuggestions_total_write_operations"
	STATISTIC_QUERYSUGGESTIONS_TOTAL_READ_OPERATIONS         Statistic = "querysuggestions_total_read_operations"
	STATISTIC_QUERYSUGGESTIONS_TOTAL_OPERATIONS              Statistic = "querysuggestions_total_operations"
	STATISTIC_AVG_PROCESSING_TIME                            Statistic = "avg_processing_time"
	STATISTIC__90P_PROCESSING_TIME                           Statistic = "90p_processing_time"
	STATISTIC__99P_PROCESSING_TIME                           Statistic = "99p_processing_time"
	STATISTIC_QUERIES_ABOVE_LAST_MS_PROCESSING_TIME          Statistic = "queries_above_last_ms_processing_time"
	STATISTIC_RECORDS                                        Statistic = "records"
	STATISTIC_DATA_SIZE                                      Statistic = "data_size"
	STATISTIC_FILE_SIZE                                      Statistic = "file_size"
	STATISTIC_MAX_QPS                                        Statistic = "max_qps"
	STATISTIC_REGION_MAX_QPS                                 Statistic = "region_max_qps"
	STATISTIC_TOTAL_MAX_QPS                                  Statistic = "total_max_qps"
	STATISTIC_USED_SEARCH_CAPACITY                           Statistic = "used_search_capacity"
	STATISTIC_AVG_USED_SEARCH_CAPACITY                       Statistic = "avg_used_search_capacity"
	STATISTIC_REGION_USED_SEARCH_CAPACITY                    Statistic = "region_used_search_capacity"
	STATISTIC_REGION_AVG_USED_SEARCH_CAPACITY                Statistic = "region_avg_used_search_capacity"
	STATISTIC_TOTAL_USED_SEARCH_CAPACITY                     Statistic = "total_used_search_capacity"
	STATISTIC_TOTAL_AVG_USED_SEARCH_CAPACITY                 Statistic = "total_avg_used_search_capacity"
	STATISTIC_DEGRADED_QUERIES_SSD_USED_QUERIES_IMPACTED     Statistic = "degraded_queries_ssd_used_queries_impacted"
	STATISTIC_DEGRADED_QUERIES_SSD_USED_SECONDS_IMPACTED     Statistic = "degraded_queries_ssd_used_seconds_impacted"
	STATISTIC_DEGRADED_QUERIES_MAX_CAPACITY_QUERIES_IMPACTED Statistic = "degraded_queries_max_capacity_queries_impacted"
	STATISTIC_DEGRADED_QUERIES_MAX_CAPACITY_SECONDS_IMPACTED Statistic = "degraded_queries_max_capacity_seconds_impacted"
)

// All allowed values of Statistic enum.
var AllowedStatisticEnumValues = []Statistic{
	"*",
	"search_operations",
	"total_search_operations",
	"total_search_requests",
	"queries_operations",
	"multi_queries_operations",
	"acl_operations",
	"total_acl_operations",
	"get_api_keys_operations",
	"get_api_key_operations",
	"add_api_key_operations",
	"update_api_key_operations",
	"delete_api_key_operations",
	"list_api_key_operations",
	"indexing_operations",
	"total_indexing_operations",
	"browse_operations",
	"clear_index_operations",
	"copy_move_operations",
	"delete_index_operations",
	"get_log_operations",
	"get_settings_operations",
	"set_settings_operations",
	"list_indices_operations",
	"wait_task_operations",
	"record_operations",
	"total_records_operations",
	"add_record_operations",
	"batch_operations",
	"delete_by_query_operations",
	"delete_record_operations",
	"get_record_operations",
	"partial_update_record_operations",
	"update_record_operations",
	"synonym_operations",
	"total_synonym_operations",
	"batch_synonym_operations",
	"clear_synonym_operations",
	"delete_synonym_operations",
	"get_synonym_operations",
	"query_synonym_operations",
	"update_synonym_operations",
	"rule_operations",
	"total_rules_operations",
	"batch_rules_operations",
	"clear_rules_operations",
	"delete_rules_operations",
	"get_rules_operations",
	"save_rules_operations",
	"search_rules_operations",
	"total_recommend_requests",
	"total_write_operations",
	"total_read_operations",
	"total_operations",
	"querysuggestions_total_search_operations",
	"querysuggestions_total_search_requests",
	"querysuggestions_total_acl_operations",
	"querysuggestions_total_indexing_operations",
	"querysuggestions_total_records_operations",
	"querysuggestions_total_synonym_operations",
	"querysuggestions_total_rules_operations",
	"querysuggestions_total_write_operations",
	"querysuggestions_total_read_operations",
	"querysuggestions_total_operations",
	"avg_processing_time",
	"90p_processing_time",
	"99p_processing_time",
	"queries_above_last_ms_processing_time",
	"records",
	"data_size",
	"file_size",
	"max_qps",
	"region_max_qps",
	"total_max_qps",
	"used_search_capacity",
	"avg_used_search_capacity",
	"region_used_search_capacity",
	"region_avg_used_search_capacity",
	"total_used_search_capacity",
	"total_avg_used_search_capacity",
	"degraded_queries_ssd_used_queries_impacted",
	"degraded_queries_ssd_used_seconds_impacted",
	"degraded_queries_max_capacity_queries_impacted",
	"degraded_queries_max_capacity_seconds_impacted",
}

func (v *Statistic) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return fmt.Errorf("failed to unmarshal value '%s' for enum 'Statistic': %w", string(src), err)
	}
	enumTypeValue := Statistic(value)
	for _, existing := range AllowedStatisticEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Statistic", value)
}

// NewStatisticFromValue returns a pointer to a valid Statistic
// for the value passed as argument, or an error if the value passed is not allowed by the enum.
func NewStatisticFromValue(v string) (*Statistic, error) {
	ev := Statistic(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Statistic: valid values are %v", v, AllowedStatisticEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise.
func (v Statistic) IsValid() bool {
	for _, existing := range AllowedStatisticEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Statistic value.
func (v Statistic) Ptr() *Statistic {
	return &v
}

type NullableStatistic struct {
	value *Statistic
	isSet bool
}

func (v NullableStatistic) Get() *Statistic {
	return v.value
}

func (v *NullableStatistic) Set(val *Statistic) {
	v.value = val
	v.isSet = true
}

func (v NullableStatistic) IsSet() bool {
	return v.isSet
}

func (v *NullableStatistic) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatistic(val *Statistic) *NullableStatistic {
	return &NullableStatistic{value: val, isSet: true}
}

func (v NullableStatistic) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value) //nolint:wrapcheck
}

func (v *NullableStatistic) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value) //nolint:wrapcheck
}
