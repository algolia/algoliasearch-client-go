// File generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation.
package usage

import (
	"encoding/json"
	"fmt"
)

// GetUsage200Response struct for GetUsage200Response.
type GetUsage200Response struct {
	Statistics []GetUsage200ResponseStatisticsInner `json:"statistics,omitempty"`
}

type GetUsage200ResponseOption func(f *GetUsage200Response)

func WithGetUsage200ResponseStatistics(val []GetUsage200ResponseStatisticsInner) GetUsage200ResponseOption {
	return func(f *GetUsage200Response) {
		f.Statistics = val
	}
}

// NewGetUsage200Response instantiates a new GetUsage200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewGetUsage200Response(opts ...GetUsage200ResponseOption) *GetUsage200Response {
	this := &GetUsage200Response{}
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptyGetUsage200Response return a pointer to an empty GetUsage200Response object.
func NewEmptyGetUsage200Response() *GetUsage200Response {
	return &GetUsage200Response{}
}

// GetStatistics returns the Statistics field value if set, zero value otherwise.
func (o *GetUsage200Response) GetStatistics() []GetUsage200ResponseStatisticsInner {
	if o == nil || o.Statistics == nil {
		var ret []GetUsage200ResponseStatisticsInner
		return ret
	}
	return o.Statistics
}

// GetStatisticsOk returns a tuple with the Statistics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUsage200Response) GetStatisticsOk() ([]GetUsage200ResponseStatisticsInner, bool) {
	if o == nil || o.Statistics == nil {
		return nil, false
	}
	return o.Statistics, true
}

// HasStatistics returns a boolean if a field has been set.
func (o *GetUsage200Response) HasStatistics() bool {
	if o != nil && o.Statistics != nil {
		return true
	}

	return false
}

// SetStatistics gets a reference to the given []GetUsage200ResponseStatisticsInner and assigns it to the Statistics field.
func (o *GetUsage200Response) SetStatistics(v []GetUsage200ResponseStatisticsInner) *GetUsage200Response {
	o.Statistics = v
	return o
}

func (o GetUsage200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.Statistics != nil {
		toSerialize["statistics"] = o.Statistics
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal GetUsage200Response: %w", err)
	}

	return serialized, nil
}

func (o GetUsage200Response) String() string {
	out := ""
	out += fmt.Sprintf("  statistics=%v\n", o.Statistics)
	return fmt.Sprintf("GetUsage200Response {\n%s}", out)
}

type NullableGetUsage200Response struct {
	value *GetUsage200Response
	isSet bool
}

func (v NullableGetUsage200Response) Get() *GetUsage200Response {
	return v.value
}

func (v *NullableGetUsage200Response) Set(val *GetUsage200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUsage200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUsage200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUsage200Response(val *GetUsage200Response) *NullableGetUsage200Response {
	return &NullableGetUsage200Response{value: val, isSet: true}
}

func (v NullableGetUsage200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value) //nolint:wrapcheck
}

func (v *NullableGetUsage200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value) //nolint:wrapcheck
}
