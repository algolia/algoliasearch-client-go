// File generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation.
package usage

import (
	"encoding/json"
	"fmt"
)

// GetUsage400Response struct for GetUsage400Response.
type GetUsage400Response struct {
	Error GetUsage400ResponseError `json:"error"`
}

// NewGetUsage400Response instantiates a new GetUsage400Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewGetUsage400Response(error_ GetUsage400ResponseError) *GetUsage400Response {
	this := &GetUsage400Response{}
	this.Error = error_
	return this
}

// NewEmptyGetUsage400Response return a pointer to an empty GetUsage400Response object.
func NewEmptyGetUsage400Response() *GetUsage400Response {
	return &GetUsage400Response{}
}

// GetError returns the Error field value.
func (o *GetUsage400Response) GetError() GetUsage400ResponseError {
	if o == nil {
		var ret GetUsage400ResponseError
		return ret
	}

	return o.Error
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
func (o *GetUsage400Response) GetErrorOk() (*GetUsage400ResponseError, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Error, true
}

// SetError sets field value.
func (o *GetUsage400Response) SetError(v *GetUsage400ResponseError) *GetUsage400Response {
	o.Error = *v
	return o
}

func (o GetUsage400Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["error"] = o.Error
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal GetUsage400Response: %w", err)
	}

	return serialized, nil
}

func (o GetUsage400Response) String() string {
	out := ""
	out += fmt.Sprintf("  error=%v\n", o.Error)
	return fmt.Sprintf("GetUsage400Response {\n%s}", out)
}

type NullableGetUsage400Response struct {
	value *GetUsage400Response
	isSet bool
}

func (v NullableGetUsage400Response) Get() *GetUsage400Response {
	return v.value
}

func (v *NullableGetUsage400Response) Set(val *GetUsage400Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUsage400Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUsage400Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUsage400Response(val *GetUsage400Response) *NullableGetUsage400Response {
	return &NullableGetUsage400Response{value: val, isSet: true}
}

func (v NullableGetUsage400Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value) //nolint:wrapcheck
}

func (v *NullableGetUsage400Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value) //nolint:wrapcheck
}
