// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package abtestingV3

import (
	"encoding/json"
	"fmt"
)

// Timeseries struct for Timeseries.
type Timeseries struct {
	// Unique A/B test identifier.
	AbTestID int32 `json:"abTestID"`
	// A/B test timeseries variants.  The first variant is your _control_ index, typically your production index. All of the additional variants are indexes with changed settings that you want to test against the control.
	Variants []TimeseriesVariant `json:"variants"`
}

// NewTimeseries instantiates a new Timeseries object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewTimeseries(abTestID int32, variants []TimeseriesVariant) *Timeseries {
	this := &Timeseries{}
	this.AbTestID = abTestID
	this.Variants = variants
	return this
}

// NewEmptyTimeseries return a pointer to an empty Timeseries object.
func NewEmptyTimeseries() *Timeseries {
	return &Timeseries{}
}

// GetAbTestID returns the AbTestID field value.
func (o *Timeseries) GetAbTestID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AbTestID
}

// GetAbTestIDOk returns a tuple with the AbTestID field value
// and a boolean to check if the value has been set.
func (o *Timeseries) GetAbTestIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AbTestID, true
}

// SetAbTestID sets field value.
func (o *Timeseries) SetAbTestID(v int32) *Timeseries {
	o.AbTestID = v
	return o
}

// GetVariants returns the Variants field value.
func (o *Timeseries) GetVariants() []TimeseriesVariant {
	if o == nil {
		var ret []TimeseriesVariant
		return ret
	}

	return o.Variants
}

// GetVariantsOk returns a tuple with the Variants field value
// and a boolean to check if the value has been set.
func (o *Timeseries) GetVariantsOk() ([]TimeseriesVariant, bool) {
	if o == nil {
		return nil, false
	}
	return o.Variants, true
}

// SetVariants sets field value.
func (o *Timeseries) SetVariants(v []TimeseriesVariant) *Timeseries {
	o.Variants = v
	return o
}

func (o Timeseries) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	toSerialize["abTestID"] = o.AbTestID
	toSerialize["variants"] = o.Variants
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal Timeseries: %w", err)
	}

	return serialized, nil
}

func (o Timeseries) String() string {
	out := ""
	out += fmt.Sprintf("  abTestID=%v\n", o.AbTestID)
	out += fmt.Sprintf("  variants=%v\n", o.Variants)
	return fmt.Sprintf("Timeseries {\n%s}", out)
}
