// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package abtestingV3

import (
	"encoding/json"
	"fmt"
)

// ScheduleABTestsRequest struct for ScheduleABTestsRequest.
type ScheduleABTestsRequest struct {
	// A/B test name.
	Name string `json:"name"`
	// A/B test variants.
	Variants []AddABTestsVariant `json:"variants"`
	// A/B test metrics involved in the test. Only these metrics will be considered when calculating results.
	Metrics       []CreateMetric       `json:"metrics"`
	Configuration *ABTestConfiguration `json:"configuration,omitempty"`
	// Date and time when the A/B test is scheduled to start, in RFC 3339 format.
	ScheduledAt string `json:"scheduledAt"`
	// End date and time of the A/B test, in RFC 3339 format.
	EndAt string `json:"endAt"`
}

type ScheduleABTestsRequestOption func(f *ScheduleABTestsRequest)

func WithScheduleABTestsRequestConfiguration(val ABTestConfiguration) ScheduleABTestsRequestOption {
	return func(f *ScheduleABTestsRequest) {
		f.Configuration = &val
	}
}

// NewScheduleABTestsRequest instantiates a new ScheduleABTestsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewScheduleABTestsRequest(name string, variants []AddABTestsVariant, metrics []CreateMetric, scheduledAt string, endAt string, opts ...ScheduleABTestsRequestOption) *ScheduleABTestsRequest {
	this := &ScheduleABTestsRequest{}
	this.Name = name
	this.Variants = variants
	this.Metrics = metrics
	this.ScheduledAt = scheduledAt
	this.EndAt = endAt
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptyScheduleABTestsRequest return a pointer to an empty ScheduleABTestsRequest object.
func NewEmptyScheduleABTestsRequest() *ScheduleABTestsRequest {
	return &ScheduleABTestsRequest{}
}

// GetName returns the Name field value.
func (o *ScheduleABTestsRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ScheduleABTestsRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value.
func (o *ScheduleABTestsRequest) SetName(v string) *ScheduleABTestsRequest {
	o.Name = v
	return o
}

// GetVariants returns the Variants field value.
func (o *ScheduleABTestsRequest) GetVariants() []AddABTestsVariant {
	if o == nil {
		var ret []AddABTestsVariant
		return ret
	}

	return o.Variants
}

// GetVariantsOk returns a tuple with the Variants field value
// and a boolean to check if the value has been set.
func (o *ScheduleABTestsRequest) GetVariantsOk() ([]AddABTestsVariant, bool) {
	if o == nil {
		return nil, false
	}
	return o.Variants, true
}

// SetVariants sets field value.
func (o *ScheduleABTestsRequest) SetVariants(v []AddABTestsVariant) *ScheduleABTestsRequest {
	o.Variants = v
	return o
}

// GetMetrics returns the Metrics field value.
func (o *ScheduleABTestsRequest) GetMetrics() []CreateMetric {
	if o == nil {
		var ret []CreateMetric
		return ret
	}

	return o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value
// and a boolean to check if the value has been set.
func (o *ScheduleABTestsRequest) GetMetricsOk() ([]CreateMetric, bool) {
	if o == nil {
		return nil, false
	}
	return o.Metrics, true
}

// SetMetrics sets field value.
func (o *ScheduleABTestsRequest) SetMetrics(v []CreateMetric) *ScheduleABTestsRequest {
	o.Metrics = v
	return o
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *ScheduleABTestsRequest) GetConfiguration() ABTestConfiguration {
	if o == nil || o.Configuration == nil {
		var ret ABTestConfiguration
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleABTestsRequest) GetConfigurationOk() (*ABTestConfiguration, bool) {
	if o == nil || o.Configuration == nil {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *ScheduleABTestsRequest) HasConfiguration() bool {
	if o != nil && o.Configuration != nil {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given ABTestConfiguration and assigns it to the Configuration field.
func (o *ScheduleABTestsRequest) SetConfiguration(v *ABTestConfiguration) *ScheduleABTestsRequest {
	o.Configuration = v
	return o
}

// GetScheduledAt returns the ScheduledAt field value.
func (o *ScheduleABTestsRequest) GetScheduledAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScheduledAt
}

// GetScheduledAtOk returns a tuple with the ScheduledAt field value
// and a boolean to check if the value has been set.
func (o *ScheduleABTestsRequest) GetScheduledAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScheduledAt, true
}

// SetScheduledAt sets field value.
func (o *ScheduleABTestsRequest) SetScheduledAt(v string) *ScheduleABTestsRequest {
	o.ScheduledAt = v
	return o
}

// GetEndAt returns the EndAt field value.
func (o *ScheduleABTestsRequest) GetEndAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndAt
}

// GetEndAtOk returns a tuple with the EndAt field value
// and a boolean to check if the value has been set.
func (o *ScheduleABTestsRequest) GetEndAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndAt, true
}

// SetEndAt sets field value.
func (o *ScheduleABTestsRequest) SetEndAt(v string) *ScheduleABTestsRequest {
	o.EndAt = v
	return o
}

func (o ScheduleABTestsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	toSerialize["name"] = o.Name
	toSerialize["variants"] = o.Variants
	toSerialize["metrics"] = o.Metrics
	if o.Configuration != nil {
		toSerialize["configuration"] = o.Configuration
	}
	toSerialize["scheduledAt"] = o.ScheduledAt
	toSerialize["endAt"] = o.EndAt
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal ScheduleABTestsRequest: %w", err)
	}

	return serialized, nil
}

func (o ScheduleABTestsRequest) String() string {
	out := ""
	out += fmt.Sprintf("  name=%v\n", o.Name)
	out += fmt.Sprintf("  variants=%v\n", o.Variants)
	out += fmt.Sprintf("  metrics=%v\n", o.Metrics)
	out += fmt.Sprintf("  configuration=%v\n", o.Configuration)
	out += fmt.Sprintf("  scheduledAt=%v\n", o.ScheduledAt)
	out += fmt.Sprintf("  endAt=%v\n", o.EndAt)
	return fmt.Sprintf("ScheduleABTestsRequest {\n%s}", out)
}
