// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package composition

import (
	"encoding/json"
	"fmt"
)

// DeleteCompositionRuleAction Operation arguments when deleting.
type DeleteCompositionRuleAction struct {
	// Composition rule unique identifier.
	ObjectID string `json:"objectID"`
}

// NewDeleteCompositionRuleAction instantiates a new DeleteCompositionRuleAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewDeleteCompositionRuleAction(objectID string) *DeleteCompositionRuleAction {
	this := &DeleteCompositionRuleAction{}
	this.ObjectID = objectID

	return this
}

// NewEmptyDeleteCompositionRuleAction return a pointer to an empty DeleteCompositionRuleAction object.
func NewEmptyDeleteCompositionRuleAction() *DeleteCompositionRuleAction {
	return &DeleteCompositionRuleAction{}
}

// GetObjectID returns the ObjectID field value.
func (o *DeleteCompositionRuleAction) GetObjectID() string {
	if o == nil {
		var ret string

		return ret
	}

	return o.ObjectID
}

// GetObjectIDOk returns a tuple with the ObjectID field value
// and a boolean to check if the value has been set.
func (o *DeleteCompositionRuleAction) GetObjectIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return &o.ObjectID, true
}

// SetObjectID sets field value.
func (o *DeleteCompositionRuleAction) SetObjectID(v string) *DeleteCompositionRuleAction {
	o.ObjectID = v

	return o
}

func (o DeleteCompositionRuleAction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	toSerialize["objectID"] = o.ObjectID

	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal DeleteCompositionRuleAction: %w", err)
	}

	return serialized, nil
}

func (o DeleteCompositionRuleAction) String() string {
	out := ""
	out += fmt.Sprintf("  objectID=%v\n", o.ObjectID)

	return fmt.Sprintf("DeleteCompositionRuleAction {\n%s}", out)
}
