// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package composition

import (
	"encoding/json"
	"fmt"
)

// Main struct for Main.
type Main struct {
	Source CompositionSource `json:"source"`
}

// NewMain instantiates a new Main object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewMain(source CompositionSource) *Main {
	this := &Main{}
	this.Source = source
	return this
}

// NewEmptyMain return a pointer to an empty Main object.
func NewEmptyMain() *Main {
	return &Main{}
}

// GetSource returns the Source field value.
func (o *Main) GetSource() CompositionSource {
	if o == nil {
		var ret CompositionSource
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *Main) GetSourceOk() (*CompositionSource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value.
func (o *Main) SetSource(v *CompositionSource) *Main {
	o.Source = *v
	return o
}

func (o Main) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	toSerialize["source"] = o.Source
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal Main: %w", err)
	}

	return serialized, nil
}

func (o Main) String() string {
	out := ""
	out += fmt.Sprintf("  source=%v\n", o.Source)
	return fmt.Sprintf("Main {\n%s}", out)
}
