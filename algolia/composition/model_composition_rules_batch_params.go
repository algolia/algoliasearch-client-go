// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package composition

import (
	"encoding/json"
	"fmt"
)

// CompositionRulesBatchParams Composition rules batch parameters.
type CompositionRulesBatchParams struct {
	Requests []RulesMultipleBatchRequest `json:"requests,omitempty"`
}

type CompositionRulesBatchParamsOption func(f *CompositionRulesBatchParams)

func WithCompositionRulesBatchParamsRequests(val []RulesMultipleBatchRequest) CompositionRulesBatchParamsOption {
	return func(f *CompositionRulesBatchParams) {
		f.Requests = val
	}
}

// NewCompositionRulesBatchParams instantiates a new CompositionRulesBatchParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewCompositionRulesBatchParams(opts ...CompositionRulesBatchParamsOption) *CompositionRulesBatchParams {
	this := &CompositionRulesBatchParams{}
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptyCompositionRulesBatchParams return a pointer to an empty CompositionRulesBatchParams object.
func NewEmptyCompositionRulesBatchParams() *CompositionRulesBatchParams {
	return &CompositionRulesBatchParams{}
}

// GetRequests returns the Requests field value if set, zero value otherwise.
func (o *CompositionRulesBatchParams) GetRequests() []RulesMultipleBatchRequest {
	if o == nil || o.Requests == nil {
		var ret []RulesMultipleBatchRequest
		return ret
	}
	return o.Requests
}

// GetRequestsOk returns a tuple with the Requests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompositionRulesBatchParams) GetRequestsOk() ([]RulesMultipleBatchRequest, bool) {
	if o == nil || o.Requests == nil {
		return nil, false
	}
	return o.Requests, true
}

// HasRequests returns a boolean if a field has been set.
func (o *CompositionRulesBatchParams) HasRequests() bool {
	if o != nil && o.Requests != nil {
		return true
	}

	return false
}

// SetRequests gets a reference to the given []RulesMultipleBatchRequest and assigns it to the Requests field.
func (o *CompositionRulesBatchParams) SetRequests(v []RulesMultipleBatchRequest) *CompositionRulesBatchParams {
	o.Requests = v
	return o
}

func (o CompositionRulesBatchParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.Requests != nil {
		toSerialize["requests"] = o.Requests
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal CompositionRulesBatchParams: %w", err)
	}

	return serialized, nil
}

func (o CompositionRulesBatchParams) String() string {
	out := ""
	out += fmt.Sprintf("  requests=%v\n", o.Requests)
	return fmt.Sprintf("CompositionRulesBatchParams {\n%s}", out)
}
