// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package composition

import (
	"encoding/json"
	"fmt"
)

// CompositionSource struct for CompositionSource.
type CompositionSource struct {
	Search CompositionSourceSearch `json:"search"`
}

// NewCompositionSource instantiates a new CompositionSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewCompositionSource(search CompositionSourceSearch) *CompositionSource {
	this := &CompositionSource{}
	this.Search = search

	return this
}

// NewEmptyCompositionSource return a pointer to an empty CompositionSource object.
func NewEmptyCompositionSource() *CompositionSource {
	return &CompositionSource{}
}

// GetSearch returns the Search field value.
func (o *CompositionSource) GetSearch() CompositionSourceSearch {
	if o == nil {
		var ret CompositionSourceSearch

		return ret
	}

	return o.Search
}

// GetSearchOk returns a tuple with the Search field value
// and a boolean to check if the value has been set.
func (o *CompositionSource) GetSearchOk() (*CompositionSourceSearch, bool) {
	if o == nil {
		return nil, false
	}

	return &o.Search, true
}

// SetSearch sets field value.
func (o *CompositionSource) SetSearch(v *CompositionSourceSearch) *CompositionSource {
	o.Search = *v

	return o
}

func (o CompositionSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	toSerialize["search"] = o.Search

	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal CompositionSource: %w", err)
	}

	return serialized, nil
}

func (o CompositionSource) String() string {
	out := ""
	out += fmt.Sprintf("  search=%v\n", o.Search)

	return fmt.Sprintf("CompositionSource {\n%s}", out)
}
