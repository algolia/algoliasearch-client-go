// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package composition

import (
	"encoding/json"
	"fmt"
)

// ExternalSource Injected items will originate from externally provided objectIDs (that must exist in the index) given at runtime in the run request payload.
type ExternalSource struct {
	External External `json:"external"`
}

// NewExternalSource instantiates a new ExternalSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewExternalSource(external External) *ExternalSource {
	this := &ExternalSource{}
	this.External = external

	return this
}

// NewEmptyExternalSource return a pointer to an empty ExternalSource object.
func NewEmptyExternalSource() *ExternalSource {
	return &ExternalSource{}
}

// GetExternal returns the External field value.
func (o *ExternalSource) GetExternal() External {
	if o == nil {
		var ret External

		return ret
	}

	return o.External
}

// GetExternalOk returns a tuple with the External field value
// and a boolean to check if the value has been set.
func (o *ExternalSource) GetExternalOk() (*External, bool) {
	if o == nil {
		return nil, false
	}

	return &o.External, true
}

// SetExternal sets field value.
func (o *ExternalSource) SetExternal(v *External) *ExternalSource {
	o.External = *v

	return o
}

func (o ExternalSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	toSerialize["external"] = o.External

	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal ExternalSource: %w", err)
	}

	return serialized, nil
}

func (o ExternalSource) String() string {
	out := ""
	out += fmt.Sprintf("  external=%v\n", o.External)

	return fmt.Sprintf("ExternalSource {\n%s}", out)
}
