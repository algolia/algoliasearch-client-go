// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package composition

import (
	"encoding/json"
	"fmt"
)

// RulesMultipleBatchRequest struct for RulesMultipleBatchRequest.
type RulesMultipleBatchRequest struct {
	Action Action                      `json:"action"`
	Body   RulesBatchCompositionAction `json:"body"`
}

// NewRulesMultipleBatchRequest instantiates a new RulesMultipleBatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewRulesMultipleBatchRequest(action Action, body RulesBatchCompositionAction) *RulesMultipleBatchRequest {
	this := &RulesMultipleBatchRequest{}
	this.Action = action
	this.Body = body

	return this
}

// NewEmptyRulesMultipleBatchRequest return a pointer to an empty RulesMultipleBatchRequest object.
func NewEmptyRulesMultipleBatchRequest() *RulesMultipleBatchRequest {
	return &RulesMultipleBatchRequest{}
}

// GetAction returns the Action field value.
func (o *RulesMultipleBatchRequest) GetAction() Action {
	if o == nil {
		var ret Action

		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *RulesMultipleBatchRequest) GetActionOk() (*Action, bool) {
	if o == nil {
		return nil, false
	}

	return &o.Action, true
}

// SetAction sets field value.
func (o *RulesMultipleBatchRequest) SetAction(v Action) *RulesMultipleBatchRequest {
	o.Action = v

	return o
}

// GetBody returns the Body field value.
func (o *RulesMultipleBatchRequest) GetBody() RulesBatchCompositionAction {
	if o == nil {
		var ret RulesBatchCompositionAction

		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *RulesMultipleBatchRequest) GetBodyOk() (*RulesBatchCompositionAction, bool) {
	if o == nil {
		return nil, false
	}

	return &o.Body, true
}

// SetBody sets field value.
func (o *RulesMultipleBatchRequest) SetBody(v *RulesBatchCompositionAction) *RulesMultipleBatchRequest {
	o.Body = *v

	return o
}

func (o RulesMultipleBatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	toSerialize["action"] = o.Action
	toSerialize["body"] = o.Body

	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal RulesMultipleBatchRequest: %w", err)
	}

	return serialized, nil
}

func (o RulesMultipleBatchRequest) String() string {
	out := ""
	out += fmt.Sprintf("  action=%v\n", o.Action)
	out += fmt.Sprintf("  body=%v\n", o.Body)

	return fmt.Sprintf("RulesMultipleBatchRequest {\n%s}", out)
}
