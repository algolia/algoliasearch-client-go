// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package composition

import (
	"encoding/json"
	"fmt"
)

// HitRankingInfo struct for HitRankingInfo.
type HitRankingInfo struct {
	// Whether a filter matched the query.
	Filters *int32 `json:"filters,omitempty"`
	// Position of the first matched word in the best matching attribute of the record.
	FirstMatchedWord int32 `json:"firstMatchedWord"`
	// Distance between the geo location in the search query and the best matching geo location in the record, divided by the geo precision (in meters).
	GeoDistance int32 `json:"geoDistance"`
	// Precision used when computing the geo distance, in meters.
	GeoPrecision       *int32              `json:"geoPrecision,omitempty"`
	MatchedGeoLocation *MatchedGeoLocation `json:"matchedGeoLocation,omitempty"`
	Personalization    *Personalization    `json:"personalization,omitempty"`
	// Number of exactly matched words.
	NbExactWords int32 `json:"nbExactWords"`
	// Number of typos encountered when matching the record.
	NbTypos int32 `json:"nbTypos"`
	// Whether the record was promoted by a rule.
	Promoted *bool `json:"promoted,omitempty"`
	// Number of words between multiple matches in the query plus 1. For single word queries, `proximityDistance` is 0.
	ProximityDistance *int32 `json:"proximityDistance,omitempty"`
	// Overall ranking of the record, expressed as a single integer. This attribute is internal.
	UserScore int32 `json:"userScore"`
	// Number of matched words.
	Words *int32 `json:"words,omitempty"`
	// Whether the record is re-ranked.
	PromotedByReRanking *bool                                `json:"promotedByReRanking,omitempty"`
	Composed            *map[string]CompositionIdRankingInfo `json:"composed,omitempty"`
}

type HitRankingInfoOption func(f *HitRankingInfo)

func WithHitRankingInfoFilters(val int32) HitRankingInfoOption {
	return func(f *HitRankingInfo) {
		f.Filters = &val
	}
}

func WithHitRankingInfoGeoPrecision(val int32) HitRankingInfoOption {
	return func(f *HitRankingInfo) {
		f.GeoPrecision = &val
	}
}

func WithHitRankingInfoMatchedGeoLocation(val MatchedGeoLocation) HitRankingInfoOption {
	return func(f *HitRankingInfo) {
		f.MatchedGeoLocation = &val
	}
}

func WithHitRankingInfoPersonalization(val Personalization) HitRankingInfoOption {
	return func(f *HitRankingInfo) {
		f.Personalization = &val
	}
}

func WithHitRankingInfoPromoted(val bool) HitRankingInfoOption {
	return func(f *HitRankingInfo) {
		f.Promoted = &val
	}
}

func WithHitRankingInfoProximityDistance(val int32) HitRankingInfoOption {
	return func(f *HitRankingInfo) {
		f.ProximityDistance = &val
	}
}

func WithHitRankingInfoWords(val int32) HitRankingInfoOption {
	return func(f *HitRankingInfo) {
		f.Words = &val
	}
}

func WithHitRankingInfoPromotedByReRanking(val bool) HitRankingInfoOption {
	return func(f *HitRankingInfo) {
		f.PromotedByReRanking = &val
	}
}

func WithHitRankingInfoComposed(val map[string]CompositionIdRankingInfo) HitRankingInfoOption {
	return func(f *HitRankingInfo) {
		f.Composed = &val
	}
}

// NewHitRankingInfo instantiates a new HitRankingInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewHitRankingInfo(firstMatchedWord int32, geoDistance int32, nbExactWords int32, nbTypos int32, userScore int32, opts ...HitRankingInfoOption) *HitRankingInfo {
	this := &HitRankingInfo{}
	this.FirstMatchedWord = firstMatchedWord
	this.GeoDistance = geoDistance
	this.NbExactWords = nbExactWords
	this.NbTypos = nbTypos
	this.UserScore = userScore
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptyHitRankingInfo return a pointer to an empty HitRankingInfo object.
func NewEmptyHitRankingInfo() *HitRankingInfo {
	return &HitRankingInfo{}
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *HitRankingInfo) GetFilters() int32 {
	if o == nil || o.Filters == nil {
		var ret int32
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HitRankingInfo) GetFiltersOk() (*int32, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *HitRankingInfo) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given int32 and assigns it to the Filters field.
func (o *HitRankingInfo) SetFilters(v int32) *HitRankingInfo {
	o.Filters = &v
	return o
}

// GetFirstMatchedWord returns the FirstMatchedWord field value.
func (o *HitRankingInfo) GetFirstMatchedWord() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FirstMatchedWord
}

// GetFirstMatchedWordOk returns a tuple with the FirstMatchedWord field value
// and a boolean to check if the value has been set.
func (o *HitRankingInfo) GetFirstMatchedWordOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstMatchedWord, true
}

// SetFirstMatchedWord sets field value.
func (o *HitRankingInfo) SetFirstMatchedWord(v int32) *HitRankingInfo {
	o.FirstMatchedWord = v
	return o
}

// GetGeoDistance returns the GeoDistance field value.
func (o *HitRankingInfo) GetGeoDistance() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.GeoDistance
}

// GetGeoDistanceOk returns a tuple with the GeoDistance field value
// and a boolean to check if the value has been set.
func (o *HitRankingInfo) GetGeoDistanceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GeoDistance, true
}

// SetGeoDistance sets field value.
func (o *HitRankingInfo) SetGeoDistance(v int32) *HitRankingInfo {
	o.GeoDistance = v
	return o
}

// GetGeoPrecision returns the GeoPrecision field value if set, zero value otherwise.
func (o *HitRankingInfo) GetGeoPrecision() int32 {
	if o == nil || o.GeoPrecision == nil {
		var ret int32
		return ret
	}
	return *o.GeoPrecision
}

// GetGeoPrecisionOk returns a tuple with the GeoPrecision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HitRankingInfo) GetGeoPrecisionOk() (*int32, bool) {
	if o == nil || o.GeoPrecision == nil {
		return nil, false
	}
	return o.GeoPrecision, true
}

// HasGeoPrecision returns a boolean if a field has been set.
func (o *HitRankingInfo) HasGeoPrecision() bool {
	if o != nil && o.GeoPrecision != nil {
		return true
	}

	return false
}

// SetGeoPrecision gets a reference to the given int32 and assigns it to the GeoPrecision field.
func (o *HitRankingInfo) SetGeoPrecision(v int32) *HitRankingInfo {
	o.GeoPrecision = &v
	return o
}

// GetMatchedGeoLocation returns the MatchedGeoLocation field value if set, zero value otherwise.
func (o *HitRankingInfo) GetMatchedGeoLocation() MatchedGeoLocation {
	if o == nil || o.MatchedGeoLocation == nil {
		var ret MatchedGeoLocation
		return ret
	}
	return *o.MatchedGeoLocation
}

// GetMatchedGeoLocationOk returns a tuple with the MatchedGeoLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HitRankingInfo) GetMatchedGeoLocationOk() (*MatchedGeoLocation, bool) {
	if o == nil || o.MatchedGeoLocation == nil {
		return nil, false
	}
	return o.MatchedGeoLocation, true
}

// HasMatchedGeoLocation returns a boolean if a field has been set.
func (o *HitRankingInfo) HasMatchedGeoLocation() bool {
	if o != nil && o.MatchedGeoLocation != nil {
		return true
	}

	return false
}

// SetMatchedGeoLocation gets a reference to the given MatchedGeoLocation and assigns it to the MatchedGeoLocation field.
func (o *HitRankingInfo) SetMatchedGeoLocation(v *MatchedGeoLocation) *HitRankingInfo {
	o.MatchedGeoLocation = v
	return o
}

// GetPersonalization returns the Personalization field value if set, zero value otherwise.
func (o *HitRankingInfo) GetPersonalization() Personalization {
	if o == nil || o.Personalization == nil {
		var ret Personalization
		return ret
	}
	return *o.Personalization
}

// GetPersonalizationOk returns a tuple with the Personalization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HitRankingInfo) GetPersonalizationOk() (*Personalization, bool) {
	if o == nil || o.Personalization == nil {
		return nil, false
	}
	return o.Personalization, true
}

// HasPersonalization returns a boolean if a field has been set.
func (o *HitRankingInfo) HasPersonalization() bool {
	if o != nil && o.Personalization != nil {
		return true
	}

	return false
}

// SetPersonalization gets a reference to the given Personalization and assigns it to the Personalization field.
func (o *HitRankingInfo) SetPersonalization(v *Personalization) *HitRankingInfo {
	o.Personalization = v
	return o
}

// GetNbExactWords returns the NbExactWords field value.
func (o *HitRankingInfo) GetNbExactWords() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NbExactWords
}

// GetNbExactWordsOk returns a tuple with the NbExactWords field value
// and a boolean to check if the value has been set.
func (o *HitRankingInfo) GetNbExactWordsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NbExactWords, true
}

// SetNbExactWords sets field value.
func (o *HitRankingInfo) SetNbExactWords(v int32) *HitRankingInfo {
	o.NbExactWords = v
	return o
}

// GetNbTypos returns the NbTypos field value.
func (o *HitRankingInfo) GetNbTypos() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NbTypos
}

// GetNbTyposOk returns a tuple with the NbTypos field value
// and a boolean to check if the value has been set.
func (o *HitRankingInfo) GetNbTyposOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NbTypos, true
}

// SetNbTypos sets field value.
func (o *HitRankingInfo) SetNbTypos(v int32) *HitRankingInfo {
	o.NbTypos = v
	return o
}

// GetPromoted returns the Promoted field value if set, zero value otherwise.
func (o *HitRankingInfo) GetPromoted() bool {
	if o == nil || o.Promoted == nil {
		var ret bool
		return ret
	}
	return *o.Promoted
}

// GetPromotedOk returns a tuple with the Promoted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HitRankingInfo) GetPromotedOk() (*bool, bool) {
	if o == nil || o.Promoted == nil {
		return nil, false
	}
	return o.Promoted, true
}

// HasPromoted returns a boolean if a field has been set.
func (o *HitRankingInfo) HasPromoted() bool {
	if o != nil && o.Promoted != nil {
		return true
	}

	return false
}

// SetPromoted gets a reference to the given bool and assigns it to the Promoted field.
func (o *HitRankingInfo) SetPromoted(v bool) *HitRankingInfo {
	o.Promoted = &v
	return o
}

// GetProximityDistance returns the ProximityDistance field value if set, zero value otherwise.
func (o *HitRankingInfo) GetProximityDistance() int32 {
	if o == nil || o.ProximityDistance == nil {
		var ret int32
		return ret
	}
	return *o.ProximityDistance
}

// GetProximityDistanceOk returns a tuple with the ProximityDistance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HitRankingInfo) GetProximityDistanceOk() (*int32, bool) {
	if o == nil || o.ProximityDistance == nil {
		return nil, false
	}
	return o.ProximityDistance, true
}

// HasProximityDistance returns a boolean if a field has been set.
func (o *HitRankingInfo) HasProximityDistance() bool {
	if o != nil && o.ProximityDistance != nil {
		return true
	}

	return false
}

// SetProximityDistance gets a reference to the given int32 and assigns it to the ProximityDistance field.
func (o *HitRankingInfo) SetProximityDistance(v int32) *HitRankingInfo {
	o.ProximityDistance = &v
	return o
}

// GetUserScore returns the UserScore field value.
func (o *HitRankingInfo) GetUserScore() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserScore
}

// GetUserScoreOk returns a tuple with the UserScore field value
// and a boolean to check if the value has been set.
func (o *HitRankingInfo) GetUserScoreOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserScore, true
}

// SetUserScore sets field value.
func (o *HitRankingInfo) SetUserScore(v int32) *HitRankingInfo {
	o.UserScore = v
	return o
}

// GetWords returns the Words field value if set, zero value otherwise.
func (o *HitRankingInfo) GetWords() int32 {
	if o == nil || o.Words == nil {
		var ret int32
		return ret
	}
	return *o.Words
}

// GetWordsOk returns a tuple with the Words field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HitRankingInfo) GetWordsOk() (*int32, bool) {
	if o == nil || o.Words == nil {
		return nil, false
	}
	return o.Words, true
}

// HasWords returns a boolean if a field has been set.
func (o *HitRankingInfo) HasWords() bool {
	if o != nil && o.Words != nil {
		return true
	}

	return false
}

// SetWords gets a reference to the given int32 and assigns it to the Words field.
func (o *HitRankingInfo) SetWords(v int32) *HitRankingInfo {
	o.Words = &v
	return o
}

// GetPromotedByReRanking returns the PromotedByReRanking field value if set, zero value otherwise.
func (o *HitRankingInfo) GetPromotedByReRanking() bool {
	if o == nil || o.PromotedByReRanking == nil {
		var ret bool
		return ret
	}
	return *o.PromotedByReRanking
}

// GetPromotedByReRankingOk returns a tuple with the PromotedByReRanking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HitRankingInfo) GetPromotedByReRankingOk() (*bool, bool) {
	if o == nil || o.PromotedByReRanking == nil {
		return nil, false
	}
	return o.PromotedByReRanking, true
}

// HasPromotedByReRanking returns a boolean if a field has been set.
func (o *HitRankingInfo) HasPromotedByReRanking() bool {
	if o != nil && o.PromotedByReRanking != nil {
		return true
	}

	return false
}

// SetPromotedByReRanking gets a reference to the given bool and assigns it to the PromotedByReRanking field.
func (o *HitRankingInfo) SetPromotedByReRanking(v bool) *HitRankingInfo {
	o.PromotedByReRanking = &v
	return o
}

// GetComposed returns the Composed field value if set, zero value otherwise.
func (o *HitRankingInfo) GetComposed() map[string]CompositionIdRankingInfo {
	if o == nil || o.Composed == nil {
		var ret map[string]CompositionIdRankingInfo
		return ret
	}
	return *o.Composed
}

// GetComposedOk returns a tuple with the Composed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HitRankingInfo) GetComposedOk() (*map[string]CompositionIdRankingInfo, bool) {
	if o == nil || o.Composed == nil {
		return nil, false
	}
	return o.Composed, true
}

// HasComposed returns a boolean if a field has been set.
func (o *HitRankingInfo) HasComposed() bool {
	if o != nil && o.Composed != nil {
		return true
	}

	return false
}

// SetComposed gets a reference to the given map[string]CompositionIdRankingInfo and assigns it to the Composed field.
func (o *HitRankingInfo) SetComposed(v map[string]CompositionIdRankingInfo) *HitRankingInfo {
	o.Composed = &v
	return o
}

func (o HitRankingInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.Filters != nil {
		toSerialize["filters"] = o.Filters
	}
	if true {
		toSerialize["firstMatchedWord"] = o.FirstMatchedWord
	}
	if true {
		toSerialize["geoDistance"] = o.GeoDistance
	}
	if o.GeoPrecision != nil {
		toSerialize["geoPrecision"] = o.GeoPrecision
	}
	if o.MatchedGeoLocation != nil {
		toSerialize["matchedGeoLocation"] = o.MatchedGeoLocation
	}
	if o.Personalization != nil {
		toSerialize["personalization"] = o.Personalization
	}
	if true {
		toSerialize["nbExactWords"] = o.NbExactWords
	}
	if true {
		toSerialize["nbTypos"] = o.NbTypos
	}
	if o.Promoted != nil {
		toSerialize["promoted"] = o.Promoted
	}
	if o.ProximityDistance != nil {
		toSerialize["proximityDistance"] = o.ProximityDistance
	}
	if true {
		toSerialize["userScore"] = o.UserScore
	}
	if o.Words != nil {
		toSerialize["words"] = o.Words
	}
	if o.PromotedByReRanking != nil {
		toSerialize["promotedByReRanking"] = o.PromotedByReRanking
	}
	if o.Composed != nil {
		toSerialize["composed"] = o.Composed
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal HitRankingInfo: %w", err)
	}

	return serialized, nil
}

func (o HitRankingInfo) String() string {
	out := ""
	out += fmt.Sprintf("  filters=%v\n", o.Filters)
	out += fmt.Sprintf("  firstMatchedWord=%v\n", o.FirstMatchedWord)
	out += fmt.Sprintf("  geoDistance=%v\n", o.GeoDistance)
	out += fmt.Sprintf("  geoPrecision=%v\n", o.GeoPrecision)
	out += fmt.Sprintf("  matchedGeoLocation=%v\n", o.MatchedGeoLocation)
	out += fmt.Sprintf("  personalization=%v\n", o.Personalization)
	out += fmt.Sprintf("  nbExactWords=%v\n", o.NbExactWords)
	out += fmt.Sprintf("  nbTypos=%v\n", o.NbTypos)
	out += fmt.Sprintf("  promoted=%v\n", o.Promoted)
	out += fmt.Sprintf("  proximityDistance=%v\n", o.ProximityDistance)
	out += fmt.Sprintf("  userScore=%v\n", o.UserScore)
	out += fmt.Sprintf("  words=%v\n", o.Words)
	out += fmt.Sprintf("  promotedByReRanking=%v\n", o.PromotedByReRanking)
	out += fmt.Sprintf("  composed=%v\n", o.Composed)
	return fmt.Sprintf("HitRankingInfo {\n%s}", out)
}
