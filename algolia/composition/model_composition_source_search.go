// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package composition

import (
	"encoding/json"
	"fmt"
)

// CompositionSourceSearch struct for CompositionSourceSearch.
type CompositionSourceSearch struct {
	// Composition Main Index name.
	Index  string                        `json:"index"`
	Params *MainInjectionQueryParameters `json:"params,omitempty"`
}

type CompositionSourceSearchOption func(f *CompositionSourceSearch)

func WithCompositionSourceSearchParams(val MainInjectionQueryParameters) CompositionSourceSearchOption {
	return func(f *CompositionSourceSearch) {
		f.Params = &val
	}
}

// NewCompositionSourceSearch instantiates a new CompositionSourceSearch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewCompositionSourceSearch(index string, opts ...CompositionSourceSearchOption) *CompositionSourceSearch {
	this := &CompositionSourceSearch{}

	this.Index = index
	for _, opt := range opts {
		opt(this)
	}

	return this
}

// NewEmptyCompositionSourceSearch return a pointer to an empty CompositionSourceSearch object.
func NewEmptyCompositionSourceSearch() *CompositionSourceSearch {
	return &CompositionSourceSearch{}
}

// GetIndex returns the Index field value.
func (o *CompositionSourceSearch) GetIndex() string {
	if o == nil {
		var ret string

		return ret
	}

	return o.Index
}

// GetIndexOk returns a tuple with the Index field value
// and a boolean to check if the value has been set.
func (o *CompositionSourceSearch) GetIndexOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return &o.Index, true
}

// SetIndex sets field value.
func (o *CompositionSourceSearch) SetIndex(v string) *CompositionSourceSearch {
	o.Index = v

	return o
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *CompositionSourceSearch) GetParams() MainInjectionQueryParameters {
	if o == nil || o.Params == nil {
		var ret MainInjectionQueryParameters

		return ret
	}

	return *o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompositionSourceSearch) GetParamsOk() (*MainInjectionQueryParameters, bool) {
	if o == nil || o.Params == nil {
		return nil, false
	}

	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *CompositionSourceSearch) HasParams() bool {
	if o != nil && o.Params != nil {
		return true
	}

	return false
}

// SetParams gets a reference to the given MainInjectionQueryParameters and assigns it to the Params field.
func (o *CompositionSourceSearch) SetParams(v *MainInjectionQueryParameters) *CompositionSourceSearch {
	o.Params = v

	return o
}

func (o CompositionSourceSearch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}

	toSerialize["index"] = o.Index
	if o.Params != nil {
		toSerialize["params"] = o.Params
	}

	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal CompositionSourceSearch: %w", err)
	}

	return serialized, nil
}

func (o CompositionSourceSearch) String() string {
	out := ""
	out += fmt.Sprintf("  index=%v\n", o.Index)
	out += fmt.Sprintf("  params=%v\n", o.Params)

	return fmt.Sprintf("CompositionSourceSearch {\n%s}", out)
}
