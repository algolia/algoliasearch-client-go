// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package composition

import (
	"encoding/json"
	"fmt"
)

// Deduplication Deduplication configures the methods used to resolve duplicate items between main search results and injected group results.
type Deduplication struct {
	Positioning DedupPositioning `json:"positioning"`
}

// NewDeduplication instantiates a new Deduplication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewDeduplication(positioning DedupPositioning) *Deduplication {
	this := &Deduplication{}
	this.Positioning = positioning

	return this
}

// NewEmptyDeduplication return a pointer to an empty Deduplication object.
func NewEmptyDeduplication() *Deduplication {
	return &Deduplication{}
}

// GetPositioning returns the Positioning field value.
func (o *Deduplication) GetPositioning() DedupPositioning {
	if o == nil {
		var ret DedupPositioning

		return ret
	}

	return o.Positioning
}

// GetPositioningOk returns a tuple with the Positioning field value
// and a boolean to check if the value has been set.
func (o *Deduplication) GetPositioningOk() (*DedupPositioning, bool) {
	if o == nil {
		return nil, false
	}

	return &o.Positioning, true
}

// SetPositioning sets field value.
func (o *Deduplication) SetPositioning(v DedupPositioning) *Deduplication {
	o.Positioning = v

	return o
}

func (o Deduplication) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	toSerialize["positioning"] = o.Positioning

	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal Deduplication: %w", err)
	}

	return serialized, nil
}

func (o Deduplication) String() string {
	out := ""
	out += fmt.Sprintf("  positioning=%v\n", o.Positioning)

	return fmt.Sprintf("Deduplication {\n%s}", out)
}
