// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package composition

import (
	"encoding/json"
	"fmt"
)

// TaskIDResponse struct for TaskIDResponse.
type TaskIDResponse struct {
	// Unique identifier of a task.  A successful API response means that a task was added to a queue. It might not run immediately. You can check the task's progress with the [`task` operation](#tag/Indices/operation/getTask) and this `taskID`.
	TaskID int64 `json:"taskID"`
}

// NewTaskIDResponse instantiates a new TaskIDResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewTaskIDResponse(taskID int64) *TaskIDResponse {
	this := &TaskIDResponse{}
	this.TaskID = taskID
	return this
}

// NewEmptyTaskIDResponse return a pointer to an empty TaskIDResponse object.
func NewEmptyTaskIDResponse() *TaskIDResponse {
	return &TaskIDResponse{}
}

// GetTaskID returns the TaskID field value.
func (o *TaskIDResponse) GetTaskID() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TaskID
}

// GetTaskIDOk returns a tuple with the TaskID field value
// and a boolean to check if the value has been set.
func (o *TaskIDResponse) GetTaskIDOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TaskID, true
}

// SetTaskID sets field value.
func (o *TaskIDResponse) SetTaskID(v int64) *TaskIDResponse {
	o.TaskID = v
	return o
}

func (o TaskIDResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	toSerialize["taskID"] = o.TaskID
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal TaskIDResponse: %w", err)
	}

	return serialized, nil
}

func (o TaskIDResponse) String() string {
	out := ""
	out += fmt.Sprintf("  taskID=%v\n", o.TaskID)
	return fmt.Sprintf("TaskIDResponse {\n%s}", out)
}
