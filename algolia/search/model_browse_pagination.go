// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package search

import (
	"encoding/json"
	"fmt"
)

// BrowsePagination struct for BrowsePagination.
type BrowsePagination struct {
	// Page of search results to retrieve.
	Page *int32 `json:"page,omitempty"`
	// Number of results (hits).
	NbHits *int32 `json:"nbHits,omitempty"`
	// Number of pages of results.
	NbPages *int32 `json:"nbPages,omitempty"`
	// Number of hits per page.
	HitsPerPage *int32 `json:"hitsPerPage,omitempty"`
}

type BrowsePaginationOption func(f *BrowsePagination)

func WithBrowsePaginationPage(val int32) BrowsePaginationOption {
	return func(f *BrowsePagination) {
		f.Page = &val
	}
}

func WithBrowsePaginationNbHits(val int32) BrowsePaginationOption {
	return func(f *BrowsePagination) {
		f.NbHits = &val
	}
}

func WithBrowsePaginationNbPages(val int32) BrowsePaginationOption {
	return func(f *BrowsePagination) {
		f.NbPages = &val
	}
}

func WithBrowsePaginationHitsPerPage(val int32) BrowsePaginationOption {
	return func(f *BrowsePagination) {
		f.HitsPerPage = &val
	}
}

// NewBrowsePagination instantiates a new BrowsePagination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewBrowsePagination(opts ...BrowsePaginationOption) *BrowsePagination {
	this := &BrowsePagination{}
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptyBrowsePagination return a pointer to an empty BrowsePagination object.
func NewEmptyBrowsePagination() *BrowsePagination {
	return &BrowsePagination{}
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *BrowsePagination) GetPage() int32 {
	if o == nil || o.Page == nil {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowsePagination) GetPageOk() (*int32, bool) {
	if o == nil || o.Page == nil {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *BrowsePagination) HasPage() bool {
	if o != nil && o.Page != nil {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *BrowsePagination) SetPage(v int32) *BrowsePagination {
	o.Page = &v
	return o
}

// GetNbHits returns the NbHits field value if set, zero value otherwise.
func (o *BrowsePagination) GetNbHits() int32 {
	if o == nil || o.NbHits == nil {
		var ret int32
		return ret
	}
	return *o.NbHits
}

// GetNbHitsOk returns a tuple with the NbHits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowsePagination) GetNbHitsOk() (*int32, bool) {
	if o == nil || o.NbHits == nil {
		return nil, false
	}
	return o.NbHits, true
}

// HasNbHits returns a boolean if a field has been set.
func (o *BrowsePagination) HasNbHits() bool {
	if o != nil && o.NbHits != nil {
		return true
	}

	return false
}

// SetNbHits gets a reference to the given int32 and assigns it to the NbHits field.
func (o *BrowsePagination) SetNbHits(v int32) *BrowsePagination {
	o.NbHits = &v
	return o
}

// GetNbPages returns the NbPages field value if set, zero value otherwise.
func (o *BrowsePagination) GetNbPages() int32 {
	if o == nil || o.NbPages == nil {
		var ret int32
		return ret
	}
	return *o.NbPages
}

// GetNbPagesOk returns a tuple with the NbPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowsePagination) GetNbPagesOk() (*int32, bool) {
	if o == nil || o.NbPages == nil {
		return nil, false
	}
	return o.NbPages, true
}

// HasNbPages returns a boolean if a field has been set.
func (o *BrowsePagination) HasNbPages() bool {
	if o != nil && o.NbPages != nil {
		return true
	}

	return false
}

// SetNbPages gets a reference to the given int32 and assigns it to the NbPages field.
func (o *BrowsePagination) SetNbPages(v int32) *BrowsePagination {
	o.NbPages = &v
	return o
}

// GetHitsPerPage returns the HitsPerPage field value if set, zero value otherwise.
func (o *BrowsePagination) GetHitsPerPage() int32 {
	if o == nil || o.HitsPerPage == nil {
		var ret int32
		return ret
	}
	return *o.HitsPerPage
}

// GetHitsPerPageOk returns a tuple with the HitsPerPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BrowsePagination) GetHitsPerPageOk() (*int32, bool) {
	if o == nil || o.HitsPerPage == nil {
		return nil, false
	}
	return o.HitsPerPage, true
}

// HasHitsPerPage returns a boolean if a field has been set.
func (o *BrowsePagination) HasHitsPerPage() bool {
	if o != nil && o.HitsPerPage != nil {
		return true
	}

	return false
}

// SetHitsPerPage gets a reference to the given int32 and assigns it to the HitsPerPage field.
func (o *BrowsePagination) SetHitsPerPage(v int32) *BrowsePagination {
	o.HitsPerPage = &v
	return o
}

func (o BrowsePagination) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.Page != nil {
		toSerialize["page"] = o.Page
	}
	if o.NbHits != nil {
		toSerialize["nbHits"] = o.NbHits
	}
	if o.NbPages != nil {
		toSerialize["nbPages"] = o.NbPages
	}
	if o.HitsPerPage != nil {
		toSerialize["hitsPerPage"] = o.HitsPerPage
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal BrowsePagination: %w", err)
	}

	return serialized, nil
}

func (o BrowsePagination) String() string {
	out := ""
	out += fmt.Sprintf("  page=%v\n", o.Page)
	out += fmt.Sprintf("  nbHits=%v\n", o.NbHits)
	out += fmt.Sprintf("  nbPages=%v\n", o.NbPages)
	out += fmt.Sprintf("  hitsPerPage=%v\n", o.HitsPerPage)
	return fmt.Sprintf("BrowsePagination {\n%s}", out)
}
