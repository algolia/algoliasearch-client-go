// File generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation.
package search

import (
	"encoding/json"
	"fmt"
)

// SearchForFacetValuesRequest struct for SearchForFacetValuesRequest.
type SearchForFacetValuesRequest struct {
	// Search parameters as a URL-encoded query string.
	Params *string `json:"params,omitempty"`
	// Text to search inside the facet's values.
	FacetQuery *string `json:"facetQuery,omitempty"`
	// Maximum number of facet hits to return when [searching for facet values](https://www.algolia.com/doc/guides/managing-results/refine-results/faceting/#search-for-facet-values).
	MaxFacetHits *int32 `json:"maxFacetHits,omitempty"`
}

type SearchForFacetValuesRequestOption func(f *SearchForFacetValuesRequest)

func WithSearchForFacetValuesRequestParams(val string) SearchForFacetValuesRequestOption {
	return func(f *SearchForFacetValuesRequest) {
		f.Params = &val
	}
}

func WithSearchForFacetValuesRequestFacetQuery(val string) SearchForFacetValuesRequestOption {
	return func(f *SearchForFacetValuesRequest) {
		f.FacetQuery = &val
	}
}

func WithSearchForFacetValuesRequestMaxFacetHits(val int32) SearchForFacetValuesRequestOption {
	return func(f *SearchForFacetValuesRequest) {
		f.MaxFacetHits = &val
	}
}

// NewSearchForFacetValuesRequest instantiates a new SearchForFacetValuesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewSearchForFacetValuesRequest(opts ...SearchForFacetValuesRequestOption) *SearchForFacetValuesRequest {
	this := &SearchForFacetValuesRequest{}
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptySearchForFacetValuesRequest return a pointer to an empty SearchForFacetValuesRequest object.
func NewEmptySearchForFacetValuesRequest() *SearchForFacetValuesRequest {
	return &SearchForFacetValuesRequest{}
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *SearchForFacetValuesRequest) GetParams() string {
	if o == nil || o.Params == nil {
		var ret string
		return ret
	}
	return *o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchForFacetValuesRequest) GetParamsOk() (*string, bool) {
	if o == nil || o.Params == nil {
		return nil, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *SearchForFacetValuesRequest) HasParams() bool {
	if o != nil && o.Params != nil {
		return true
	}

	return false
}

// SetParams gets a reference to the given string and assigns it to the Params field.
func (o *SearchForFacetValuesRequest) SetParams(v string) *SearchForFacetValuesRequest {
	o.Params = &v
	return o
}

// GetFacetQuery returns the FacetQuery field value if set, zero value otherwise.
func (o *SearchForFacetValuesRequest) GetFacetQuery() string {
	if o == nil || o.FacetQuery == nil {
		var ret string
		return ret
	}
	return *o.FacetQuery
}

// GetFacetQueryOk returns a tuple with the FacetQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchForFacetValuesRequest) GetFacetQueryOk() (*string, bool) {
	if o == nil || o.FacetQuery == nil {
		return nil, false
	}
	return o.FacetQuery, true
}

// HasFacetQuery returns a boolean if a field has been set.
func (o *SearchForFacetValuesRequest) HasFacetQuery() bool {
	if o != nil && o.FacetQuery != nil {
		return true
	}

	return false
}

// SetFacetQuery gets a reference to the given string and assigns it to the FacetQuery field.
func (o *SearchForFacetValuesRequest) SetFacetQuery(v string) *SearchForFacetValuesRequest {
	o.FacetQuery = &v
	return o
}

// GetMaxFacetHits returns the MaxFacetHits field value if set, zero value otherwise.
func (o *SearchForFacetValuesRequest) GetMaxFacetHits() int32 {
	if o == nil || o.MaxFacetHits == nil {
		var ret int32
		return ret
	}
	return *o.MaxFacetHits
}

// GetMaxFacetHitsOk returns a tuple with the MaxFacetHits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchForFacetValuesRequest) GetMaxFacetHitsOk() (*int32, bool) {
	if o == nil || o.MaxFacetHits == nil {
		return nil, false
	}
	return o.MaxFacetHits, true
}

// HasMaxFacetHits returns a boolean if a field has been set.
func (o *SearchForFacetValuesRequest) HasMaxFacetHits() bool {
	if o != nil && o.MaxFacetHits != nil {
		return true
	}

	return false
}

// SetMaxFacetHits gets a reference to the given int32 and assigns it to the MaxFacetHits field.
func (o *SearchForFacetValuesRequest) SetMaxFacetHits(v int32) *SearchForFacetValuesRequest {
	o.MaxFacetHits = &v
	return o
}

func (o SearchForFacetValuesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.Params != nil {
		toSerialize["params"] = o.Params
	}
	if o.FacetQuery != nil {
		toSerialize["facetQuery"] = o.FacetQuery
	}
	if o.MaxFacetHits != nil {
		toSerialize["maxFacetHits"] = o.MaxFacetHits
	}
	return json.Marshal(toSerialize)
}

func (o SearchForFacetValuesRequest) String() string {
	out := ""
	out += fmt.Sprintf("  params=%v\n", o.Params)
	out += fmt.Sprintf("  facetQuery=%v\n", o.FacetQuery)
	out += fmt.Sprintf("  maxFacetHits=%v\n", o.MaxFacetHits)
	return fmt.Sprintf("SearchForFacetValuesRequest {\n%s}", out)
}

type NullableSearchForFacetValuesRequest struct {
	value *SearchForFacetValuesRequest
	isSet bool
}

func (v NullableSearchForFacetValuesRequest) Get() *SearchForFacetValuesRequest {
	return v.value
}

func (v *NullableSearchForFacetValuesRequest) Set(val *SearchForFacetValuesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchForFacetValuesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchForFacetValuesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchForFacetValuesRequest(val *SearchForFacetValuesRequest) *NullableSearchForFacetValuesRequest {
	return &NullableSearchForFacetValuesRequest{value: val, isSet: true}
}

func (v NullableSearchForFacetValuesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchForFacetValuesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
