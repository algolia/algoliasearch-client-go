// File generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation.
package search

import (
	"encoding/json"
	"fmt"
)

// Params Additional search parameters.
type Params struct {
	Query                         *ConsequenceQuery      `json:"query,omitempty"`
	AutomaticFacetFilters         *AutomaticFacetFilters `json:"automaticFacetFilters,omitempty"`
	AutomaticOptionalFacetFilters *AutomaticFacetFilters `json:"automaticOptionalFacetFilters,omitempty"`
	RenderingContent              *RenderingContent      `json:"renderingContent,omitempty"`
}

type ParamsOption func(f *Params)

func WithParamsQuery(val ConsequenceQuery) ParamsOption {
	return func(f *Params) {
		f.Query = &val
	}
}

func WithParamsAutomaticFacetFilters(val AutomaticFacetFilters) ParamsOption {
	return func(f *Params) {
		f.AutomaticFacetFilters = &val
	}
}

func WithParamsAutomaticOptionalFacetFilters(val AutomaticFacetFilters) ParamsOption {
	return func(f *Params) {
		f.AutomaticOptionalFacetFilters = &val
	}
}

func WithParamsRenderingContent(val RenderingContent) ParamsOption {
	return func(f *Params) {
		f.RenderingContent = &val
	}
}

// NewParams instantiates a new Params object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewParams(opts ...ParamsOption) *Params {
	this := &Params{}
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptyParams return a pointer to an empty Params object.
func NewEmptyParams() *Params {
	return &Params{}
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *Params) GetQuery() ConsequenceQuery {
	if o == nil || o.Query == nil {
		var ret ConsequenceQuery
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Params) GetQueryOk() (*ConsequenceQuery, bool) {
	if o == nil || o.Query == nil {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *Params) HasQuery() bool {
	if o != nil && o.Query != nil {
		return true
	}

	return false
}

// SetQuery gets a reference to the given ConsequenceQuery and assigns it to the Query field.
func (o *Params) SetQuery(v *ConsequenceQuery) *Params {
	o.Query = v
	return o
}

// GetAutomaticFacetFilters returns the AutomaticFacetFilters field value if set, zero value otherwise.
func (o *Params) GetAutomaticFacetFilters() AutomaticFacetFilters {
	if o == nil || o.AutomaticFacetFilters == nil {
		var ret AutomaticFacetFilters
		return ret
	}
	return *o.AutomaticFacetFilters
}

// GetAutomaticFacetFiltersOk returns a tuple with the AutomaticFacetFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Params) GetAutomaticFacetFiltersOk() (*AutomaticFacetFilters, bool) {
	if o == nil || o.AutomaticFacetFilters == nil {
		return nil, false
	}
	return o.AutomaticFacetFilters, true
}

// HasAutomaticFacetFilters returns a boolean if a field has been set.
func (o *Params) HasAutomaticFacetFilters() bool {
	if o != nil && o.AutomaticFacetFilters != nil {
		return true
	}

	return false
}

// SetAutomaticFacetFilters gets a reference to the given AutomaticFacetFilters and assigns it to the AutomaticFacetFilters field.
func (o *Params) SetAutomaticFacetFilters(v *AutomaticFacetFilters) *Params {
	o.AutomaticFacetFilters = v
	return o
}

// GetAutomaticOptionalFacetFilters returns the AutomaticOptionalFacetFilters field value if set, zero value otherwise.
func (o *Params) GetAutomaticOptionalFacetFilters() AutomaticFacetFilters {
	if o == nil || o.AutomaticOptionalFacetFilters == nil {
		var ret AutomaticFacetFilters
		return ret
	}
	return *o.AutomaticOptionalFacetFilters
}

// GetAutomaticOptionalFacetFiltersOk returns a tuple with the AutomaticOptionalFacetFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Params) GetAutomaticOptionalFacetFiltersOk() (*AutomaticFacetFilters, bool) {
	if o == nil || o.AutomaticOptionalFacetFilters == nil {
		return nil, false
	}
	return o.AutomaticOptionalFacetFilters, true
}

// HasAutomaticOptionalFacetFilters returns a boolean if a field has been set.
func (o *Params) HasAutomaticOptionalFacetFilters() bool {
	if o != nil && o.AutomaticOptionalFacetFilters != nil {
		return true
	}

	return false
}

// SetAutomaticOptionalFacetFilters gets a reference to the given AutomaticFacetFilters and assigns it to the AutomaticOptionalFacetFilters field.
func (o *Params) SetAutomaticOptionalFacetFilters(v *AutomaticFacetFilters) *Params {
	o.AutomaticOptionalFacetFilters = v
	return o
}

// GetRenderingContent returns the RenderingContent field value if set, zero value otherwise.
func (o *Params) GetRenderingContent() RenderingContent {
	if o == nil || o.RenderingContent == nil {
		var ret RenderingContent
		return ret
	}
	return *o.RenderingContent
}

// GetRenderingContentOk returns a tuple with the RenderingContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Params) GetRenderingContentOk() (*RenderingContent, bool) {
	if o == nil || o.RenderingContent == nil {
		return nil, false
	}
	return o.RenderingContent, true
}

// HasRenderingContent returns a boolean if a field has been set.
func (o *Params) HasRenderingContent() bool {
	if o != nil && o.RenderingContent != nil {
		return true
	}

	return false
}

// SetRenderingContent gets a reference to the given RenderingContent and assigns it to the RenderingContent field.
func (o *Params) SetRenderingContent(v *RenderingContent) *Params {
	o.RenderingContent = v
	return o
}

func (o Params) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.Query != nil {
		toSerialize["query"] = o.Query
	}
	if o.AutomaticFacetFilters != nil {
		toSerialize["automaticFacetFilters"] = o.AutomaticFacetFilters
	}
	if o.AutomaticOptionalFacetFilters != nil {
		toSerialize["automaticOptionalFacetFilters"] = o.AutomaticOptionalFacetFilters
	}
	if o.RenderingContent != nil {
		toSerialize["renderingContent"] = o.RenderingContent
	}
	return json.Marshal(toSerialize)
}

func (o Params) String() string {
	out := ""
	out += fmt.Sprintf("  query=%v\n", o.Query)
	out += fmt.Sprintf("  automaticFacetFilters=%v\n", o.AutomaticFacetFilters)
	out += fmt.Sprintf("  automaticOptionalFacetFilters=%v\n", o.AutomaticOptionalFacetFilters)
	out += fmt.Sprintf("  renderingContent=%v\n", o.RenderingContent)
	return fmt.Sprintf("Params {\n%s}", out)
}

type NullableParams struct {
	value *Params
	isSet bool
}

func (v NullableParams) Get() *Params {
	return v.value
}

func (v *NullableParams) Set(val *Params) {
	v.value = val
	v.isSet = true
}

func (v NullableParams) IsSet() bool {
	return v.isSet
}

func (v *NullableParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParams(val *Params) *NullableParams {
	return &NullableParams{value: val, isSet: true}
}

func (v NullableParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
