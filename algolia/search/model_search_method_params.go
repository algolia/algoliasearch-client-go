// File generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation.
package search

import (
	"encoding/json"
	"fmt"
)

// SearchMethodParams struct for SearchMethodParams.
type SearchMethodParams struct {
	Requests []SearchQuery   `json:"requests"`
	Strategy *SearchStrategy `json:"strategy,omitempty"`
}

type SearchMethodParamsOption func(f *SearchMethodParams)

func WithSearchMethodParamsStrategy(val SearchStrategy) SearchMethodParamsOption {
	return func(f *SearchMethodParams) {
		f.Strategy = &val
	}
}

// NewSearchMethodParams instantiates a new SearchMethodParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewSearchMethodParams(requests []SearchQuery, opts ...SearchMethodParamsOption) *SearchMethodParams {
	this := &SearchMethodParams{}
	this.Requests = requests
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptySearchMethodParams return a pointer to an empty SearchMethodParams object.
func NewEmptySearchMethodParams() *SearchMethodParams {
	return &SearchMethodParams{}
}

// GetRequests returns the Requests field value.
func (o *SearchMethodParams) GetRequests() []SearchQuery {
	if o == nil {
		var ret []SearchQuery
		return ret
	}

	return o.Requests
}

// GetRequestsOk returns a tuple with the Requests field value
// and a boolean to check if the value has been set.
func (o *SearchMethodParams) GetRequestsOk() ([]SearchQuery, bool) {
	if o == nil {
		return nil, false
	}
	return o.Requests, true
}

// SetRequests sets field value.
func (o *SearchMethodParams) SetRequests(v []SearchQuery) *SearchMethodParams {
	o.Requests = v
	return o
}

// GetStrategy returns the Strategy field value if set, zero value otherwise.
func (o *SearchMethodParams) GetStrategy() SearchStrategy {
	if o == nil || o.Strategy == nil {
		var ret SearchStrategy
		return ret
	}
	return *o.Strategy
}

// GetStrategyOk returns a tuple with the Strategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchMethodParams) GetStrategyOk() (*SearchStrategy, bool) {
	if o == nil || o.Strategy == nil {
		return nil, false
	}
	return o.Strategy, true
}

// HasStrategy returns a boolean if a field has been set.
func (o *SearchMethodParams) HasStrategy() bool {
	if o != nil && o.Strategy != nil {
		return true
	}

	return false
}

// SetStrategy gets a reference to the given SearchStrategy and assigns it to the Strategy field.
func (o *SearchMethodParams) SetStrategy(v SearchStrategy) *SearchMethodParams {
	o.Strategy = &v
	return o
}

func (o SearchMethodParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["requests"] = o.Requests
	}
	if o.Strategy != nil {
		toSerialize["strategy"] = o.Strategy
	}
	return json.Marshal(toSerialize)
}

func (o SearchMethodParams) String() string {
	out := ""
	out += fmt.Sprintf("  requests=%v\n", o.Requests)
	out += fmt.Sprintf("  strategy=%v\n", o.Strategy)
	return fmt.Sprintf("SearchMethodParams {\n%s}", out)
}

type NullableSearchMethodParams struct {
	value *SearchMethodParams
	isSet bool
}

func (v NullableSearchMethodParams) Get() *SearchMethodParams {
	return v.value
}

func (v *NullableSearchMethodParams) Set(val *SearchMethodParams) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchMethodParams) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchMethodParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchMethodParams(val *SearchMethodParams) *NullableSearchMethodParams {
	return &NullableSearchMethodParams{value: val, isSet: true}
}

func (v NullableSearchMethodParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchMethodParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
