// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package search

import (
	"encoding/json"
	"fmt"
)

// ApiKeyOperation the model 'ApiKeyOperation'.
type ApiKeyOperation string

// List of apiKeyOperation.
const (
	API_KEY_OPERATION_ADD    ApiKeyOperation = "add"
	API_KEY_OPERATION_DELETE ApiKeyOperation = "delete"
	API_KEY_OPERATION_UPDATE ApiKeyOperation = "update"
)

// All allowed values of ApiKeyOperation enum.
var AllowedApiKeyOperationEnumValues = []ApiKeyOperation{
	"add",
	"delete",
	"update",
}

func (v *ApiKeyOperation) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return fmt.Errorf("failed to unmarshal value '%s' for enum 'ApiKeyOperation': %w", string(src), err)
	}
	enumTypeValue := ApiKeyOperation(value)
	for _, existing := range AllowedApiKeyOperationEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ApiKeyOperation", value)
}

// NewApiKeyOperationFromValue returns a pointer to a valid ApiKeyOperation
// for the value passed as argument, or an error if the value passed is not allowed by the enum.
func NewApiKeyOperationFromValue(v string) (*ApiKeyOperation, error) {
	ev := ApiKeyOperation(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ApiKeyOperation: valid values are %v", v, AllowedApiKeyOperationEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise.
func (v ApiKeyOperation) IsValid() bool {
	for _, existing := range AllowedApiKeyOperationEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to apiKeyOperation value.
func (v ApiKeyOperation) Ptr() *ApiKeyOperation {
	return &v
}
