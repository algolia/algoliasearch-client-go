// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package search

import (
	"encoding/json"
	"fmt"
)

// BannerLink link for a banner defined in merchandising studio.
type BannerLink struct {
	Url *string `json:"url,omitempty"`
}

type BannerLinkOption func(f *BannerLink)

func WithBannerLinkUrl(val string) BannerLinkOption {
	return func(f *BannerLink) {
		f.Url = &val
	}
}

// NewBannerLink instantiates a new BannerLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewBannerLink(opts ...BannerLinkOption) *BannerLink {
	this := &BannerLink{}
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptyBannerLink return a pointer to an empty BannerLink object.
func NewEmptyBannerLink() *BannerLink {
	return &BannerLink{}
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *BannerLink) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BannerLink) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *BannerLink) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *BannerLink) SetUrl(v string) *BannerLink {
	o.Url = &v
	return o
}

func (o BannerLink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal BannerLink: %w", err)
	}

	return serialized, nil
}

func (o BannerLink) String() string {
	out := ""
	out += fmt.Sprintf("  url=%v\n", o.Url)
	return fmt.Sprintf("BannerLink {\n%s}", out)
}
