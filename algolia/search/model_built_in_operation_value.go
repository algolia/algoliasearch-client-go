// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package search

import (
	"encoding/json"
	"fmt"
)

// BuiltInOperationValue - struct for BuiltInOperationValue.
type BuiltInOperationValue struct {
	Int32  *int32
	String *string
}

// stringAsBuiltInOperationValue is a convenience function that returns string wrapped in BuiltInOperationValue.
func StringAsBuiltInOperationValue(v string) *BuiltInOperationValue {
	return &BuiltInOperationValue{
		String: &v,
	}
}

// int32AsBuiltInOperationValue is a convenience function that returns int32 wrapped in BuiltInOperationValue.
func Int32AsBuiltInOperationValue(v int32) *BuiltInOperationValue {
	return &BuiltInOperationValue{
		Int32: &v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct.
func (dst *BuiltInOperationValue) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal data into String
	err = newStrictDecoder(data).Decode(&dst.String)
	if err == nil && validateStruct(dst.String) == nil {
		return nil // found the correct type
	} else {
		dst.String = nil
	}
	// try to unmarshal data into Int32
	err = newStrictDecoder(data).Decode(&dst.Int32)
	if err == nil && validateStruct(dst.Int32) == nil {
		return nil // found the correct type
	} else {
		dst.Int32 = nil
	}

	return fmt.Errorf("Data failed to match schemas in oneOf(BuiltInOperationValue)")
}

// Marshal data from the first non-nil pointers in the struct to JSON.
func (src BuiltInOperationValue) MarshalJSON() ([]byte, error) {
	if src.Int32 != nil {
		serialized, err := json.Marshal(&src.Int32)
		if err != nil {
			return nil, fmt.Errorf("failed to unmarshal one of Int32 of BuiltInOperationValue: %w", err)
		}

		return serialized, nil
	}

	if src.String != nil {
		serialized, err := json.Marshal(&src.String)
		if err != nil {
			return nil, fmt.Errorf("failed to unmarshal one of String of BuiltInOperationValue: %w", err)
		}

		return serialized, nil
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance.
func (obj BuiltInOperationValue) GetActualInstance() any {
	if obj.Int32 != nil {
		return *obj.Int32
	}

	if obj.String != nil {
		return *obj.String
	}

	// all schemas are nil
	return nil
}
