// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package search

import (
	"encoding/json"
	"fmt"
)

// UpdatedRuleResponse struct for UpdatedRuleResponse
type UpdatedRuleResponse struct {
	// Unique identifier of the object.
	ObjectID string `json:"objectID"`
	// Date of last update (ISO-8601 format).
	UpdatedAt string `json:"updatedAt"`
	// taskID of the task to wait for.
	TaskID int64 `json:"taskID"`
}

// NewUpdatedRuleResponse instantiates a new UpdatedRuleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatedRuleResponse(objectID string, updatedAt string, taskID int64) *UpdatedRuleResponse {
	this := &UpdatedRuleResponse{}
	this.ObjectID = objectID
	this.UpdatedAt = updatedAt
	this.TaskID = taskID
	return this
}

// NewUpdatedRuleResponseWithDefaults instantiates a new UpdatedRuleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatedRuleResponseWithDefaults() *UpdatedRuleResponse {
	this := &UpdatedRuleResponse{}
	return this
}

// GetObjectID returns the ObjectID field value
func (o *UpdatedRuleResponse) GetObjectID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectID
}

// GetObjectIDOk returns a tuple with the ObjectID field value
// and a boolean to check if the value has been set.
func (o *UpdatedRuleResponse) GetObjectIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectID, true
}

// SetObjectID sets field value
func (o *UpdatedRuleResponse) SetObjectID(v string) {
	o.ObjectID = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *UpdatedRuleResponse) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *UpdatedRuleResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *UpdatedRuleResponse) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetTaskID returns the TaskID field value
func (o *UpdatedRuleResponse) GetTaskID() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TaskID
}

// GetTaskIDOk returns a tuple with the TaskID field value
// and a boolean to check if the value has been set.
func (o *UpdatedRuleResponse) GetTaskIDOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TaskID, true
}

// SetTaskID sets field value
func (o *UpdatedRuleResponse) SetTaskID(v int64) {
	o.TaskID = v
}

func (o UpdatedRuleResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["objectID"] = o.ObjectID
	}
	if true {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if true {
		toSerialize["taskID"] = o.TaskID
	}
	return json.Marshal(toSerialize)
}

func (o UpdatedRuleResponse) String() string {
	out := "UpdatedRuleResponse {\n"
	out += fmt.Sprintf("  objectID=%v\n", o.ObjectID)
	out += fmt.Sprintf("  updatedAt=%v\n", o.UpdatedAt)
	out += fmt.Sprintf("  taskID=%v\n", o.TaskID)
	out += "}"
	return out
}

type NullableUpdatedRuleResponse struct {
	value *UpdatedRuleResponse
	isSet bool
}

func (v NullableUpdatedRuleResponse) Get() *UpdatedRuleResponse {
	return v.value
}

func (v *NullableUpdatedRuleResponse) Set(val *UpdatedRuleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatedRuleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatedRuleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatedRuleResponse(val *UpdatedRuleResponse) *NullableUpdatedRuleResponse {
	return &NullableUpdatedRuleResponse{value: val, isSet: true}
}

func (v NullableUpdatedRuleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatedRuleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
