// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package search

import (
	"encoding/json"
	"fmt"
)

// GetObjectsResponse struct for GetObjectsResponse.
type GetObjectsResponse struct {
	// Retrieved records.
	Results []map[string]any `json:"results,omitempty"`
}

type GetObjectsResponseOption func(f *GetObjectsResponse)

func WithGetObjectsResponseResults(val []map[string]any) GetObjectsResponseOption {
	return func(f *GetObjectsResponse) {
		f.Results = val
	}
}

// NewGetObjectsResponse instantiates a new GetObjectsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewGetObjectsResponse(opts ...GetObjectsResponseOption) *GetObjectsResponse {
	this := &GetObjectsResponse{}
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewEmptyGetObjectsResponse return a pointer to an empty GetObjectsResponse object.
func NewEmptyGetObjectsResponse() *GetObjectsResponse {
	return &GetObjectsResponse{}
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *GetObjectsResponse) GetResults() []map[string]any {
	if o == nil || o.Results == nil {
		var ret []map[string]any
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetObjectsResponse) GetResultsOk() ([]map[string]any, bool) {
	if o == nil || o.Results == nil {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *GetObjectsResponse) HasResults() bool {
	if o != nil && o.Results != nil {
		return true
	}

	return false
}

// SetResults gets a reference to the given []map[string]any and assigns it to the Results field.
func (o *GetObjectsResponse) SetResults(v []map[string]any) *GetObjectsResponse {
	o.Results = v
	return o
}

func (o GetObjectsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.Results != nil {
		toSerialize["results"] = o.Results
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal GetObjectsResponse: %w", err)
	}

	return serialized, nil
}

func (o GetObjectsResponse) String() string {
	out := ""
	out += fmt.Sprintf("  results=%v\n", o.Results)
	return fmt.Sprintf("GetObjectsResponse {\n%s}", out)
}
