// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package search

import (
	"encoding/json"
	"fmt"
)

// GetDictionarySettingsResponse struct for GetDictionarySettingsResponse.
type GetDictionarySettingsResponse struct {
	DisableStandardEntries StandardEntries `json:"disableStandardEntries"`
}

// NewGetDictionarySettingsResponse instantiates a new GetDictionarySettingsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewGetDictionarySettingsResponse(disableStandardEntries StandardEntries) *GetDictionarySettingsResponse {
	this := &GetDictionarySettingsResponse{}
	this.DisableStandardEntries = disableStandardEntries
	return this
}

// NewEmptyGetDictionarySettingsResponse return a pointer to an empty GetDictionarySettingsResponse object.
func NewEmptyGetDictionarySettingsResponse() *GetDictionarySettingsResponse {
	return &GetDictionarySettingsResponse{}
}

// GetDisableStandardEntries returns the DisableStandardEntries field value.
func (o *GetDictionarySettingsResponse) GetDisableStandardEntries() StandardEntries {
	if o == nil {
		var ret StandardEntries
		return ret
	}

	return o.DisableStandardEntries
}

// GetDisableStandardEntriesOk returns a tuple with the DisableStandardEntries field value
// and a boolean to check if the value has been set.
func (o *GetDictionarySettingsResponse) GetDisableStandardEntriesOk() (*StandardEntries, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisableStandardEntries, true
}

// SetDisableStandardEntries sets field value.
func (o *GetDictionarySettingsResponse) SetDisableStandardEntries(v *StandardEntries) *GetDictionarySettingsResponse {
	o.DisableStandardEntries = *v
	return o
}

func (o GetDictionarySettingsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["disableStandardEntries"] = o.DisableStandardEntries
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal GetDictionarySettingsResponse: %w", err)
	}

	return serialized, nil
}

func (o GetDictionarySettingsResponse) String() string {
	out := ""
	out += fmt.Sprintf("  disableStandardEntries=%v\n", o.DisableStandardEntries)
	return fmt.Sprintf("GetDictionarySettingsResponse {\n%s}", out)
}
