// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package search

import (
	"encoding/json"
	"fmt"
)

// ReplaceSourceResponse struct for ReplaceSourceResponse
type ReplaceSourceResponse struct {
	// Date of last update (ISO-8601 format).
	UpdatedAt string `json:"updatedAt"`
}

// NewReplaceSourceResponse instantiates a new ReplaceSourceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplaceSourceResponse(updatedAt string) *ReplaceSourceResponse {
	this := &ReplaceSourceResponse{}
	this.UpdatedAt = updatedAt
	return this
}

// NewReplaceSourceResponseWithDefaults instantiates a new ReplaceSourceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplaceSourceResponseWithDefaults() *ReplaceSourceResponse {
	this := &ReplaceSourceResponse{}
	return this
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ReplaceSourceResponse) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ReplaceSourceResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ReplaceSourceResponse) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

func (o ReplaceSourceResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

func (o ReplaceSourceResponse) String() string {
	out := "ReplaceSourceResponse {\n"
	out += fmt.Sprintf("  updatedAt=%v\n", o.UpdatedAt)
	out += "}"
	return out
}

type NullableReplaceSourceResponse struct {
	value *ReplaceSourceResponse
	isSet bool
}

func (v NullableReplaceSourceResponse) Get() *ReplaceSourceResponse {
	return v.value
}

func (v *NullableReplaceSourceResponse) Set(val *ReplaceSourceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReplaceSourceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReplaceSourceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplaceSourceResponse(val *ReplaceSourceResponse) *NullableReplaceSourceResponse {
	return &NullableReplaceSourceResponse{value: val, isSet: true}
}

func (v NullableReplaceSourceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplaceSourceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
