// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package search

import (
	"encoding/json"
	"fmt"
)

// BooleanString the model 'BooleanString'.
type BooleanString string

// List of booleanString.
const (
	BOOLEAN_STRING_TRUE  BooleanString = "true"
	BOOLEAN_STRING_FALSE BooleanString = "false"
)

// All allowed values of BooleanString enum.
var AllowedBooleanStringEnumValues = []BooleanString{
	"true",
	"false",
}

func (v *BooleanString) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return fmt.Errorf("failed to unmarshal value '%s' for enum 'BooleanString': %w", string(src), err)
	}
	enumTypeValue := BooleanString(value)
	for _, existing := range AllowedBooleanStringEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid BooleanString", value)
}

// NewBooleanStringFromValue returns a pointer to a valid BooleanString
// for the value passed as argument, or an error if the value passed is not allowed by the enum.
func NewBooleanStringFromValue(v string) (*BooleanString, error) {
	ev := BooleanString(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for BooleanString: valid values are %v", v, AllowedBooleanStringEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise.
func (v BooleanString) IsValid() bool {
	for _, existing := range AllowedBooleanStringEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to booleanString value.
func (v BooleanString) Ptr() *BooleanString {
	return &v
}
