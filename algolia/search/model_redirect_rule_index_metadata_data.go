// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package search

import (
	"encoding/json"
	"fmt"
)

// RedirectRuleIndexMetadataData Data for the redirect rule.
type RedirectRuleIndexMetadataData struct {
	RuleObjectID string `json:"ruleObjectID" validate:"required"`
}

// NewRedirectRuleIndexMetadataData instantiates a new RedirectRuleIndexMetadataData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRedirectRuleIndexMetadataData(ruleObjectID string) *RedirectRuleIndexMetadataData {
	this := &RedirectRuleIndexMetadataData{}
	this.RuleObjectID = ruleObjectID
	return this
}

// NewRedirectRuleIndexMetadataDataWithDefaults instantiates a new RedirectRuleIndexMetadataData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRedirectRuleIndexMetadataDataWithDefaults() *RedirectRuleIndexMetadataData {
	this := &RedirectRuleIndexMetadataData{}
	return this
}

// GetRuleObjectID returns the RuleObjectID field value
func (o *RedirectRuleIndexMetadataData) GetRuleObjectID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RuleObjectID
}

// GetRuleObjectIDOk returns a tuple with the RuleObjectID field value
// and a boolean to check if the value has been set.
func (o *RedirectRuleIndexMetadataData) GetRuleObjectIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuleObjectID, true
}

// SetRuleObjectID sets field value
func (o *RedirectRuleIndexMetadataData) SetRuleObjectID(v string) {
	o.RuleObjectID = v
}

func (o RedirectRuleIndexMetadataData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["ruleObjectID"] = o.RuleObjectID
	}
	return json.Marshal(toSerialize)
}

func (o RedirectRuleIndexMetadataData) String() string {
	out := ""
	out += fmt.Sprintf("  ruleObjectID=%v\n", o.RuleObjectID)
	return fmt.Sprintf("RedirectRuleIndexMetadataData {\n%s}", out)
}

type NullableRedirectRuleIndexMetadataData struct {
	value *RedirectRuleIndexMetadataData
	isSet bool
}

func (v NullableRedirectRuleIndexMetadataData) Get() *RedirectRuleIndexMetadataData {
	return v.value
}

func (v *NullableRedirectRuleIndexMetadataData) Set(val *RedirectRuleIndexMetadataData) {
	v.value = val
	v.isSet = true
}

func (v NullableRedirectRuleIndexMetadataData) IsSet() bool {
	return v.isSet
}

func (v *NullableRedirectRuleIndexMetadataData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRedirectRuleIndexMetadataData(val *RedirectRuleIndexMetadataData) *NullableRedirectRuleIndexMetadataData {
	return &NullableRedirectRuleIndexMetadataData{value: val, isSet: true}
}

func (v NullableRedirectRuleIndexMetadataData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRedirectRuleIndexMetadataData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
