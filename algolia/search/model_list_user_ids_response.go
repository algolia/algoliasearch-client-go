// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package search

import (
	"encoding/json"
	"fmt"
)

// ListUserIdsResponse UserIDs data.
type ListUserIdsResponse struct {
	// List of userIDs.
	UserIDs []UserId `json:"userIDs"`
}

// NewListUserIdsResponse instantiates a new ListUserIdsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListUserIdsResponse(userIDs []UserId) *ListUserIdsResponse {
	this := &ListUserIdsResponse{}
	this.UserIDs = userIDs
	return this
}

// NewListUserIdsResponseWithDefaults instantiates a new ListUserIdsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListUserIdsResponseWithDefaults() *ListUserIdsResponse {
	this := &ListUserIdsResponse{}
	return this
}

// GetUserIDs returns the UserIDs field value
func (o *ListUserIdsResponse) GetUserIDs() []UserId {
	if o == nil {
		var ret []UserId
		return ret
	}

	return o.UserIDs
}

// GetUserIDsOk returns a tuple with the UserIDs field value
// and a boolean to check if the value has been set.
func (o *ListUserIdsResponse) GetUserIDsOk() ([]UserId, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserIDs, true
}

// SetUserIDs sets field value
func (o *ListUserIdsResponse) SetUserIDs(v []UserId) {
	o.UserIDs = v
}

func (o ListUserIdsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["userIDs"] = o.UserIDs
	}
	return json.Marshal(toSerialize)
}

func (o ListUserIdsResponse) String() string {
	out := ""
	out += fmt.Sprintf("  userIDs=%v\n", o.UserIDs)
	return fmt.Sprintf("ListUserIdsResponse {\n%s}", out)
}

type NullableListUserIdsResponse struct {
	value *ListUserIdsResponse
	isSet bool
}

func (v NullableListUserIdsResponse) Get() *ListUserIdsResponse {
	return v.value
}

func (v *NullableListUserIdsResponse) Set(val *ListUserIdsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListUserIdsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListUserIdsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListUserIdsResponse(val *ListUserIdsResponse) *NullableListUserIdsResponse {
	return &NullableListUserIdsResponse{value: val, isSet: true}
}

func (v NullableListUserIdsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListUserIdsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
