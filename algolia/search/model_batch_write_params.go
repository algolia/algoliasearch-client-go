// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package search

import (
	"encoding/json"
	"fmt"
)

// BatchWriteParams Batch parameters.
type BatchWriteParams struct {
	Requests []BatchRequest `json:"requests"`
}

// NewBatchWriteParams instantiates a new BatchWriteParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewBatchWriteParams(requests []BatchRequest) *BatchWriteParams {
	this := &BatchWriteParams{}
	this.Requests = requests
	return this
}

// NewEmptyBatchWriteParams return a pointer to an empty BatchWriteParams object.
func NewEmptyBatchWriteParams() *BatchWriteParams {
	return &BatchWriteParams{}
}

// GetRequests returns the Requests field value.
func (o *BatchWriteParams) GetRequests() []BatchRequest {
	if o == nil {
		var ret []BatchRequest
		return ret
	}

	return o.Requests
}

// GetRequestsOk returns a tuple with the Requests field value
// and a boolean to check if the value has been set.
func (o *BatchWriteParams) GetRequestsOk() ([]BatchRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Requests, true
}

// SetRequests sets field value.
func (o *BatchWriteParams) SetRequests(v []BatchRequest) *BatchWriteParams {
	o.Requests = v
	return o
}

func (o BatchWriteParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["requests"] = o.Requests
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal BatchWriteParams: %w", err)
	}

	return serialized, nil
}

func (o BatchWriteParams) String() string {
	out := ""
	out += fmt.Sprintf("  requests=%v\n", o.Requests)
	return fmt.Sprintf("BatchWriteParams {\n%s}", out)
}
