// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package search

import (
	"encoding/json"
	"fmt"
)

// SearchResponses struct for SearchResponses.
type SearchResponses struct {
	Results []SearchResult `json:"results"`
}

// NewSearchResponses instantiates a new SearchResponses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed.
func NewSearchResponses(results []SearchResult) *SearchResponses {
	this := &SearchResponses{}
	this.Results = results
	return this
}

// NewEmptySearchResponses return a pointer to an empty SearchResponses object.
func NewEmptySearchResponses() *SearchResponses {
	return &SearchResponses{}
}

// GetResults returns the Results field value.
func (o *SearchResponses) GetResults() []SearchResult {
	if o == nil {
		var ret []SearchResult
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *SearchResponses) GetResultsOk() ([]SearchResult, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value.
func (o *SearchResponses) SetResults(v []SearchResult) *SearchResponses {
	o.Results = v
	return o
}

func (o SearchResponses) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["results"] = o.Results
	}
	serialized, err := json.Marshal(toSerialize)
	if err != nil {
		return nil, fmt.Errorf("failed to marshal SearchResponses: %w", err)
	}

	return serialized, nil
}

func (o SearchResponses) String() string {
	out := ""
	out += fmt.Sprintf("  results=%v\n", o.Results)
	return fmt.Sprintf("SearchResponses {\n%s}", out)
}
