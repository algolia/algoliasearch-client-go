// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package search

import (
	"encoding/json"
	"fmt"
)

// SearchResponses struct for SearchResponses
type SearchResponses struct {
	Results []SearchResponse `json:"results"`
}

// NewSearchResponses instantiates a new SearchResponses object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchResponses(results []SearchResponse) *SearchResponses {
	this := &SearchResponses{}
	this.Results = results
	return this
}

// NewSearchResponsesWithDefaults instantiates a new SearchResponses object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchResponsesWithDefaults() *SearchResponses {
	this := &SearchResponses{}
	return this
}

// GetResults returns the Results field value
func (o *SearchResponses) GetResults() []SearchResponse {
	if o == nil {
		var ret []SearchResponse
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *SearchResponses) GetResultsOk() ([]SearchResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *SearchResponses) SetResults(v []SearchResponse) {
	o.Results = v
}

func (o SearchResponses) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["results"] = o.Results
	}
	return json.Marshal(toSerialize)
}

func (o SearchResponses) String() string {
	out := "SearchResponses {\n"
	out += fmt.Sprintf("  results=%v\n", o.Results)
	out += "}"
	return out
}

type NullableSearchResponses struct {
	value *SearchResponses
	isSet bool
}

func (v NullableSearchResponses) Get() *SearchResponses {
	return v.value
}

func (v *NullableSearchResponses) Set(val *SearchResponses) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchResponses) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchResponses) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchResponses(val *SearchResponses) *NullableSearchResponses {
	return &NullableSearchResponses{value: val, isSet: true}
}

func (v NullableSearchResponses) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchResponses) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
