// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package predict

import (
	"encoding/json"
	"fmt"
)

// PreviousPageTokenParam struct for PreviousPageTokenParam
type PreviousPageTokenParam struct {
	// The token is used to navigate backward in the user list. To navigate from the current user list to the previous page, the API generates the previous page token and it sends the token in the response, beside the current user list. NOTE: This body param cannot be used with `nextPageToken` at the same time.
	PreviousPageToken *string `json:"previousPageToken,omitempty"`
}

type PreviousPageTokenParamOption func(f *PreviousPageTokenParam)

func WithPreviousPageTokenParamPreviousPageToken(val string) PreviousPageTokenParamOption {
	return func(f *PreviousPageTokenParam) {
		f.PreviousPageToken = &val
	}
}

// NewPreviousPageTokenParam instantiates a new PreviousPageTokenParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPreviousPageTokenParam(opts ...PreviousPageTokenParamOption) *PreviousPageTokenParam {
	this := &PreviousPageTokenParam{}
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewPreviousPageTokenParamWithDefaults instantiates a new PreviousPageTokenParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPreviousPageTokenParamWithDefaults() *PreviousPageTokenParam {
	this := &PreviousPageTokenParam{}
	return this
}

// GetPreviousPageToken returns the PreviousPageToken field value if set, zero value otherwise.
func (o *PreviousPageTokenParam) GetPreviousPageToken() string {
	if o == nil || o.PreviousPageToken == nil {
		var ret string
		return ret
	}
	return *o.PreviousPageToken
}

// GetPreviousPageTokenOk returns a tuple with the PreviousPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviousPageTokenParam) GetPreviousPageTokenOk() (*string, bool) {
	if o == nil || o.PreviousPageToken == nil {
		return nil, false
	}
	return o.PreviousPageToken, true
}

// HasPreviousPageToken returns a boolean if a field has been set.
func (o *PreviousPageTokenParam) HasPreviousPageToken() bool {
	if o != nil && o.PreviousPageToken != nil {
		return true
	}

	return false
}

// SetPreviousPageToken gets a reference to the given string and assigns it to the PreviousPageToken field.
func (o *PreviousPageTokenParam) SetPreviousPageToken(v string) {
	o.PreviousPageToken = &v
}

func (o PreviousPageTokenParam) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.PreviousPageToken != nil {
		toSerialize["previousPageToken"] = o.PreviousPageToken
	}
	return json.Marshal(toSerialize)
}

func (o PreviousPageTokenParam) String() string {
	out := "PreviousPageTokenParam {\n"
	out += fmt.Sprintf("  previousPageToken=%v\n", o.PreviousPageToken)
	out += "}"
	return out
}

type NullablePreviousPageTokenParam struct {
	value *PreviousPageTokenParam
	isSet bool
}

func (v NullablePreviousPageTokenParam) Get() *PreviousPageTokenParam {
	return v.value
}

func (v *NullablePreviousPageTokenParam) Set(val *PreviousPageTokenParam) {
	v.value = val
	v.isSet = true
}

func (v NullablePreviousPageTokenParam) IsSet() bool {
	return v.isSet
}

func (v *NullablePreviousPageTokenParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePreviousPageTokenParam(val *PreviousPageTokenParam) *NullablePreviousPageTokenParam {
	return &NullablePreviousPageTokenParam{value: val, isSet: true}
}

func (v NullablePreviousPageTokenParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePreviousPageTokenParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
