// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package predict

import (
	"encoding/json"
	"fmt"
)

// ModelAttributes struct for ModelAttributes
type ModelAttributes struct {
	Name   string   `json:"name"`
	Values []string `json:"values,omitempty"`
}

type ModelAttributesOption func(f *ModelAttributes)

func WithModelAttributesValues(val []string) ModelAttributesOption {
	return func(f *ModelAttributes) {
		f.Values = val
	}
}

// NewModelAttributes instantiates a new ModelAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAttributes(name string, opts ...ModelAttributesOption) *ModelAttributes {
	this := &ModelAttributes{}
	this.Name = name
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewModelAttributesWithDefaults instantiates a new ModelAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAttributesWithDefaults() *ModelAttributes {
	this := &ModelAttributes{}
	return this
}

// GetName returns the Name field value
func (o *ModelAttributes) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ModelAttributes) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ModelAttributes) SetName(v string) {
	o.Name = v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *ModelAttributes) GetValues() []string {
	if o == nil || o.Values == nil {
		var ret []string
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelAttributes) GetValuesOk() ([]string, bool) {
	if o == nil || o.Values == nil {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *ModelAttributes) HasValues() bool {
	if o != nil && o.Values != nil {
		return true
	}

	return false
}

// SetValues gets a reference to the given []string and assigns it to the Values field.
func (o *ModelAttributes) SetValues(v []string) {
	o.Values = v
}

func (o ModelAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}
	return json.Marshal(toSerialize)
}

func (o ModelAttributes) String() string {
	out := "ModelAttributes {\n"
	out += fmt.Sprintf("  name=%v\n", o.Name)
	out += fmt.Sprintf("  values=%v\n", o.Values)
	out += "}"
	return out
}

type NullableModelAttributes struct {
	value *ModelAttributes
	isSet bool
}

func (v NullableModelAttributes) Get() *ModelAttributes {
	return v.value
}

func (v *NullableModelAttributes) Set(val *ModelAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAttributes(val *ModelAttributes) *NullableModelAttributes {
	return &NullableModelAttributes{value: val, isSet: true}
}

func (v NullableModelAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
