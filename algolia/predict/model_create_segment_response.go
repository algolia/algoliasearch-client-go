// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package predict

import (
	"encoding/json"
	"fmt"
)

// CreateSegmentResponse struct for CreateSegmentResponse
type CreateSegmentResponse struct {
	// The ID of the segment.
	SegmentID string `json:"segmentID" validate:"required"`
	// The approximate number of users that matched the segment conditions when it was created, last updated, or when model inference last ran.
	Size *float32 `json:"size,omitempty"`
	// The date and time at which the segment was updated (RFC3339).
	UpdatedAt string `json:"updatedAt" validate:"required"`
}

type CreateSegmentResponseOption func(f *CreateSegmentResponse)

func WithCreateSegmentResponseSize(val float32) CreateSegmentResponseOption {
	return func(f *CreateSegmentResponse) {
		f.Size = &val
	}
}

// NewCreateSegmentResponse instantiates a new CreateSegmentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSegmentResponse(segmentID string, updatedAt string, opts ...CreateSegmentResponseOption) *CreateSegmentResponse {
	this := &CreateSegmentResponse{}
	this.SegmentID = segmentID
	this.UpdatedAt = updatedAt
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewCreateSegmentResponseWithDefaults instantiates a new CreateSegmentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSegmentResponseWithDefaults() *CreateSegmentResponse {
	this := &CreateSegmentResponse{}
	return this
}

// GetSegmentID returns the SegmentID field value
func (o *CreateSegmentResponse) GetSegmentID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SegmentID
}

// GetSegmentIDOk returns a tuple with the SegmentID field value
// and a boolean to check if the value has been set.
func (o *CreateSegmentResponse) GetSegmentIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SegmentID, true
}

// SetSegmentID sets field value
func (o *CreateSegmentResponse) SetSegmentID(v string) {
	o.SegmentID = v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *CreateSegmentResponse) GetSize() float32 {
	if o == nil || o.Size == nil {
		var ret float32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSegmentResponse) GetSizeOk() (*float32, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *CreateSegmentResponse) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given float32 and assigns it to the Size field.
func (o *CreateSegmentResponse) SetSize(v float32) {
	o.Size = &v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *CreateSegmentResponse) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *CreateSegmentResponse) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *CreateSegmentResponse) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

func (o CreateSegmentResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["segmentID"] = o.SegmentID
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if true {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

func (o CreateSegmentResponse) String() string {
	out := ""
	out += fmt.Sprintf("  segmentID=%v\n", o.SegmentID)
	out += fmt.Sprintf("  size=%v\n", o.Size)
	out += fmt.Sprintf("  updatedAt=%v\n", o.UpdatedAt)
	return fmt.Sprintf("CreateSegmentResponse {\n%s}", out)
}

type NullableCreateSegmentResponse struct {
	value *CreateSegmentResponse
	isSet bool
}

func (v NullableCreateSegmentResponse) Get() *CreateSegmentResponse {
	return v.value
}

func (v *NullableCreateSegmentResponse) Set(val *CreateSegmentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSegmentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSegmentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSegmentResponse(val *CreateSegmentResponse) *NullableCreateSegmentResponse {
	return &NullableCreateSegmentResponse{value: val, isSet: true}
}

func (v NullableCreateSegmentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSegmentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
