// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package predict

import (
	"encoding/json"
	"fmt"
)

// GetSegmentUsersResponse struct for GetSegmentUsersResponse
type GetSegmentUsersResponse struct {
	// The ID of the segment.
	SegmentID string        `json:"segmentID"`
	Users     []UserProfile `json:"users"`
	// The token is used to navigate backward in the user list. To navigate from the current user list to the previous page, the API generates the previous page token and it sends the token in the response, beside the current user list. NOTE: This body param cannot be used with `nextPageToken` at the same time.
	PreviousPageToken *string `json:"previousPageToken,omitempty"`
	// The token is used to navigate forward in the user list. To navigate from the current user list to the next page, the API generates the next page token and it sends the token in the response, beside the current user list. NOTE: This body param cannot be used with `previousPageToken` at the same time.
	NextPageToken *string `json:"nextPageToken,omitempty"`
}

type GetSegmentUsersResponseOption func(f *GetSegmentUsersResponse)

func WithGetSegmentUsersResponsePreviousPageToken(val string) GetSegmentUsersResponseOption {
	return func(f *GetSegmentUsersResponse) {
		f.PreviousPageToken = &val
	}
}

func WithGetSegmentUsersResponseNextPageToken(val string) GetSegmentUsersResponseOption {
	return func(f *GetSegmentUsersResponse) {
		f.NextPageToken = &val
	}
}

// NewGetSegmentUsersResponse instantiates a new GetSegmentUsersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSegmentUsersResponse(segmentID string, users []UserProfile, opts ...GetSegmentUsersResponseOption) *GetSegmentUsersResponse {
	this := &GetSegmentUsersResponse{}
	this.SegmentID = segmentID
	this.Users = users
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewGetSegmentUsersResponseWithDefaults instantiates a new GetSegmentUsersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSegmentUsersResponseWithDefaults() *GetSegmentUsersResponse {
	this := &GetSegmentUsersResponse{}
	return this
}

// GetSegmentID returns the SegmentID field value
func (o *GetSegmentUsersResponse) GetSegmentID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SegmentID
}

// GetSegmentIDOk returns a tuple with the SegmentID field value
// and a boolean to check if the value has been set.
func (o *GetSegmentUsersResponse) GetSegmentIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SegmentID, true
}

// SetSegmentID sets field value
func (o *GetSegmentUsersResponse) SetSegmentID(v string) {
	o.SegmentID = v
}

// GetUsers returns the Users field value
func (o *GetSegmentUsersResponse) GetUsers() []UserProfile {
	if o == nil {
		var ret []UserProfile
		return ret
	}

	return o.Users
}

// GetUsersOk returns a tuple with the Users field value
// and a boolean to check if the value has been set.
func (o *GetSegmentUsersResponse) GetUsersOk() ([]UserProfile, bool) {
	if o == nil {
		return nil, false
	}
	return o.Users, true
}

// SetUsers sets field value
func (o *GetSegmentUsersResponse) SetUsers(v []UserProfile) {
	o.Users = v
}

// GetPreviousPageToken returns the PreviousPageToken field value if set, zero value otherwise.
func (o *GetSegmentUsersResponse) GetPreviousPageToken() string {
	if o == nil || o.PreviousPageToken == nil {
		var ret string
		return ret
	}
	return *o.PreviousPageToken
}

// GetPreviousPageTokenOk returns a tuple with the PreviousPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSegmentUsersResponse) GetPreviousPageTokenOk() (*string, bool) {
	if o == nil || o.PreviousPageToken == nil {
		return nil, false
	}
	return o.PreviousPageToken, true
}

// HasPreviousPageToken returns a boolean if a field has been set.
func (o *GetSegmentUsersResponse) HasPreviousPageToken() bool {
	if o != nil && o.PreviousPageToken != nil {
		return true
	}

	return false
}

// SetPreviousPageToken gets a reference to the given string and assigns it to the PreviousPageToken field.
func (o *GetSegmentUsersResponse) SetPreviousPageToken(v string) {
	o.PreviousPageToken = &v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *GetSegmentUsersResponse) GetNextPageToken() string {
	if o == nil || o.NextPageToken == nil {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSegmentUsersResponse) GetNextPageTokenOk() (*string, bool) {
	if o == nil || o.NextPageToken == nil {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *GetSegmentUsersResponse) HasNextPageToken() bool {
	if o != nil && o.NextPageToken != nil {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *GetSegmentUsersResponse) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

func (o GetSegmentUsersResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["segmentID"] = o.SegmentID
	}
	if true {
		toSerialize["users"] = o.Users
	}
	if o.PreviousPageToken != nil {
		toSerialize["previousPageToken"] = o.PreviousPageToken
	}
	if o.NextPageToken != nil {
		toSerialize["nextPageToken"] = o.NextPageToken
	}
	return json.Marshal(toSerialize)
}

func (o GetSegmentUsersResponse) String() string {
	out := ""
	out += fmt.Sprintf("  segmentID=%v\n", o.SegmentID)
	out += fmt.Sprintf("  users=%v\n", o.Users)
	out += fmt.Sprintf("  previousPageToken=%v\n", o.PreviousPageToken)
	out += fmt.Sprintf("  nextPageToken=%v\n", o.NextPageToken)
	return fmt.Sprintf("GetSegmentUsersResponse {\n%s}", out)
}

type NullableGetSegmentUsersResponse struct {
	value *GetSegmentUsersResponse
	isSet bool
}

func (v NullableGetSegmentUsersResponse) Get() *GetSegmentUsersResponse {
	return v.value
}

func (v *NullableGetSegmentUsersResponse) Set(val *GetSegmentUsersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSegmentUsersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSegmentUsersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSegmentUsersResponse(val *GetSegmentUsersResponse) *NullableGetSegmentUsersResponse {
	return &NullableGetSegmentUsersResponse{value: val, isSet: true}
}

func (v NullableGetSegmentUsersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSegmentUsersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
