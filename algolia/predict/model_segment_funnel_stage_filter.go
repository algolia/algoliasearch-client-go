// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package predict

import (
	"encoding/json"
	"fmt"
)

// SegmentFunnelStageFilter Filter for funnel stage model predictions.
type SegmentFunnelStageFilter struct {
	Operator    *SegmentFilterOperatorBoolean `json:"operator,omitempty"`
	Value       string                        `json:"value"`
	Probability SegmentFilterProbability      `json:"probability"`
}

type SegmentFunnelStageFilterOption func(f *SegmentFunnelStageFilter)

func WithSegmentFunnelStageFilterOperator(val SegmentFilterOperatorBoolean) SegmentFunnelStageFilterOption {
	return func(f *SegmentFunnelStageFilter) {
		f.Operator = &val
	}
}

// NewSegmentFunnelStageFilter instantiates a new SegmentFunnelStageFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSegmentFunnelStageFilter(value string, probability SegmentFilterProbability, opts ...SegmentFunnelStageFilterOption) *SegmentFunnelStageFilter {
	this := &SegmentFunnelStageFilter{}
	this.Value = value
	this.Probability = probability
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewSegmentFunnelStageFilterWithDefaults instantiates a new SegmentFunnelStageFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSegmentFunnelStageFilterWithDefaults() *SegmentFunnelStageFilter {
	this := &SegmentFunnelStageFilter{}
	var operator SegmentFilterOperatorBoolean = SEGMENTFILTEROPERATORBOOLEAN_EQ
	this.Operator = &operator
	return this
}

// GetOperator returns the Operator field value if set, zero value otherwise.
func (o *SegmentFunnelStageFilter) GetOperator() SegmentFilterOperatorBoolean {
	if o == nil || o.Operator == nil {
		var ret SegmentFilterOperatorBoolean
		return ret
	}
	return *o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SegmentFunnelStageFilter) GetOperatorOk() (*SegmentFilterOperatorBoolean, bool) {
	if o == nil || o.Operator == nil {
		return nil, false
	}
	return o.Operator, true
}

// HasOperator returns a boolean if a field has been set.
func (o *SegmentFunnelStageFilter) HasOperator() bool {
	if o != nil && o.Operator != nil {
		return true
	}

	return false
}

// SetOperator gets a reference to the given SegmentFilterOperatorBoolean and assigns it to the Operator field.
func (o *SegmentFunnelStageFilter) SetOperator(v SegmentFilterOperatorBoolean) {
	o.Operator = &v
}

// GetValue returns the Value field value
func (o *SegmentFunnelStageFilter) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *SegmentFunnelStageFilter) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *SegmentFunnelStageFilter) SetValue(v string) {
	o.Value = v
}

// GetProbability returns the Probability field value
func (o *SegmentFunnelStageFilter) GetProbability() SegmentFilterProbability {
	if o == nil {
		var ret SegmentFilterProbability
		return ret
	}

	return o.Probability
}

// GetProbabilityOk returns a tuple with the Probability field value
// and a boolean to check if the value has been set.
func (o *SegmentFunnelStageFilter) GetProbabilityOk() (*SegmentFilterProbability, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Probability, true
}

// SetProbability sets field value
func (o *SegmentFunnelStageFilter) SetProbability(v SegmentFilterProbability) {
	o.Probability = v
}

func (o SegmentFunnelStageFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.Operator != nil {
		toSerialize["operator"] = o.Operator
	}
	if true {
		toSerialize["value"] = o.Value
	}
	if true {
		toSerialize["probability"] = o.Probability
	}
	return json.Marshal(toSerialize)
}

func (o SegmentFunnelStageFilter) String() string {
	out := ""
	out += fmt.Sprintf("  operator=%v\n", o.Operator)
	out += fmt.Sprintf("  value=%v\n", o.Value)
	out += fmt.Sprintf("  probability=%v\n", o.Probability)
	return fmt.Sprintf("SegmentFunnelStageFilter {\n%s}", out)
}

type NullableSegmentFunnelStageFilter struct {
	value *SegmentFunnelStageFilter
	isSet bool
}

func (v NullableSegmentFunnelStageFilter) Get() *SegmentFunnelStageFilter {
	return v.value
}

func (v *NullableSegmentFunnelStageFilter) Set(val *SegmentFunnelStageFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableSegmentFunnelStageFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableSegmentFunnelStageFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSegmentFunnelStageFilter(val *SegmentFunnelStageFilter) *NullableSegmentFunnelStageFilter {
	return &NullableSegmentFunnelStageFilter{value: val, isSet: true}
}

func (v NullableSegmentFunnelStageFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSegmentFunnelStageFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
