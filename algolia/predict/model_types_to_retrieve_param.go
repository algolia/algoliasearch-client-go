// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package predict

import (
	"encoding/json"
	"fmt"
)

// TypesToRetrieveParam struct for TypesToRetrieveParam
type TypesToRetrieveParam struct {
	TypesToRetrieve []TypesToRetrieve `json:"typesToRetrieve,omitempty"`
}

type TypesToRetrieveParamOption func(f *TypesToRetrieveParam)

func WithTypesToRetrieveParamTypesToRetrieve(val []TypesToRetrieve) TypesToRetrieveParamOption {
	return func(f *TypesToRetrieveParam) {
		f.TypesToRetrieve = val
	}
}

// NewTypesToRetrieveParam instantiates a new TypesToRetrieveParam object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTypesToRetrieveParam(opts ...TypesToRetrieveParamOption) *TypesToRetrieveParam {
	this := &TypesToRetrieveParam{}
	for _, opt := range opts {
		opt(this)
	}
	return this
}

// NewTypesToRetrieveParamWithDefaults instantiates a new TypesToRetrieveParam object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTypesToRetrieveParamWithDefaults() *TypesToRetrieveParam {
	this := &TypesToRetrieveParam{}
	return this
}

// GetTypesToRetrieve returns the TypesToRetrieve field value if set, zero value otherwise.
func (o *TypesToRetrieveParam) GetTypesToRetrieve() []TypesToRetrieve {
	if o == nil || o.TypesToRetrieve == nil {
		var ret []TypesToRetrieve
		return ret
	}
	return o.TypesToRetrieve
}

// GetTypesToRetrieveOk returns a tuple with the TypesToRetrieve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypesToRetrieveParam) GetTypesToRetrieveOk() ([]TypesToRetrieve, bool) {
	if o == nil || o.TypesToRetrieve == nil {
		return nil, false
	}
	return o.TypesToRetrieve, true
}

// HasTypesToRetrieve returns a boolean if a field has been set.
func (o *TypesToRetrieveParam) HasTypesToRetrieve() bool {
	if o != nil && o.TypesToRetrieve != nil {
		return true
	}

	return false
}

// SetTypesToRetrieve gets a reference to the given []TypesToRetrieve and assigns it to the TypesToRetrieve field.
func (o *TypesToRetrieveParam) SetTypesToRetrieve(v []TypesToRetrieve) {
	o.TypesToRetrieve = v
}

func (o TypesToRetrieveParam) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if o.TypesToRetrieve != nil {
		toSerialize["typesToRetrieve"] = o.TypesToRetrieve
	}
	return json.Marshal(toSerialize)
}

func (o TypesToRetrieveParam) String() string {
	out := "TypesToRetrieveParam {\n"
	out += fmt.Sprintf("  typesToRetrieve=%v\n", o.TypesToRetrieve)
	out += "}"
	return out
}

type NullableTypesToRetrieveParam struct {
	value *TypesToRetrieveParam
	isSet bool
}

func (v NullableTypesToRetrieveParam) Get() *TypesToRetrieveParam {
	return v.value
}

func (v *NullableTypesToRetrieveParam) Set(val *TypesToRetrieveParam) {
	v.value = val
	v.isSet = true
}

func (v NullableTypesToRetrieveParam) IsSet() bool {
	return v.isSet
}

func (v *NullableTypesToRetrieveParam) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTypesToRetrieveParam(val *TypesToRetrieveParam) *NullableTypesToRetrieveParam {
	return &NullableTypesToRetrieveParam{value: val, isSet: true}
}

func (v NullableTypesToRetrieveParam) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTypesToRetrieveParam) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
