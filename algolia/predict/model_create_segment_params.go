// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package predict

import (
	"encoding/json"
	"fmt"
)

// CreateSegmentParams struct for CreateSegmentParams
type CreateSegmentParams struct {
	// The name or description of the segment.
	Name       string                  `json:"name" validate:"required"`
	Conditions SegmentParentConditions `json:"conditions" validate:"required"`
}

// NewCreateSegmentParams instantiates a new CreateSegmentParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSegmentParams(name string, conditions SegmentParentConditions) *CreateSegmentParams {
	this := &CreateSegmentParams{}
	this.Name = name
	this.Conditions = conditions
	return this
}

// NewCreateSegmentParamsWithDefaults instantiates a new CreateSegmentParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSegmentParamsWithDefaults() *CreateSegmentParams {
	this := &CreateSegmentParams{}
	return this
}

// GetName returns the Name field value
func (o *CreateSegmentParams) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateSegmentParams) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateSegmentParams) SetName(v string) {
	o.Name = v
}

// GetConditions returns the Conditions field value
func (o *CreateSegmentParams) GetConditions() SegmentParentConditions {
	if o == nil {
		var ret SegmentParentConditions
		return ret
	}

	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value
// and a boolean to check if the value has been set.
func (o *CreateSegmentParams) GetConditionsOk() (*SegmentParentConditions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Conditions, true
}

// SetConditions sets field value
func (o *CreateSegmentParams) SetConditions(v SegmentParentConditions) {
	o.Conditions = v
}

func (o CreateSegmentParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["conditions"] = o.Conditions
	}
	return json.Marshal(toSerialize)
}

func (o CreateSegmentParams) String() string {
	out := ""
	out += fmt.Sprintf("  name=%v\n", o.Name)
	out += fmt.Sprintf("  conditions=%v\n", o.Conditions)
	return fmt.Sprintf("CreateSegmentParams {\n%s}", out)
}

type NullableCreateSegmentParams struct {
	value *CreateSegmentParams
	isSet bool
}

func (v NullableCreateSegmentParams) Get() *CreateSegmentParams {
	return v.value
}

func (v *NullableCreateSegmentParams) Set(val *CreateSegmentParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSegmentParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSegmentParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSegmentParams(val *CreateSegmentParams) *NullableCreateSegmentParams {
	return &NullableCreateSegmentParams{value: val, isSet: true}
}

func (v NullableCreateSegmentParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSegmentParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
