// Code generated by OpenAPI Generator (https://openapi-generator.tech), manual changes will be lost - read more on https://github.com/algolia/api-clients-automation. DO NOT EDIT.
package predict

import (
	"encoding/json"
	"fmt"
)

// DeleteModelInstanceResponse struct for DeleteModelInstanceResponse
type DeleteModelInstanceResponse struct {
	// The ID of the model.
	ModelID string `json:"modelID" validate:"required"`
	// The date until which you can safely consider the data as being deleted.
	DeletedUntil string `json:"deletedUntil" validate:"required"`
}

// NewDeleteModelInstanceResponse instantiates a new DeleteModelInstanceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteModelInstanceResponse(modelID string, deletedUntil string) *DeleteModelInstanceResponse {
	this := &DeleteModelInstanceResponse{}
	this.ModelID = modelID
	this.DeletedUntil = deletedUntil
	return this
}

// NewDeleteModelInstanceResponseWithDefaults instantiates a new DeleteModelInstanceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteModelInstanceResponseWithDefaults() *DeleteModelInstanceResponse {
	this := &DeleteModelInstanceResponse{}
	return this
}

// GetModelID returns the ModelID field value
func (o *DeleteModelInstanceResponse) GetModelID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModelID
}

// GetModelIDOk returns a tuple with the ModelID field value
// and a boolean to check if the value has been set.
func (o *DeleteModelInstanceResponse) GetModelIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModelID, true
}

// SetModelID sets field value
func (o *DeleteModelInstanceResponse) SetModelID(v string) {
	o.ModelID = v
}

// GetDeletedUntil returns the DeletedUntil field value
func (o *DeleteModelInstanceResponse) GetDeletedUntil() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeletedUntil
}

// GetDeletedUntilOk returns a tuple with the DeletedUntil field value
// and a boolean to check if the value has been set.
func (o *DeleteModelInstanceResponse) GetDeletedUntilOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeletedUntil, true
}

// SetDeletedUntil sets field value
func (o *DeleteModelInstanceResponse) SetDeletedUntil(v string) {
	o.DeletedUntil = v
}

func (o DeleteModelInstanceResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]any{}
	if true {
		toSerialize["modelID"] = o.ModelID
	}
	if true {
		toSerialize["deletedUntil"] = o.DeletedUntil
	}
	return json.Marshal(toSerialize)
}

func (o DeleteModelInstanceResponse) String() string {
	out := ""
	out += fmt.Sprintf("  modelID=%v\n", o.ModelID)
	out += fmt.Sprintf("  deletedUntil=%v\n", o.DeletedUntil)
	return fmt.Sprintf("DeleteModelInstanceResponse {\n%s}", out)
}

type NullableDeleteModelInstanceResponse struct {
	value *DeleteModelInstanceResponse
	isSet bool
}

func (v NullableDeleteModelInstanceResponse) Get() *DeleteModelInstanceResponse {
	return v.value
}

func (v *NullableDeleteModelInstanceResponse) Set(val *DeleteModelInstanceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteModelInstanceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteModelInstanceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteModelInstanceResponse(val *DeleteModelInstanceResponse) *NullableDeleteModelInstanceResponse {
	return &NullableDeleteModelInstanceResponse{value: val, isSet: true}
}

func (v NullableDeleteModelInstanceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteModelInstanceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
